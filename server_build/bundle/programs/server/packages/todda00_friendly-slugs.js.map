{"version":3,"sources":["meteor://💻app/packages/todda00_friendly-slugs/slugs.coffee"],"names":[],"mappings":"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","file":"/packages/todda00_friendly-slugs.js","sourcesContent":["# backwards compatibility\nif typeof Mongo is \"undefined\"\n  Mongo = {}\n  Mongo.Collection = Meteor.Collection\n\nMongo.Collection.prototype.friendlySlugs = (options = {}) ->\n  collection = @\n\n  if !_.isArray(options)\n    options = [options]\n\n  _.each options, (opts) ->\n    if _.isString(opts)\n      opts = {\n        slugFrom: [opts]\n      }\n    opts.slugFrom = [opts.slugFrom] if _.isString opts.slugFrom\n\n    defaults =\n      slugFrom: ['name']\n      slugField: 'slug'\n      distinct: true\n      distinctUpTo: []\n      updateSlug: true\n      createOnUpdate: true\n      maxLength: 0\n      debug: false\n      transliteration: [\n        {from: 'àáâäåãа', to: 'a'}\n        {from: 'б',      to: 'b'}\n        {from: 'ç',      to: 'c'}\n        {from: 'д',      to: 'd'}\n        {from: 'èéêëẽэе',to: 'e'}\n        {from: 'ф',      to: 'f'}\n        {from: 'г',      to: 'g'}\n        {from: 'х',      to: 'h'}\n        {from: 'ìíîïи',  to: 'i'}\n        {from: 'к',      to: 'k'}\n        {from: 'л',      to: 'l'}\n        {from: 'м',      to: 'm'}\n        {from: 'ñн',     to: 'n'}\n        {from: 'òóôöõо', to: 'o'}\n        {from: 'п',      to: 'p'}\n        {from: 'р',      to: 'r'}\n        {from: 'с',      to: 's'}\n        {from: 'т',      to: 't'}\n        {from: 'ùúûüу',  to: 'u'}\n        {from: 'в',      to: 'v'}\n        {from: 'йы',     to: 'y'}\n        {from: 'з',      to: 'z'}\n        {from: 'æ',      to: 'ae'}\n        {from: 'ч',      to: 'ch'}\n        {from: 'щ',      to: 'sch'}\n        {from: 'ш',      to: 'sh'}\n        {from: 'ц',      to: 'ts'}\n        {from: 'я',      to: 'ya'}\n        {from: 'ю',      to: 'yu'}\n        {from: 'ж',      to: 'zh'}\n        {from: 'ъь',     to: ''}\n      ]\n\n    _.defaults(opts, defaults)\n\n    fields =\n      slugFrom: Array\n      slugField: String\n      distinct: Boolean\n      createOnUpdate: Boolean\n      maxLength: Number\n      debug: Boolean\n\n    if typeof opts.updateSlug != \"function\"\n      if (opts.updateSlug)\n        opts.updateSlug = () -> true\n      else\n        opts.updateSlug = () -> false\n\n\n    check(opts,Match.ObjectIncluding(fields))\n\n    collection.before.insert (userId, doc) ->\n      fsDebug(opts,'before.insert function')\n      runSlug(doc,opts)\n      return\n\n    collection.before.update (userId, doc, fieldNames, modifier, options) ->\n      fsDebug(opts,'before.update function')\n      cleanModifier = () ->\n        #Cleanup the modifier if needed\n        delete modifier.$set if _.isEmpty(modifier.$set)\n\n      #Don't do anything if this is a multi doc update\n      options = options || {}\n      if options.multi\n        fsDebug(opts,\"multi doc update attempted, can't update slugs this way, leaving.\")\n        return true\n\n      modifier = modifier || {}\n      modifier.$set = modifier.$set || {}\n\n      #Don't do anything if all the slugFrom fields aren't present (before or after update)\n      cont = false\n      _.each opts.slugFrom, (slugFrom) ->\n        cont = true if stringToNested(doc, slugFrom) || modifier.$set[slugFrom]? || stringToNested(modifier.$set, slugFrom)\n      if !cont\n        fsDebug(opts,\"no slugFrom fields are present (either before or after update), leaving.\")\n        cleanModifier()\n        return true\n\n      #See if any of the slugFrom fields have changed\n      slugFromChanged = false\n      _.each opts.slugFrom, (slugFrom) ->\n        if modifier.$set[slugFrom]? || stringToNested(modifier.$set, slugFrom)\n          docFrom = stringToNested(doc, slugFrom)\n          if (docFrom isnt modifier.$set[slugFrom]) and (docFrom isnt stringToNested(modifier.$set, slugFrom))\n            slugFromChanged = true\n\n      fsDebug(opts,slugFromChanged,'slugFromChanged')\n\n      #Is the slug missing / Is this an existing item we have added a slug to? AND are we supposed to create a slug on update?\n      if !stringToNested(doc, opts.slugField) and opts.createOnUpdate\n        fsDebug(opts,'Update: Slug Field is missing and createOnUpdate is set to true')\n\n        if slugFromChanged\n          fsDebug(opts,'slugFrom field has changed, runSlug with modifier')\n          runSlug(doc, opts, modifier)\n        else\n          #Run the slug to create\n          fsDebug(opts,'runSlug to create')\n          runSlug(doc, opts, modifier, true)\n          cleanModifier()\n          return true\n\n      else\n        # Don't change anything on update if updateSlug is false\n        if opts.updateSlug?(doc, modifier) is false\n          fsDebug(opts,'updateSlug is false, nothing to do.')\n          cleanModifier()\n          return true\n\n        #Don't do anything if the slug from field has not changed\n        if !slugFromChanged\n          fsDebug(opts,'slugFrom field has not changed, nothing to do.')\n          cleanModifier()\n          return true\n\n        runSlug(doc, opts, modifier)\n\n        cleanModifier()\n        return true\n\n      cleanModifier()\n      return true\n    return\n  runSlug = (doc, opts, modifier = false, create = false) ->\n    fsDebug(opts,'Begin runSlug')\n    fsDebug(opts,opts,'Options')\n    fsDebug(opts,modifier, 'Modifier')\n    fsDebug(opts,create,'Create')\n\n    combineFrom = (doc, fields, modifierDoc) ->\n      fromValues = []\n      _.each fields, (f) ->\n        if modifierDoc?\n          if stringToNested(modifierDoc, f)\n            val = stringToNested(modifierDoc, f)\n          else\n            val = stringToNested(doc, f)\n        else\n          val = stringToNested(doc, f)\n        fromValues.push(val) if val\n      return false if fromValues.length == 0\n      return fromValues.join('-')\n\n    from = if create or !modifier then combineFrom(doc, opts.slugFrom) else combineFrom(doc, opts.slugFrom, modifier.$set)\n\n    if from == false\n      fsDebug(opts,\"Nothing to slug from, leaving.\")\n      return true\n\n    fsDebug(opts,from,'Slugging From')\n\n    slugBase = slugify(from, opts.transliteration, opts.maxLength)\n    return false if !slugBase\n\n    fsDebug(opts,slugBase,'SlugBase before reduction')\n\n    if opts.distinct\n\n      # Check to see if this base has a -[0-9999...] at the end, reduce to a real base\n      slugBase = slugBase.replace(/(-\\d+)+$/,'')\n      fsDebug(opts,slugBase,'SlugBase after reduction')\n\n      baseField = \"friendlySlugs.\" + opts.slugField + \".base\"\n      indexField = \"friendlySlugs.\" + opts.slugField + \".index\"\n\n      fieldSelector = {}\n      fieldSelector[baseField] = slugBase\n\n      i = 0\n      while i < opts.distinctUpTo.length\n        f = opts.distinctUpTo[i]\n        fieldSelector[f] = doc[f]\n        i++\n\n      sortSelector = {}\n      sortSelector[indexField] = -1\n\n      limitSelector = {}\n      limitSelector[indexField] = 1\n\n      result = collection.findOne(fieldSelector,\n        sort: sortSelector\n        fields: limitSelector\n        limit:1\n      )\n\n      fsDebug(opts,result,'Highest indexed base found')\n\n      if !result? || !result.friendlySlugs? || !result.friendlySlugs[opts.slugField]? || !result.friendlySlugs[opts.slugField].index?\n        index = 0\n      else\n        index = result.friendlySlugs[opts.slugField].index + 1\n\n      defaultSlugGenerator = (slugBase, index) ->\n        if index is 0 then slugBase else slugBase + '-' + index\n\n      slugGenerator = opts.slugGenerator ? defaultSlugGenerator\n\n      finalSlug = slugGenerator(slugBase, index)\n\n    else\n      #Not distinct, just set the base\n      index = false\n      finalSlug = slugBase\n\n    fsDebug(opts,finalSlug,'finalSlug')\n\n    if modifier or create\n      fsDebug(opts,'Set to modify or create slug on update')\n      modifier = modifier || {}\n      modifier.$set = modifier.$set || {}\n      modifier.$set.friendlySlugs = doc.friendlySlugs || {}\n      modifier.$set.friendlySlugs[opts.slugField] = modifier.$set.friendlySlugs[opts.slugField] || {}\n      modifier.$set.friendlySlugs[opts.slugField].base = slugBase\n      modifier.$set.friendlySlugs[opts.slugField].index = index\n      modifier.$set[opts.slugField] = finalSlug\n      fsDebug(opts,modifier,'Final Modifier')\n\n    else\n      fsDebug(opts,'Set to update')\n      doc.friendlySlugs = doc.friendlySlugs || {}\n      doc.friendlySlugs[opts.slugField] = doc.friendlySlugs[opts.slugField] || {}\n      doc.friendlySlugs[opts.slugField].base = slugBase\n      doc.friendlySlugs[opts.slugField].index = index\n      doc[opts.slugField] = finalSlug\n      fsDebug(opts,doc,'Final Doc')\n    return true\n\n  fsDebug = (opts, item, label = '')->\n    return if !opts.debug\n    if typeof item is 'object'\n      console.log \"friendlySlugs DEBUG: \" + label + '↓'\n      console.log item\n    else\n      console.log \"friendlySlugs DEBUG: \" + label + '= ' + item\n\nslugify = (text, transliteration, maxLength) ->\n  return false if !text?\n  return false if text.length < 1\n  text = text.toString().toLowerCase()\n  _.each transliteration, (item)->\n    text = text.replace(new RegExp('['+item.from+']','g'),item.to)\n  slug = text\n    .replace(/'/g, '')              # Remove all apostrophes\n    .replace(/[^0-9a-z-]/g, '-')    # Replace anything that is not 0-9, a-z, or - with -\n    .replace(/\\-\\-+/g, '-')         # Replace multiple - with single -\n    .replace(/^-+/, '')             # Trim - from start of text\n    .replace(/-+$/, '');            # Trim - from end of text\n  if maxLength > 0 && slug.length > maxLength\n    lastDash = slug.substring(0,maxLength).lastIndexOf('-')\n    slug = slug.substring(0,lastDash)\n  return slug\n\nstringToNested = (obj, path) ->\n  parts = path.split(\".\")\n  if parts.length==1\n    if obj? && obj[parts[0]]?\n      return obj[parts[0]]\n    else\n      return false\n  return stringToNested(obj[parts[0]], parts.slice(1).join(\".\"))\n"]}