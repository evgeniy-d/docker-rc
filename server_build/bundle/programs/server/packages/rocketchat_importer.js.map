{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:importer/server/classes/ImporterBase.js","meteor://ðŸ’»app/packages/rocketchat:importer/server/classes/ImporterProgress.js","meteor://ðŸ’»app/packages/rocketchat:importer/server/classes/ImporterSelection.js","meteor://ðŸ’»app/packages/rocketchat:importer/server/classes/ImporterSelectionChannel.js","meteor://ðŸ’»app/packages/rocketchat:importer/server/classes/ImporterSelectionUser.js","meteor://ðŸ’»app/packages/rocketchat:importer/server/classes/ImporterWebsocket.js","meteor://ðŸ’»app/packages/rocketchat:importer/server/models/Imports.js","meteor://ðŸ’»app/packages/rocketchat:importer/server/models/RawImports.js","meteor://ðŸ’»app/packages/rocketchat:importer/server/methods/getImportProgress.js","meteor://ðŸ’»app/packages/rocketchat:importer/server/methods/getSelectionData.js","meteor://ðŸ’»app/packages/rocketchat:importer/server/methods/prepareImport.js","meteor://ðŸ’»app/packages/rocketchat:importer/server/methods/restartImport.js","meteor://ðŸ’»app/packages/rocketchat:importer/server/methods/setupImporter.js","meteor://ðŸ’»app/packages/rocketchat:importer/server/methods/startImport.js","meteor://ðŸ’»app/packages/rocketchat:importer/server/startup/setImportsToInvalid.js","meteor://ðŸ’»app/packages/rocketchat:importer/server/index.js","meteor://ðŸ’»app/packages/rocketchat:importer/lib/ImporterInfo.js","meteor://ðŸ’»app/packages/rocketchat:importer/lib/ImporterProgressStep.js","meteor://ðŸ’»app/packages/rocketchat:importer/lib/Importers.js"],"names":["module","export","Base","Progress","watch","require","v","ProgressStep","Selection","Imports","ImporterInfo","RawImports","ImporterWebsocket","http","default","https","AdmZip","getFileType","getBSONSize","item","BSON","bson","calculateObjectSize","getMaxBSONSize","getBSONSafeArraysFromAnArray","theArray","BSONSize","maxSize","Math","floor","length","ceil","safeArrays","i","push","slice","constructor","info","Error","prepare","bind","startImport","getSelection","getProgress","updateProgress","addCountToTotal","addCountCompleted","updateRecord","uploadFile","logger","Logger","name","progress","key","collection","importId","insert","Date","now","step","Meteor","user","_id","importRecord","findOne","users","channels","messages","oldSettings","debug","dataURI","sentContentType","fileName","skipTypeCheck","fileType","Buffer","split","mimeType","mime","warn","ERROR","PREPARING_STARTED","importSelection","undefined","IMPORTING_STARTED","Accounts_AllowedDomainsList","RocketChat","models","Settings","findOneById","value","updateValueById","Accounts_AllowUsernameChange","FileUpload_MaxFileSize","DONE","progressUpdated","count","total","completed","fields","update","$set","details","fileUrl","room","timeStamp","requestModule","test","fileStore","FileUpload","getStore","get","bindEnvironment","res","rawData","on","chunk","concat","err","file","url","replace","absoluteUrl","attachment","title","title_link","type","image_url","image_type","image_size","size","image_dimensions","identify","audio_url","audio_type","audio_size","video_url","video_type","video_size","msg","rid","ts","groupable","attachments","message_id","sendMessage","NEW","message_count","SelectionChannel","channel_id","is_archived","do_import","is_private","SelectionUser","user_id","username","email","is_deleted","is_bot","ImporterWebsocketDef","streamer","Streamer","retransmit","allowRead","allowEmit","allowWrite","emit","ImportsModel","_Base","RawImportsModel","Importers","methods","getImportProgress","userId","method","authz","hasPermission","importer","instance","getSelectionData","USER_SELECTION","prepareImport","contentType","check","String","results","Promise","catch","e","restartImport","CANCELLED","valid","setupImporter","console","input","usersSelection","map","channelsSelection","channel","selection","startup","$ne","multi","model","rawCollection","drop","log","warnings","Object","freeze","PREPARING_USERS","PREPARING_CHANNELS","PREPARING_MESSAGES","IMPORTING_USERS","IMPORTING_CHANNELS","IMPORTING_MESSAGES","FINISHING","ImportersContainer","importers","Map","add","set","getAll","Array","from","values"],"mappings":"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","file":"/packages/rocketchat_importer.js","sourcesContent":["import { Progress } from './ImporterProgress';\nimport { ProgressStep } from '../../lib/ImporterProgressStep';\nimport { Selection } from './ImporterSelection';\nimport { Imports } from '../models/Imports';\nimport { ImporterInfo } from '../../lib/ImporterInfo';\nimport { RawImports } from '../models/RawImports';\nimport { ImporterWebsocket } from './ImporterWebsocket';\n\nimport http from 'http';\nimport https from 'https';\nimport AdmZip from 'adm-zip';\nimport getFileType from 'file-type';\n\n/**\n * Base class for all of the importers.\n */\nexport class Base {\n\t/**\n\t * The max BSON object size we can store in MongoDB is 16777216 bytes\n\t * but for some reason the mongo instanace which comes with Meteor\n\t * errors out for anything close to that size. So, we are rounding it\n\t * down to 8000000 bytes.\n\t *\n\t * @param {any} item The item to calculate the BSON size of.\n\t * @returns {number} The size of the item passed in.\n\t * @static\n\t */\n\tstatic getBSONSize(item) {\n\t\tconst { BSON } = require('bson');\n\t\tconst bson = new BSON();\n\t\treturn bson.calculateObjectSize(item);\n\t}\n\n\t/**\n\t * The max BSON object size we can store in MongoDB is 16777216 bytes\n\t * but for some reason the mongo instanace which comes with Meteor\n\t * errors out for anything close to that size. So, we are rounding it\n\t * down to 8000000 bytes.\n\t *\n\t * @returns {number} 8000000 bytes.\n\t */\n\tstatic getMaxBSONSize() {\n\t\treturn 8000000;\n\t}\n\n\t/**\n\t * Splits the passed in array to at least one array which has a size that\n\t * is safe to store in the database.\n\t *\n\t * @param {any[]} theArray The array to split out\n\t * @returns {any[][]} The safe sized arrays\n\t * @static\n\t */\n\tstatic getBSONSafeArraysFromAnArray(theArray) {\n\t\tconst BSONSize = Base.getBSONSize(theArray);\n\t\tconst maxSize = Math.floor(theArray.length / (Math.ceil(BSONSize / Base.getMaxBSONSize())));\n\t\tconst safeArrays = [];\n\t\tlet i = 0;\n\t\twhile (i < theArray.length) {\n\t\t\tsafeArrays.push(theArray.slice(i, (i += maxSize)));\n\t\t}\n\t\treturn safeArrays;\n\t}\n\n\t/**\n\t * Constructs a new importer, adding an empty collection, AdmZip property, and empty users & channels\n\t *\n\t * @param {string} name The importer's name.\n\t * @param {string} description The i18n string which describes the importer\n\t * @param {string} mimeType The expected file type.\n\t */\n\tconstructor(info) {\n\t\tif (!(info instanceof ImporterInfo)) {\n\t\t\tthrow new Error('Information passed in must be a valid ImporterInfo instance.');\n\t\t}\n\n\t\tthis.http = http;\n\t\tthis.https = https;\n\t\tthis.AdmZip = AdmZip;\n\t\tthis.getFileType = getFileType;\n\n\t\tthis.prepare = this.prepare.bind(this);\n\t\tthis.startImport = this.startImport.bind(this);\n\t\tthis.getSelection = this.getSelection.bind(this);\n\t\tthis.getProgress = this.getProgress.bind(this);\n\t\tthis.updateProgress = this.updateProgress.bind(this);\n\t\tthis.addCountToTotal = this.addCountToTotal.bind(this);\n\t\tthis.addCountCompleted = this.addCountCompleted.bind(this);\n\t\tthis.updateRecord = this.updateRecord.bind(this);\n\t\tthis.uploadFile = this.uploadFile.bind(this);\n\n\t\tthis.info = info;\n\n\t\tthis.logger = new Logger(`${ this.info.name } Importer`, {});\n\t\tthis.progress = new Progress(this.info.key, this.info.name);\n\t\tthis.collection = RawImports;\n\n\t\tconst importId = Imports.insert({ 'type': this.info.name, 'ts': Date.now(), 'status': this.progress.step, 'valid': true, 'user': Meteor.user()._id });\n\t\tthis.importRecord = Imports.findOne(importId);\n\n\t\tthis.users = {};\n\t\tthis.channels = {};\n\t\tthis.messages = {};\n\t\tthis.oldSettings = {};\n\n\t\tthis.logger.debug(`Constructed a new ${ info.name } Importer.`);\n\t}\n\n\t/**\n\t * Takes the uploaded file and extracts the users, channels, and messages from it.\n\t *\n\t * @param {string} dataURI Base64 string of the uploaded file\n\t * @param {string} sentContentType The sent file type.\n\t * @param {string} fileName The name of the uploaded file.\n\t * @param {boolean} skipTypeCheck Optional property that says to not check the type provided.\n\t * @returns {Progress} The progress record of the import.\n\t */\n\tprepare(dataURI, sentContentType, fileName, skipTypeCheck) {\n\t\tif (!skipTypeCheck) {\n\t\t\tconst fileType = this.getFileType(new Buffer(dataURI.split(',')[1], 'base64'));\n\t\t\tthis.logger.debug('Uploaded file information is:', fileType);\n\t\t\tthis.logger.debug('Expected file type is:', this.info.mimeType);\n\n\t\t\tif (!fileType || (fileType.mime !== this.info.mimeType)) {\n\t\t\t\tthis.logger.warn(`Invalid file uploaded for the ${ this.info.name } importer.`);\n\t\t\t\tthis.updateProgress(ProgressStep.ERROR);\n\t\t\t\tthrow new Meteor.Error('error-invalid-file-uploaded', `Invalid file uploaded to import ${ this.info.name } data from.`, { step: 'prepare' });\n\t\t\t}\n\t\t}\n\n\t\tthis.updateProgress(ProgressStep.PREPARING_STARTED);\n\t\treturn this.updateRecord({ 'file': fileName });\n\t}\n\n\t/**\n\t * Starts the import process. The implementing method should defer\n\t * as soon as the selection is set, so the user who started the process\n\t * doesn't end up with a \"locked\" UI while Meteor waits for a response.\n\t * The returned object should be the progress.\n\t *\n\t * @param {Selection} importSelection The selection data.\n\t * @returns {Progress} The progress record of the import.\n\t */\n\tstartImport(importSelection) {\n\t\tif (!(importSelection instanceof Selection)) {\n\t\t\tthrow new Error(`Invalid Selection data provided to the ${ this.info.name } importer.`);\n\t\t} else if (importSelection.users === undefined) {\n\t\t\tthrow new Error(`Users in the selected data wasn't found, it must but at least an empty array for the ${ this.info.name } importer.`);\n\t\t} else if (importSelection.channels === undefined) {\n\t\t\tthrow new Error(`Channels in the selected data wasn't found, it must but at least an empty array for the ${ this.info.name } importer.`);\n\t\t}\n\n\t\treturn this.updateProgress(ProgressStep.IMPORTING_STARTED);\n\t}\n\n\t/**\n\t * Gets the Selection object for the import.\n\t *\n\t * @returns {Selection} The users and channels selection\n\t */\n\tgetSelection() {\n\t\tthrow new Error(`Invalid 'getSelection' called on ${ this.info.name }, it must be overridden and super can not be called.`);\n\t}\n\n\t/**\n\t * Gets the progress of this import.\n\t *\n\t * @returns {Progress} The progress record of the import.\n\t */\n\tgetProgress() {\n\t\treturn this.progress;\n\t}\n\n\t/**\n\t * Updates the progress step of this importer.\n\t * It also changes some internal settings at various stages of the import.\n\t * This way the importer can adjust user/room information at will.\n\t *\n\t * @param {ProgressStep} step The progress step which this import is currently at.\n\t * @returns {Progress} The progress record of the import.\n\t */\n\tupdateProgress(step) {\n\t\tthis.progress.step = step;\n\n\t\tswitch (step) {\n\t\t\tcase ProgressStep.IMPORTING_STARTED:\n\t\t\t\tthis.oldSettings.Accounts_AllowedDomainsList = RocketChat.models.Settings.findOneById('Accounts_AllowedDomainsList').value;\n\t\t\t\tRocketChat.models.Settings.updateValueById('Accounts_AllowedDomainsList', '');\n\n\t\t\t\tthis.oldSettings.Accounts_AllowUsernameChange = RocketChat.models.Settings.findOneById('Accounts_AllowUsernameChange').value;\n\t\t\t\tRocketChat.models.Settings.updateValueById('Accounts_AllowUsernameChange', true);\n\n\t\t\t\tthis.oldSettings.FileUpload_MaxFileSize = RocketChat.models.Settings.findOneById('FileUpload_MaxFileSize').value;\n\t\t\t\tRocketChat.models.Settings.updateValueById('FileUpload_MaxFileSize', -1);\n\t\t\t\tbreak;\n\t\t\tcase ProgressStep.DONE:\n\t\t\tcase ProgressStep.ERROR:\n\t\t\t\tRocketChat.models.Settings.updateValueById('Accounts_AllowedDomainsList', this.oldSettings.Accounts_AllowedDomainsList);\n\t\t\t\tRocketChat.models.Settings.updateValueById('Accounts_AllowUsernameChange', this.oldSettings.Accounts_AllowUsernameChange);\n\t\t\t\tRocketChat.models.Settings.updateValueById('FileUpload_MaxFileSize', this.oldSettings.FileUpload_MaxFileSize);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.logger.debug(`${ this.info.name } is now at ${ step }.`);\n\t\tthis.updateRecord({ 'status': this.progress.step });\n\n\t\tImporterWebsocket.progressUpdated(this.progress);\n\n\t\treturn this.progress;\n\t}\n\n\t/**\n\t * Adds the passed in value to the total amount of items needed to complete.\n\t *\n\t * @param {number} count The amount to add to the total count of items.\n\t * @returns {Progress} The progress record of the import.\n\t */\n\taddCountToTotal(count) {\n\t\tthis.progress.count.total = this.progress.count.total + count;\n\t\tthis.updateRecord({ 'count.total': this.progress.count.total });\n\n\t\treturn this.progress;\n\t}\n\n\t/**\n\t * Adds the passed in value to the total amount of items completed.\n\t *\n\t * @param {number} count The amount to add to the total count of finished items.\n\t * @returns {Progress} The progress record of the import.\n\t */\n\taddCountCompleted(count) {\n\t\tthis.progress.count.completed = this.progress.count.completed + count;\n\n\t\t//Only update the database every 500 records\n\t\t//Or the completed is greater than or equal to the total amount\n\t\tif (((this.progress.count.completed % 500) === 0) || (this.progress.count.completed >= this.progress.count.total)) {\n\t\t\tthis.updateRecord({ 'count.completed': this.progress.count.completed });\n\t\t}\n\n\t\tImporterWebsocket.progressUpdated(this.progress);\n\n\t\treturn this.progress;\n\t}\n\n\t/**\n\t * Updates the import record with the given fields being `set`.\n\t *\n\t * @param {any} fields The fields to set, it should be an object with key/values.\n\t * @returns {Imports} The import record.\n\t */\n\tupdateRecord(fields) {\n\t\tImports.update({ _id: this.importRecord._id }, { $set: fields });\n\t\tthis.importRecord = Imports.findOne(this.importRecord._id);\n\n\t\treturn this.importRecord;\n\t}\n\n\t/**\n\t * Uploads the file to the storage.\n\t *\n\t * @param {any} details An object with details about the upload: `name`, `size`, `type`, and `rid`.\n\t * @param {string} fileUrl Url of the file to download/import.\n\t * @param {any} user The Rocket.Chat user.\n\t * @param {any} room The Rocket.Chat Room.\n\t * @param {Date} timeStamp The timestamp the file was uploaded\n\t */\n\tuploadFile(details, fileUrl, user, room, timeStamp) {\n\t\tthis.logger.debug(`Uploading the file ${ details.name } from ${ fileUrl }.`);\n\t\tconst requestModule = /https/i.test(fileUrl) ? this.https : this.http;\n\n\t\tconst fileStore = FileUpload.getStore('Uploads');\n\n\t\treturn requestModule.get(fileUrl, Meteor.bindEnvironment(function(res) {\n\t\t\tconst rawData = [];\n\t\t\tres.on('data', chunk => rawData.push(chunk));\n\t\t\tres.on('end', Meteor.bindEnvironment(() => {\n\t\t\t\tfileStore.insert(details, Buffer.concat(rawData), function(err, file) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tthrow new Error(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst url = file.url.replace(Meteor.absoluteUrl(), '/');\n\n\t\t\t\t\t\tconst attachment = {\n\t\t\t\t\t\t\ttitle: file.name,\n\t\t\t\t\t\t\ttitle_link: url\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (/^image\\/.+/.test(file.type)) {\n\t\t\t\t\t\t\tattachment.image_url = url;\n\t\t\t\t\t\t\tattachment.image_type = file.type;\n\t\t\t\t\t\t\tattachment.image_size = file.size;\n\t\t\t\t\t\t\tattachment.image_dimensions = file.identify != null ? file.identify.size : undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (/^audio\\/.+/.test(file.type)) {\n\t\t\t\t\t\t\tattachment.audio_url = url;\n\t\t\t\t\t\t\tattachment.audio_type = file.type;\n\t\t\t\t\t\t\tattachment.audio_size = file.size;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (/^video\\/.+/.test(file.type)) {\n\t\t\t\t\t\t\tattachment.video_url = url;\n\t\t\t\t\t\t\tattachment.video_type = file.type;\n\t\t\t\t\t\t\tattachment.video_size = file.size;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst msg = {\n\t\t\t\t\t\t\trid: details.rid,\n\t\t\t\t\t\t\tts: timeStamp,\n\t\t\t\t\t\t\tmsg: '',\n\t\t\t\t\t\t\tfile: {\n\t\t\t\t\t\t\t\t_id: file._id\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgroupable: false,\n\t\t\t\t\t\t\tattachments: [attachment]\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif ((details.message_id != null) && (typeof details.message_id === 'string')) {\n\t\t\t\t\t\t\tmsg['_id'] = details.message_id;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn RocketChat.sendMessage(user, msg, room, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}));\n\t\t}));\n\t}\n}\n","import { ProgressStep } from '../../lib/ImporterProgressStep';\n\nexport class Progress {\n\t/**\n\t * Creates a new progress container for the importer.\n\t *\n\t * @param {string} key The unique key of the importer.\n\t * @param {string} name The name of the importer.\n\t */\n\tconstructor(key, name) {\n\t\tthis.key = key;\n\t\tthis.name = name;\n\t\tthis.step = ProgressStep.NEW;\n\t\tthis.count = { completed: 0, total: 0 };\n\t}\n}\n","export class Selection {\n\t/**\n\t * Constructs a new importer selection object.\n\t *\n\t * @param {string} name the name of the importer\n\t * @param {SelectionUser[]} users the users which can be selected\n\t * @param {SelectionChannel[]} channels the channels which can be selected\n\t * @param {number} message_count the number of messages\n\t */\n\tconstructor(name, users, channels, message_count) {\n\t\tthis.name = name;\n\t\tthis.users = users;\n\t\tthis.channels = channels;\n\t\tthis.message_count = message_count;\n\t}\n}\n","export class SelectionChannel {\n\t/**\n\t * Constructs a new selection channel.\n\t *\n\t * @param {string} channel_id the unique identifier of the channel\n\t * @param {string} name the name of the channel\n\t * @param {boolean} is_archived whether the channel was archived or not\n\t * @param {boolean} do_import whether we will be importing the channel or not\n\t * @param {boolean} is_private whether the channel is private or public\n\t */\n\tconstructor(channel_id, name, is_archived, do_import, is_private) {\n\t\tthis.channel_id = channel_id;\n\t\tthis.name = name;\n\t\tthis.is_archived = is_archived;\n\t\tthis.do_import = do_import;\n\t\tthis.is_private = is_private;\n\t}\n}\n","export class SelectionUser {\n\t/**\n\t * Constructs a new selection user.\n\t *\n\t * @param {string} user_id the unique user identifier\n\t * @param {string} username the user's username\n\t * @param {string} email the user's email\n\t * @param {boolean} is_deleted whether the user was deleted or not\n\t * @param {boolean} is_bot whether the user is a bot or not\n\t * @param {boolean} do_import whether we are going to import this user or not\n\t */\n\tconstructor(user_id, username, email, is_deleted, is_bot, do_import) {\n\t\tthis.user_id = user_id;\n\t\tthis.username = username;\n\t\tthis.email = email;\n\t\tthis.is_deleted = is_deleted;\n\t\tthis.is_bot = is_bot;\n\t\tthis.do_import = do_import;\n\t}\n}\n","class ImporterWebsocketDef {\n\tconstructor() {\n\t\tthis.streamer = new Meteor.Streamer('importers', { retransmit: false });\n\t\tthis.streamer.allowRead('all');\n\t\tthis.streamer.allowEmit('all');\n\t\tthis.streamer.allowWrite('none');\n\t}\n\n\t/**\n\t * Called when the progress is updated.\n\t *\n\t * @param {Progress} progress The progress of the import.\n\t */\n\tprogressUpdated(progress) {\n\t\tthis.streamer.emit('progress', progress);\n\t}\n}\n\nexport const ImporterWebsocket = new ImporterWebsocketDef();\n","class ImportsModel extends RocketChat.models._Base {\n\tconstructor() {\n\t\tsuper('import');\n\t}\n}\n\nexport const Imports = new ImportsModel();\n","class RawImportsModel extends RocketChat.models._Base {\n\tconstructor() {\n\t\tsuper('raw_imports');\n\t}\n}\n\nexport const RawImports = new RawImportsModel();\n","import { Importers } from 'meteor/rocketchat:importer';\n\nMeteor.methods({\n\tgetImportProgress(key) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'getImportProgress' });\n\t\t}\n\n\t\tif (!RocketChat.authz.hasPermission(Meteor.userId(), 'run-import')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Importing is not allowed', { method: 'setupImporter'});\n\t\t}\n\n\t\tconst importer = Importers.get(key);\n\n\t\tif (!importer) {\n\t\t\tthrow new Meteor.Error('error-importer-not-defined', `The importer (${ key }) has no import class defined.`, { method: 'getImportProgress' });\n\t\t}\n\n\t\tif (!importer.instance) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn importer.instance.getProgress();\n\t}\n});\n","import {\n\tImporters,\n\tProgressStep\n} from 'meteor/rocketchat:importer';\n\nMeteor.methods({\n\tgetSelectionData(key) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'getSelectionData' });\n\t\t}\n\n\t\tif (!RocketChat.authz.hasPermission(Meteor.userId(), 'run-import')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Importing is not allowed', { method: 'setupImporter'});\n\t\t}\n\n\t\tconst importer = Importers.get(key);\n\n\t\tif (!importer || !importer.instance) {\n\t\t\tthrow new Meteor.Error('error-importer-not-defined', `The importer (${ key }) has no import class defined.`, { method: 'getSelectionData' });\n\t\t}\n\n\t\tconst progress = importer.instance.getProgress();\n\n\t\tswitch (progress.step) {\n\t\t\tcase ProgressStep.USER_SELECTION:\n\t\t\t\treturn importer.instance.getSelection();\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t}\n});\n","import { Importers } from 'meteor/rocketchat:importer';\n\nMeteor.methods({\n\tprepareImport(key, dataURI, contentType, fileName) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'prepareImport' });\n\t\t}\n\n\t\tif (!RocketChat.authz.hasPermission(Meteor.userId(), 'run-import')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Importing is not allowed', { method: 'setupImporter'});\n\t\t}\n\n\t\tcheck(key, String);\n\t\tcheck(dataURI, String);\n\t\tcheck(fileName, String);\n\n\t\tconst importer = Importers.get(key);\n\n\t\tif (!importer) {\n\t\t\tthrow new Meteor.Error('error-importer-not-defined', `The importer (${ key }) has no import class defined.`, { method: 'prepareImport' });\n\t\t}\n\n\t\tconst results = importer.instance.prepare(dataURI, contentType, fileName);\n\n\t\tif (results instanceof Promise) {\n\t\t\treturn results.catch(e => { throw new Meteor.Error(e); });\n\t\t} else {\n\t\t\treturn results;\n\t\t}\n\t}\n});\n","import {\n\tImporters,\n\tProgressStep\n} from 'meteor/rocketchat:importer';\n\nMeteor.methods({\n\trestartImport(key) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'restartImport' });\n\t\t}\n\n\t\tif (!RocketChat.authz.hasPermission(Meteor.userId(), 'run-import')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Importing is not allowed', { method: 'setupImporter'});\n\t\t}\n\n\t\tconst importer = Importers.get(key);\n\n\t\tif (!importer) {\n\t\t\tthrow new Meteor.Error('error-importer-not-defined', `The importer (${ key }) has no import class defined.`, { method: 'restartImport' });\n\t\t}\n\n\t\tif (importer.instance) {\n\t\t\timporter.instance.updateProgress(ProgressStep.CANCELLED);\n\t\t\timporter.instance.updateRecord({ valid: false });\n\t\t\timporter.instance = undefined;\n\t\t}\n\n\t\timporter.instance = new importer.importer(importer); // eslint-disable-line new-cap\n\t\treturn importer.instance.getProgress();\n\t}\n});\n","import { Importers } from 'meteor/rocketchat:importer';\n\nMeteor.methods({\n\tsetupImporter(key) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'setupImporter' });\n\t\t}\n\n\t\tif (!RocketChat.authz.hasPermission(Meteor.userId(), 'run-import')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Importing is not allowed', { method: 'setupImporter'});\n\t\t}\n\n\t\tconst importer = Importers.get(key);\n\n\t\tif (!importer) {\n\t\t\tconsole.warn(`Tried to setup ${ name } as an importer.`);\n\t\t\tthrow new Meteor.Error('error-importer-not-defined', 'The importer was not defined correctly, it is missing the Import class.', { method: 'setupImporter' });\n\t\t}\n\n\t\tif (importer.instance) {\n\t\t\treturn importer.instance.getProgress();\n\t\t}\n\n\t\timporter.instance = new importer.importer(importer); //eslint-disable-line new-cap\n\t\treturn importer.instance.getProgress();\n\t}\n});\n","import {\n\tImporters,\n\tSelection,\n\tSelectionChannel,\n\tSelectionUser\n} from 'meteor/rocketchat:importer';\n\nMeteor.methods({\n\tstartImport(key, input) {\n\t\t// Takes name and object with users / channels selected to import\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'startImport' });\n\t\t}\n\n\t\tif (!RocketChat.authz.hasPermission(Meteor.userId(), 'run-import')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Importing is not allowed', { method: 'startImport'});\n\t\t}\n\n\t\tif (!key) {\n\t\t\tthrow new Meteor.Error('error-invalid-importer', `No defined importer by: \"${ key }\"`, { method: 'startImport' });\n\t\t}\n\n\t\tconst importer = Importers.get(key);\n\n\t\tif (!importer || !importer.instance) {\n\t\t\tthrow new Meteor.Error('error-importer-not-defined', `The importer (${ key }) has no import class defined.`, { method: 'startImport' });\n\t\t}\n\n\t\tconst usersSelection = input.users.map(user => new SelectionUser(user.user_id, user.username, user.email, user.is_deleted, user.is_bot, user.do_import));\n\t\tconst channelsSelection = input.channels.map(channel => new SelectionChannel(channel.channel_id, channel.name, channel.is_archived, channel.do_import));\n\n\t\tconst selection = new Selection(importer.name, usersSelection, channelsSelection);\n\t\treturn importer.instance.startImport(selection);\n\t}\n});\n","import { Imports } from '../models/Imports';\nimport { RawImports } from '../models/RawImports';\n\nMeteor.startup(function() {\n\t// Make sure all imports are marked as invalid, data clean up since you can't\n\t// restart an import at the moment.\n\tImports.update({ valid: { $ne: false } }, { $set: { valid: false } }, { multi: true });\n\n\t// Clean up all the raw import data, since you can't restart an import at the moment\n\ttry {\n\t\tRawImports.model.rawCollection().drop();\n\t} catch (e) {\n\t\tconsole.log('errror', e); //TODO: Remove\n\t\t// ignored\n\t}\n});\n","import { Base } from './classes/ImporterBase';\nimport { Imports } from './models/Imports';\nimport { Importers } from '../lib/Importers';\nimport { ImporterInfo } from '../lib/ImporterInfo';\nimport { ImporterWebsocket } from './classes/ImporterWebsocket';\nimport { Progress } from './classes/ImporterProgress';\nimport { ProgressStep } from '../lib/ImporterProgressStep';\nimport { RawImports } from './models/RawImports';\nimport { Selection } from './classes/ImporterSelection';\nimport { SelectionChannel } from './classes/ImporterSelectionChannel';\nimport { SelectionUser } from './classes/ImporterSelectionUser';\n\nexport {\n\tBase,\n\tImports,\n\tImporters,\n\tImporterInfo,\n\tImporterWebsocket,\n\tProgress,\n\tProgressStep,\n\tRawImports,\n\tSelection,\n\tSelectionChannel,\n\tSelectionUser\n};\n","export class ImporterInfo {\n\t/**\n\t * Creates a new class which contains information about the importer.\n\t *\n\t * @param {string} key The unique key of this importer.\n\t * @param {string} name The i18n name.\n\t * @param {string} mimeType The type of file it expects.\n\t * @param {{ href: string, text: string }[]} warnings An array of warning objects. `{ href, text }`\n\t */\n\tconstructor(key, name = '', mimeType = '', warnings = []) {\n\t\tthis.key = key;\n\t\tthis.name = name;\n\t\tthis.mimeType = mimeType;\n\t\tthis.warnings = warnings;\n\n\t\tthis.importer = undefined;\n\t\tthis.instance = undefined;\n\t}\n}\n","/** The progress step that an importer is at. */\nexport const ProgressStep = Object.freeze({\n\tNEW: 'importer_new',\n\tPREPARING_STARTED: 'importer_preparing_started',\n\tPREPARING_USERS: 'importer_preparing_users',\n\tPREPARING_CHANNELS: 'importer_preparing_channels',\n\tPREPARING_MESSAGES: 'importer_preparing_messages',\n\tUSER_SELECTION: 'importer_user_selection',\n\tIMPORTING_STARTED: 'importer_importing_started',\n\tIMPORTING_USERS: 'importer_importing_users',\n\tIMPORTING_CHANNELS: 'importer_importing_channels',\n\tIMPORTING_MESSAGES: 'importer_importing_messages',\n\tFINISHING: 'importer_finishing',\n\tDONE: 'importer_done',\n\tERROR: 'importer_import_failed',\n\tCANCELLED: 'importer_import_cancelled'\n});\n","import { ImporterInfo } from './ImporterInfo';\n\n/** Container class which holds all of the importer details. */\nclass ImportersContainer {\n\tconstructor() {\n\t\tthis.importers = new Map();\n\t}\n\n\t/**\n\t * Adds an importer to the import collection. Adding it more than once will\n\t * overwrite the previous one.\n\t *\n\t * @param {ImporterInfo} info The information related to the importer.\n\t * @param {*} importer The class for the importer, will be undefined on the client.\n\t */\n\tadd(info, importer) {\n\t\tif (!(info instanceof ImporterInfo)) {\n\t\t\tthrow new Error('The importer must be a valid ImporterInfo instance.');\n\t\t}\n\n\t\tinfo.importer = importer;\n\n\t\tthis.importers.set(info.key, info);\n\n\t\treturn this.importers.get(info.key);\n\t}\n\n\t/**\n\t * Gets the importer information that is stored.\n\t *\n\t * @param {string} key The key of the importer.\n\t */\n\tget(key) {\n\t\treturn this.importers.get(key);\n\t}\n\n\t/**\n\t * Gets all of the importers in array format.\n\t *\n\t * @returns {ImporterInfo[]} The array of importer information.\n\t */\n\tgetAll() {\n\t\treturn Array.from(this.importers.values());\n\t}\n}\n\nexport const Importers = new ImportersContainer();\n"]}