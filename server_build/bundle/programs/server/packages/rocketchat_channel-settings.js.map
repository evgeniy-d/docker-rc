{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveReactWhenReadOnly.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomType.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomTopic.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomCustomFields.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomAnnouncement.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomName.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomReadOnly.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomDescription.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomSystemMessages.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/methods/saveRoomSettings.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/models/Messages.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/models/Rooms.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/startup.js"],"names":["RocketChat","saveReactWhenReadOnly","rid","allowReact","Match","test","String","Meteor","Error","function","models","Rooms","setAllowReactingWhenReadOnlyById","saveRoomType","roomType","user","sendMessage","type","room","findOneById","_id","t","result","setTypeById","Subscriptions","updateTypeByRoomId","message","TAPi18n","__","lng","language","settings","get","Messages","createRoomSettingsChangedWithTypeRoomIdMessageAndUser","s","module","watch","require","default","v","saveRoomTopic","roomTopic","escapeHTML","update","setTopicById","saveRoomCustomFields","roomCustomFields","Object","ret","setCustomFieldsById","updateCustomFieldsByRoomId","saveRoomAnnouncement","roomAnnouncement","announcementDetails","escapedMessage","updated","setAnnouncementById","saveRoomName","displayName","roomTypes","preventRenaming","name","slugifiedRoomName","getValidRoomName","setNameById","updateNameAndAlertByRoomId","createRoomRenamedWithRoomIdRoomNameAndUser","saveRoomReadOnly","readOnly","setReadOnlyById","saveRoomDescription","roomDescription","escapedRoomDescription","setDescriptionById","saveRoomSystemMessages","systemMessages","setSystemMessagesById","fields","methods","saveRoomSettings","value","userId","method","keys","every","key","includes","authz","hasPermission","action","broadcast","reactWhenReadOnly","forEach","setting","topic","announcement","customFields","description","check","tokens","token","balance","saveRoomTokenpass","saveStreamingOptions","ro","sysMes","setJoinCodeById","saveDefaultById","roomId","extraData","createWithTypeRoomIdMessageAndUser","roomName","query","$set","muted","findByRoomIdWhenUsernameExists","u","push","username","$unset","length","allowReacting","startup","Permissions","upsert","$setOnInsert","roles"],"mappings":"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","file":"/packages/rocketchat_channel-settings.js","sourcesContent":["RocketChat.saveReactWhenReadOnly = function(rid, allowReact) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', { function: 'RocketChat.saveReactWhenReadOnly' });\n\t}\n\n\treturn RocketChat.models.Rooms.setAllowReactingWhenReadOnlyById(rid, allowReact);\n};\n","\nRocketChat.saveRoomType = function(rid, roomType, user, sendMessage = true) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomType'\n\t\t});\n\t}\n\tif (roomType !== 'c' && roomType !== 'p') {\n\t\tthrow new Meteor.Error('error-invalid-room-type', 'error-invalid-room-type', {\n\t\t\t'function': 'RocketChat.saveRoomType',\n\t\t\ttype: roomType\n\t\t});\n\t}\n\tconst room = RocketChat.models.Rooms.findOneById(rid);\n\tif (room == null) {\n\t\tthrow new Meteor.Error('error-invalid-room', 'error-invalid-room', {\n\t\t\t'function': 'RocketChat.saveRoomType',\n\t\t\t_id: rid\n\t\t});\n\t}\n\tif (room.t === 'd') {\n\t\tthrow new Meteor.Error('error-direct-room', 'Can\\'t change type of direct rooms', {\n\t\t\t'function': 'RocketChat.saveRoomType'\n\t\t});\n\t}\n\tconst result = RocketChat.models.Rooms.setTypeById(rid, roomType) && RocketChat.models.Subscriptions.updateTypeByRoomId(rid, roomType);\n\tif (result && sendMessage) {\n\t\tlet message;\n\t\tif (roomType === 'c') {\n\t\t\tmessage = TAPi18n.__('Channel', {\n\t\t\t\tlng: user && user.language || RocketChat.settings.get('language') || 'en'\n\t\t\t});\n\t\t} else {\n\t\t\tmessage = TAPi18n.__('Private_Group', {\n\t\t\t\tlng: user && user.language || RocketChat.settings.get('language') || 'en'\n\t\t\t});\n\t\t}\n\t\tRocketChat.models.Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser('room_changed_privacy', rid, message, user);\n\t}\n\treturn result;\n};\n","import s from 'underscore.string';\n\nRocketChat.saveRoomTopic = function(rid, roomTopic, user, sendMessage = true) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomTopic'\n\t\t});\n\t}\n\troomTopic = s.escapeHTML(roomTopic);\n\tconst update = RocketChat.models.Rooms.setTopicById(rid, roomTopic);\n\tif (update && sendMessage) {\n\t\tRocketChat.models.Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser('room_changed_topic', rid, roomTopic, user);\n\t}\n\treturn update;\n};\n","RocketChat.saveRoomCustomFields = function(rid, roomCustomFields) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomCustomFields'\n\t\t});\n\t}\n\tif (!Match.test(roomCustomFields, Object)) {\n\t\tthrow new Meteor.Error('invalid-roomCustomFields-type', 'Invalid roomCustomFields type', {\n\t\t\t'function': 'RocketChat.saveRoomCustomFields'\n\t\t});\n\t}\n\tconst ret = RocketChat.models.Rooms.setCustomFieldsById(rid, roomCustomFields);\n\n\t// Update customFields of any user's Subscription related with this rid\n\tRocketChat.models.Subscriptions.updateCustomFieldsByRoomId(rid, roomCustomFields);\n\n\treturn ret;\n};\n","import s from 'underscore.string';\n\nRocketChat.saveRoomAnnouncement = function(rid, roomAnnouncement, user, sendMessage=true) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', { function: 'RocketChat.saveRoomAnnouncement' });\n\t}\n\n\tlet message;\n\tlet announcementDetails;\n\tif (typeof roomAnnouncement === 'string') {\n\t\tmessage = roomAnnouncement;\n\t} else {\n\t\t({message, ...announcementDetails} = roomAnnouncement);\n\t}\n\n\tconst escapedMessage = s.escapeHTML(message);\n\n\tconst updated = RocketChat.models.Rooms.setAnnouncementById(rid, escapedMessage, announcementDetails);\n\tif (updated && sendMessage) {\n\t\tRocketChat.models.Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser('room_changed_announcement', rid, escapedMessage, user);\n\t}\n\n\treturn updated;\n};\n","\nRocketChat.saveRoomName = function(rid, displayName, user, sendMessage = true) {\n\tconst room = RocketChat.models.Rooms.findOneById(rid);\n\tif (RocketChat.roomTypes.roomTypes[room.t].preventRenaming()) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\t'function': 'RocketChat.saveRoomdisplayName'\n\t\t});\n\t}\n\tif (displayName === room.name) {\n\t\treturn;\n\t}\n\n\tconst slugifiedRoomName = RocketChat.getValidRoomName(displayName, rid);\n\n\tconst update = RocketChat.models.Rooms.setNameById(rid, slugifiedRoomName, displayName) && RocketChat.models.Subscriptions.updateNameAndAlertByRoomId(rid, slugifiedRoomName, displayName);\n\n\tif (update && sendMessage) {\n\t\tRocketChat.models.Messages.createRoomRenamedWithRoomIdRoomNameAndUser(rid, displayName, user);\n\t}\n\treturn displayName;\n};\n","RocketChat.saveRoomReadOnly = function(rid, readOnly) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomReadOnly'\n\t\t});\n\t}\n\treturn RocketChat.models.Rooms.setReadOnlyById(rid, readOnly);\n};\n","import s from 'underscore.string';\n\nRocketChat.saveRoomDescription = function(rid, roomDescription, user) {\n\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomDescription'\n\t\t});\n\t}\n\tconst escapedRoomDescription = s.escapeHTML(roomDescription);\n\tconst update = RocketChat.models.Rooms.setDescriptionById(rid, escapedRoomDescription);\n\tRocketChat.models.Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser('room_changed_description', rid, escapedRoomDescription, user);\n\treturn update;\n};\n","RocketChat.saveRoomSystemMessages = function(rid, systemMessages) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomSystemMessages'\n\t\t});\n\t}\n\treturn RocketChat.models.Rooms.setSystemMessagesById(rid, systemMessages);\n};\n","const fields = ['roomName', 'roomTopic', 'roomAnnouncement', 'roomCustomFields', 'roomDescription', 'roomType', 'readOnly', 'reactWhenReadOnly', 'systemMessages', 'default', 'joinCode', 'tokenpass', 'streamingOptions'];\nMeteor.methods({\n\tsaveRoomSettings(rid, settings, value) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\t'function': 'RocketChat.saveRoomName'\n\t\t\t});\n\t\t}\n\t\tif (!Match.test(rid, String)) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\tmethod: 'saveRoomSettings'\n\t\t\t});\n\t\t}\n\n\t\tif (typeof settings !== 'object') {\n\t\t\tsettings = {\n\t\t\t\t[settings] : value\n\t\t\t};\n\t\t}\n\n\t\tif (!Object.keys(settings).every(key => fields.includes(key))) {\n\t\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings provided', {\n\t\t\t\tmethod: 'saveRoomSettings'\n\t\t\t});\n\t\t}\n\n\t\tif (!RocketChat.authz.hasPermission(Meteor.userId(), 'edit-room', rid)) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room'\n\t\t\t});\n\t\t}\n\n\t\tconst room = RocketChat.models.Rooms.findOneById(rid);\n\n\t\tif (room.broadcast && (settings.readOnly || settings.reactWhenReadOnly)) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing readOnly/reactWhenReadOnly are not allowed for broadcast rooms', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room'\n\t\t\t});\n\t\t}\n\n\t\tif (!room) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\tmethod: 'saveRoomSettings'\n\t\t\t});\n\t\t}\n\n\t\tconst user = Meteor.user();\n\n\t\tObject.keys(settings).forEach(setting => {\n\t\t\tconst value = settings[setting];\n\t\t\tif (settings === 'default' && !RocketChat.authz.hasPermission(this.userId, 'view-room-administration')) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Viewing room administration is not allowed', {\n\t\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\t\taction: 'Viewing_room_administration'\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (setting === 'roomType' && value !== room.t && value === 'c' && !RocketChat.authz.hasPermission(this.userId, 'create-c')) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Changing a private group to a public channel is not allowed', {\n\t\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\t\taction: 'Change_Room_Type'\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (setting === 'roomType' && value !== room.t && value === 'p' && !RocketChat.authz.hasPermission(this.userId, 'create-p')) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Changing a public channel to a private room is not allowed', {\n\t\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\t\taction: 'Change_Room_Type'\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tObject.keys(settings).forEach(setting => {\n\t\t\tconst value = settings[setting];\n\t\t\tswitch (setting) {\n\t\t\t\tcase 'roomName':\n\t\t\t\t\tRocketChat.saveRoomName(rid, value, user);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'roomTopic':\n\t\t\t\t\tif (value !== room.topic) {\n\t\t\t\t\t\tRocketChat.saveRoomTopic(rid, value, user);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'roomAnnouncement':\n\t\t\t\t\tif (value !== room.announcement) {\n\t\t\t\t\t\tRocketChat.saveRoomAnnouncement(rid, value, user);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'roomCustomFields':\n\t\t\t\t\tif (value !== room.customFields) {\n\t\t\t\t\t\tRocketChat.saveRoomCustomFields(rid, value);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'roomDescription':\n\t\t\t\t\tif (value !== room.description) {\n\t\t\t\t\t\tRocketChat.saveRoomDescription(rid, value, user);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'roomType':\n\t\t\t\t\tif (value !== room.t) {\n\t\t\t\t\t\tRocketChat.saveRoomType(rid, value, user);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'tokenpass':\n\t\t\t\t\tcheck(value, {\n\t\t\t\t\t\trequire: String,\n\t\t\t\t\t\ttokens: [{\n\t\t\t\t\t\t\ttoken: String,\n\t\t\t\t\t\t\tbalance: String\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\n\t\t\t\t\tRocketChat.saveRoomTokenpass(rid, value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'streamingOptions':\n\t\t\t\t\tRocketChat.saveStreamingOptions(rid, value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'readOnly':\n\t\t\t\t\tif (value !== room.ro) {\n\t\t\t\t\t\tRocketChat.saveRoomReadOnly(rid, value, user);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'reactWhenReadOnly':\n\t\t\t\t\tif (value !== room.reactWhenReadOnly) {\n\t\t\t\t\t\tRocketChat.saveReactWhenReadOnly(rid, value, user);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'systemMessages':\n\t\t\t\t\tif (value !== room.sysMes) {\n\t\t\t\t\t\tRocketChat.saveRoomSystemMessages(rid, value, user);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'joinCode':\n\t\t\t\t\tRocketChat.models.Rooms.setJoinCodeById(rid, String(value));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'default':\n\t\t\t\t\tRocketChat.models.Rooms.saveDefaultById(rid, value);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tresult: true,\n\t\t\trid: room._id\n\t\t};\n\t}\n});\n","RocketChat.models.Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser = function(type, roomId, message, user, extraData) {\n\treturn this.createWithTypeRoomIdMessageAndUser(type, roomId, message, user, extraData);\n};\n\nRocketChat.models.Messages.createRoomRenamedWithRoomIdRoomNameAndUser = function(roomId, roomName, user, extraData) {\n\treturn this.createWithTypeRoomIdMessageAndUser('r', roomId, roomName, user, extraData);\n};\n","RocketChat.models.Rooms.setDescriptionById = function(_id, description) {\n\tconst query = {\n\t\t_id\n\t};\n\tconst update = {\n\t\t$set: {\n\t\t\tdescription\n\t\t}\n\t};\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Rooms.setReadOnlyById = function(_id, readOnly) {\n\tconst query = {\n\t\t_id\n\t};\n\tconst update = {\n\t\t$set: {\n\t\t\tro: readOnly,\n\t\t\tmuted: []\n\t\t}\n\t};\n\tif (readOnly) {\n\t\tRocketChat.models.Subscriptions.findByRoomIdWhenUsernameExists(_id, { fields: { 'u._id': 1, 'u.username': 1 } }).forEach(function({ u: user }) {\n\t\t\tif (RocketChat.authz.hasPermission(user._id, 'post-readonly')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn update.$set.muted.push(user.username);\n\t\t});\n\t} else {\n\t\tupdate.$unset = {\n\t\t\tmuted: ''\n\t\t};\n\t}\n\n\tif (update.$set.muted.length === 0) {\n\t\tdelete update.$set.muted;\n\t}\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Rooms.setAllowReactingWhenReadOnlyById = function(_id, allowReacting) {\n\tconst query = {\n\t\t_id\n\t};\n\tconst update = {\n\t\t$set: {\n\t\t\treactWhenReadOnly: allowReacting\n\t\t}\n\t};\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Rooms.setSystemMessagesById = function(_id, systemMessages) {\n\tconst query = {\n\t\t_id\n\t};\n\tconst update = {\n\t\t$set: {\n\t\t\tsysMes: systemMessages\n\t\t}\n\t};\n\treturn this.update(query, update);\n};\n","Meteor.startup(function() {\n\tRocketChat.models.Permissions.upsert('post-readonly', {$setOnInsert: { roles: ['admin', 'owner', 'moderator'] } });\n\tRocketChat.models.Permissions.upsert('set-readonly', {$setOnInsert: { roles: ['admin', 'owner'] } });\n\tRocketChat.models.Permissions.upsert('set-react-when-readonly', {$setOnInsert: { roles: ['admin', 'owner'] }});\n});\n"]}