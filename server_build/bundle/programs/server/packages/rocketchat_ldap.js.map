{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:ldap/server/index.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/ldap.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/loginHandler.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/settings.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/sync.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/syncUsers.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/testConnection.js"],"names":["module","watch","require","export","default","LDAP","ldapjs","v","Bunyan","logger","Logger","sections","connection","bind","search","auth","constructor","connected","options","host","RocketChat","settings","get","port","Reconnect","Internal_Log_Level","timeout","connect_timeout","idle_timeout","encryption","ca_cert","reject_unauthorized","Authentication","Authentication_UserDN","Authentication_Password","BaseDN","User_Search_Filter","User_Search_Scope","User_Search_Field","Search_Page_Size","Search_Size_Limit","group_filter_enabled","group_filter_object_class","group_filter_group_id_attribute","group_filter_group_member_attribute","group_filter_group_member_format","group_filter_group_name","find_user_after_login","connectSync","args","_connectSync","Meteor","wrapAsync","connectAsync","searchAllSync","_searchAllSync","searchAllAsync","callback","info","replied","connectionOptions","url","connectTimeout","idleTimeout","reconnect","log","name","component","stream","process","stderr","level","tlsOptions","rejectUnauthorized","chainLines","split","cert","ca","forEach","line","push","match","join","debug","client","createClient","bindSync","on","error","disconnect","starttls","response","setTimeout","Error","getUserFilter","username","filter","usernameFilter","map","item","length","bindIfNecessary","domainBinded","searchUsersSync","page","searchOptions","scope","sizeLimit","paged","pageSize","pagePause","searchAllPaged","getUserByIdSync","id","attribute","Unique_Identifier_Field","filters","EqualityFilter","value","Buffer","OrFilter","toString","result","Array","isArray","getUserByUsernameSync","isUserInGroup","replace","extractLdapEntryData","entry","values","_raw","raw","Object","keys","key","includes","processPage","entries","title","end","next","_updateIdle","res","internalPageSize","authSync","dn","password","unbind","slug","getLdapUsername","getLdapUserUniqueID","syncUserData","addLdapUser","fallbackDefaultAccountSystem","indexOf","email","loginRequest","user","digest","SHA256","algorithm","Accounts","_runLoginHandlers","registerLoginHandler","ldap","ldapOptions","undefined","ldapPass","self","ldapUser","users","userQuery","findOne","stampedToken","_generateStampedLoginToken","update","_id","$push","_hashStampedToken","trim","setPassword","logout","userId","token","addGroup","enableQuery","enableAuthentication","enableTLSQuery","$in","syncDataQuery","groupFilterQuery","backgroundSyncQuery","add","type","public","i18nLabel","multiline","actionText","section","getPropertyValue","getDataToSyncUserData","importNewUsers","_","text","slugify","obj","reduce","acc","el","err","usernameField","field","concat","find","isEmpty","syncUserDataFieldMap","userData","whitelistedUserFields","fieldMap","JSON","parse","emailList","userField","ldapField","hasOwnProperty","isObject","address","verified","outerKey","innerKeys","customFieldsMeta","e","tmpUserField","tmpLdapField","templateVarHandler","dKeys","lastKey","last","currKey","stringify","emails","uniqueId","services","idAttribute","size","object","_setRealName","$set","_setUsername","avatar","thumbnailPhoto","jpegPhoto","rs","RocketChatFile","bufferToStream","fileStore","FileUpload","getStore","deleteByName","file","runAsUser","insert","models","Users","setAvatarOrigin","Notifications","notifyLogged","userObject","mail","createUser","count","bindEnvironment","ldapUsers","sync","findLDAPUsers","jobName","addCronJob","debounce","addCronJobDebounced","SyncedCron","nextScheduledAtDate","remove","schedule","parser","job","start","startup","defer","methods","ldap_sync_now","method","authz","hasRole","unblock","message","params","ldap_test_connection","console"],"mappings":"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","file":"/packages/rocketchat_ldap.js","sourcesContent":["import './loginHandler';\nimport './settings';\nimport './testConnection';\nimport './syncUsers';\nimport './sync';\n","import ldapjs from 'ldapjs';\nimport Bunyan from 'bunyan';\n\nconst logger = new Logger('LDAP', {\n\tsections: {\n\t\tconnection: 'Connection',\n\t\tbind: 'Bind',\n\t\tsearch: 'Search',\n\t\tauth: 'Auth'\n\t}\n});\n\nexport default class LDAP {\n\tconstructor() {\n\t\tthis.ldapjs = ldapjs;\n\n\t\tthis.connected = false;\n\n\t\tthis.options = {\n\t\t\thost: RocketChat.settings.get('LDAP_Host'),\n\t\t\tport: RocketChat.settings.get('LDAP_Port'),\n\t\t\tReconnect: RocketChat.settings.get('LDAP_Reconnect'),\n\t\t\tInternal_Log_Level: RocketChat.settings.get('LDAP_Internal_Log_Level'),\n\t\t\ttimeout: RocketChat.settings.get('LDAP_Timeout'),\n\t\t\tconnect_timeout: RocketChat.settings.get('LDAP_Connect_Timeout'),\n\t\t\tidle_timeout: RocketChat.settings.get('LDAP_Idle_Timeout'),\n\t\t\tencryption: RocketChat.settings.get('LDAP_Encryption'),\n\t\t\tca_cert: RocketChat.settings.get('LDAP_CA_Cert'),\n\t\t\treject_unauthorized: RocketChat.settings.get('LDAP_Reject_Unauthorized') || false,\n\t\t\tAuthentication: RocketChat.settings.get('LDAP_Authentication'),\n\t\t\tAuthentication_UserDN: RocketChat.settings.get('LDAP_Authentication_UserDN'),\n\t\t\tAuthentication_Password: RocketChat.settings.get('LDAP_Authentication_Password'),\n\t\t\tBaseDN: RocketChat.settings.get('LDAP_BaseDN'),\n\t\t\tUser_Search_Filter: RocketChat.settings.get('LDAP_User_Search_Filter'),\n\t\t\tUser_Search_Scope: RocketChat.settings.get('LDAP_User_Search_Scope'),\n\t\t\tUser_Search_Field: RocketChat.settings.get('LDAP_User_Search_Field'),\n\t\t\tSearch_Page_Size: RocketChat.settings.get('LDAP_Search_Page_Size'),\n\t\t\tSearch_Size_Limit: RocketChat.settings.get('LDAP_Search_Size_Limit'),\n\t\t\tgroup_filter_enabled: RocketChat.settings.get('LDAP_Group_Filter_Enable'),\n\t\t\tgroup_filter_object_class: RocketChat.settings.get('LDAP_Group_Filter_ObjectClass'),\n\t\t\tgroup_filter_group_id_attribute: RocketChat.settings.get('LDAP_Group_Filter_Group_Id_Attribute'),\n\t\t\tgroup_filter_group_member_attribute: RocketChat.settings.get('LDAP_Group_Filter_Group_Member_Attribute'),\n\t\t\tgroup_filter_group_member_format: RocketChat.settings.get('LDAP_Group_Filter_Group_Member_Format'),\n\t\t\tgroup_filter_group_name: RocketChat.settings.get('LDAP_Group_Filter_Group_Name'),\n\t\t\tfind_user_after_login: RocketChat.settings.get('LDAP_Find_User_After_Login')\n\t\t};\n\t}\n\n\tconnectSync(...args) {\n\t\tif (!this._connectSync) {\n\t\t\tthis._connectSync = Meteor.wrapAsync(this.connectAsync, this);\n\t\t}\n\t\treturn this._connectSync(...args);\n\t}\n\n\tsearchAllSync(...args) {\n\t\tif (!this._searchAllSync) {\n\t\t\tthis._searchAllSync = Meteor.wrapAsync(this.searchAllAsync, this);\n\t\t}\n\t\treturn this._searchAllSync(...args);\n\t}\n\n\tconnectAsync(callback) {\n\t\tlogger.connection.info('Init setup');\n\n\t\tlet replied = false;\n\n\t\tconst connectionOptions = {\n\t\t\turl: `${ this.options.host }:${ this.options.port }`,\n\t\t\ttimeout: this.options.timeout,\n\t\t\tconnectTimeout: this.options.connect_timeout,\n\t\t\tidleTimeout: this.options.idle_timeout,\n\t\t\treconnect: this.options.Reconnect\n\t\t};\n\n\t\tif (this.options.Internal_Log_Level !== 'disabled') {\n\t\t\tconnectionOptions.log = new Bunyan({\n\t\t\t\tname: 'ldapjs',\n\t\t\t\tcomponent: 'client',\n\t\t\t\tstream: process.stderr,\n\t\t\t\tlevel: this.options.Internal_Log_Level\n\t\t\t});\n\t\t}\n\n\t\tconst tlsOptions = {\n\t\t\trejectUnauthorized: this.options.reject_unauthorized\n\t\t};\n\n\t\tif (this.options.ca_cert && this.options.ca_cert !== '') {\n\t\t\t// Split CA cert into array of strings\n\t\t\tconst chainLines = RocketChat.settings.get('LDAP_CA_Cert').split('\\n');\n\t\t\tlet cert = [];\n\t\t\tconst ca = [];\n\t\t\tchainLines.forEach((line) => {\n\t\t\t\tcert.push(line);\n\t\t\t\tif (line.match(/-END CERTIFICATE-/)) {\n\t\t\t\t\tca.push(cert.join('\\n'));\n\t\t\t\t\tcert = [];\n\t\t\t\t}\n\t\t\t});\n\t\t\ttlsOptions.ca = ca;\n\t\t}\n\n\t\tif (this.options.encryption === 'ssl') {\n\t\t\tconnectionOptions.url = `ldaps://${ connectionOptions.url }`;\n\t\t\tconnectionOptions.tlsOptions = tlsOptions;\n\t\t} else {\n\t\t\tconnectionOptions.url = `ldap://${ connectionOptions.url }`;\n\t\t}\n\n\t\tlogger.connection.info('Connecting', connectionOptions.url);\n\t\tlogger.connection.debug('connectionOptions', connectionOptions);\n\n\t\tthis.client = ldapjs.createClient(connectionOptions);\n\n\t\tthis.bindSync = Meteor.wrapAsync(this.client.bind, this.client);\n\n\t\tthis.client.on('error', (error) => {\n\t\t\tlogger.connection.error('connection', error);\n\t\t\tif (replied === false) {\n\t\t\t\treplied = true;\n\t\t\t\tcallback(error, null);\n\t\t\t}\n\t\t});\n\n\t\tthis.client.on('idle', () => {\n\t\t\tlogger.search.info('Idle');\n\t\t\tthis.disconnect();\n\t\t});\n\n\t\tthis.client.on('close', () => {\n\t\t\tlogger.search.info('Closed');\n\t\t});\n\n\t\tif (this.options.encryption === 'tls') {\n\t\t\t// Set host parameter for tls.connect which is used by ldapjs starttls. This shouldn't be needed in newer nodejs versions (e.g v5.6.0).\n\t\t\t// https://github.com/RocketChat/Rocket.Chat/issues/2035\n\t\t\t// https://github.com/mcavage/node-ldapjs/issues/349\n\t\t\ttlsOptions.host = this.options.host;\n\n\t\t\tlogger.connection.info('Starting TLS');\n\t\t\tlogger.connection.debug('tlsOptions', tlsOptions);\n\n\t\t\tthis.client.starttls(tlsOptions, null, (error, response) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tlogger.connection.error('TLS connection', error);\n\t\t\t\t\tif (replied === false) {\n\t\t\t\t\t\treplied = true;\n\t\t\t\t\t\tcallback(error, null);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlogger.connection.info('TLS connected');\n\t\t\t\tthis.connected = true;\n\t\t\t\tif (replied === false) {\n\t\t\t\t\treplied = true;\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.client.on('connect', (response) => {\n\t\t\t\tlogger.connection.info('LDAP connected');\n\t\t\t\tthis.connected = true;\n\t\t\t\tif (replied === false) {\n\t\t\t\t\treplied = true;\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tif (replied === false) {\n\t\t\t\tlogger.connection.error('connection time out', connectionOptions.connectTimeout);\n\t\t\t\treplied = true;\n\t\t\t\tcallback(new Error('Timeout'));\n\t\t\t}\n\t\t}, connectionOptions.connectTimeout);\n\t}\n\n\tgetUserFilter(username) {\n\t\tconst filter = [];\n\n\t\tif (this.options.User_Search_Filter !== '') {\n\t\t\tif (this.options.User_Search_Filter[0] === '(') {\n\t\t\t\tfilter.push(`${ this.options.User_Search_Filter }`);\n\t\t\t} else {\n\t\t\t\tfilter.push(`(${ this.options.User_Search_Filter })`);\n\t\t\t}\n\t\t}\n\n\t\tconst usernameFilter = this.options.User_Search_Field.split(',').map(item => `(${ item }=${ username })`);\n\n\t\tif (usernameFilter.length === 0) {\n\t\t\tlogger.error('LDAP_LDAP_User_Search_Field not defined');\n\t\t} else if (usernameFilter.length === 1) {\n\t\t\tfilter.push(`${ usernameFilter[0] }`);\n\t\t} else {\n\t\t\tfilter.push(`(|${ usernameFilter.join('') })`);\n\t\t}\n\n\t\treturn `(&${ filter.join('') })`;\n\t}\n\n\tbindIfNecessary() {\n\t\tif (this.domainBinded === true) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.options.Authentication !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tlogger.bind.info('Binding UserDN', this.options.Authentication_UserDN);\n\t\tthis.bindSync(this.options.Authentication_UserDN, this.options.Authentication_Password);\n\t\tthis.domainBinded = true;\n\t}\n\n\tsearchUsersSync(username, page) {\n\t\tthis.bindIfNecessary();\n\n\t\tconst searchOptions = {\n\t\t\tfilter: this.getUserFilter(username),\n\t\t\tscope: this.options.User_Search_Scope || 'sub',\n\t\t\tsizeLimit: this.options.Search_Size_Limit\n\t\t};\n\n\t\tif (this.options.Search_Page_Size > 0) {\n\t\t\tsearchOptions.paged = {\n\t\t\t\tpageSize: this.options.Search_Page_Size,\n\t\t\t\tpagePause: !!page\n\t\t\t};\n\t\t}\n\n\t\tlogger.search.info('Searching user', username);\n\t\tlogger.search.debug('searchOptions', searchOptions);\n\t\tlogger.search.debug('BaseDN', this.options.BaseDN);\n\n\t\tif (page) {\n\t\t\treturn this.searchAllPaged(this.options.BaseDN, searchOptions, page);\n\t\t}\n\n\t\treturn this.searchAllSync(this.options.BaseDN, searchOptions);\n\t}\n\n\tgetUserByIdSync(id, attribute) {\n\t\tthis.bindIfNecessary();\n\n\t\tconst Unique_Identifier_Field = RocketChat.settings.get('LDAP_Unique_Identifier_Field').split(',');\n\n\t\tlet filter;\n\n\t\tif (attribute) {\n\t\t\tfilter = new this.ldapjs.filters.EqualityFilter({\n\t\t\t\tattribute,\n\t\t\t\tvalue: new Buffer(id, 'hex')\n\t\t\t});\n\t\t} else {\n\t\t\tconst filters = [];\n\t\t\tUnique_Identifier_Field.forEach((item) => {\n\t\t\t\tfilters.push(new this.ldapjs.filters.EqualityFilter({\n\t\t\t\t\tattribute: item,\n\t\t\t\t\tvalue: new Buffer(id, 'hex')\n\t\t\t\t}));\n\t\t\t});\n\n\t\t\tfilter = new this.ldapjs.filters.OrFilter({filters});\n\t\t}\n\n\t\tconst searchOptions = {\n\t\t\tfilter,\n\t\t\tscope: 'sub'\n\t\t};\n\n\t\tlogger.search.info('Searching by id', id);\n\t\tlogger.search.debug('search filter', searchOptions.filter.toString());\n\t\tlogger.search.debug('BaseDN', this.options.BaseDN);\n\n\t\tconst result = this.searchAllSync(this.options.BaseDN, searchOptions);\n\n\t\tif (!Array.isArray(result) || result.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (result.length > 1) {\n\t\t\tlogger.search.error('Search by id', id, 'returned', result.length, 'records');\n\t\t}\n\n\t\treturn result[0];\n\t}\n\n\tgetUserByUsernameSync(username) {\n\t\tthis.bindIfNecessary();\n\n\t\tconst searchOptions = {\n\t\t\tfilter: this.getUserFilter(username),\n\t\t\tscope: this.options.User_Search_Scope || 'sub'\n\t\t};\n\n\t\tlogger.search.info('Searching user', username);\n\t\tlogger.search.debug('searchOptions', searchOptions);\n\t\tlogger.search.debug('BaseDN', this.options.BaseDN);\n\n\t\tconst result = this.searchAllSync(this.options.BaseDN, searchOptions);\n\n\t\tif (!Array.isArray(result) || result.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (result.length > 1) {\n\t\t\tlogger.search.error('Search by username', username, 'returned', result.length, 'records');\n\t\t}\n\n\t\treturn result[0];\n\t}\n\n\tisUserInGroup(username) {\n\t\tif (!this.options.group_filter_enabled) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst filter = ['(&'];\n\n\t\tif (this.options.group_filter_object_class !== '') {\n\t\t\tfilter.push(`(objectclass=${ this.options.group_filter_object_class })`);\n\t\t}\n\n\t\tif (this.options.group_filter_group_member_attribute !== '') {\n\t\t\tfilter.push(`(${ this.options.group_filter_group_member_attribute }=${ this.options.group_filter_group_member_format })`);\n\t\t}\n\n\t\tif (this.options.group_filter_group_id_attribute !== '') {\n\t\t\tfilter.push(`(${ this.options.group_filter_group_id_attribute }=${ this.options.group_filter_group_name })`);\n\t\t}\n\t\tfilter.push(')');\n\n\t\tconst searchOptions = {\n\t\t\tfilter: filter.join('').replace(/#{username}/g, username),\n\t\t\tscope: 'sub'\n\t\t};\n\n\t\tlogger.search.debug('Group filter LDAP:', searchOptions.filter);\n\n\t\tconst result = this.searchAllSync(this.options.BaseDN, searchOptions);\n\n\t\tif (!Array.isArray(result) || result.length === 0) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\textractLdapEntryData(entry) {\n\t\tconst values = {\n\t\t\t_raw: entry.raw\n\t\t};\n\n\t\tObject.keys(values._raw).forEach((key) => {\n\t\t\tconst value = values._raw[key];\n\n\t\t\tif (!['thumbnailPhoto', 'jpegPhoto'].includes(key)) {\n\t\t\t\tif (value instanceof Buffer) {\n\t\t\t\t\tvalues[key] = value.toString();\n\t\t\t\t} else {\n\t\t\t\t\tvalues[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn values;\n\t}\n\n\tsearchAllPaged(BaseDN, options, page) {\n\t\tthis.bindIfNecessary();\n\n\t\tconst processPage = ({entries, title, end, next}) => {\n\t\t\tlogger.search.info(title);\n\t\t\t// Force LDAP idle to wait the record processing\n\t\t\tthis.client._updateIdle(true);\n\t\t\tpage(null, entries, {end, next: () => {\n\t\t\t\t// Reset idle timer\n\t\t\t\tthis.client._updateIdle();\n\t\t\t\tnext && next();\n\t\t\t}});\n\t\t};\n\n\t\tthis.client.search(BaseDN, options, (error, res) => {\n\t\t\tif (error) {\n\t\t\t\tlogger.search.error(error);\n\t\t\t\tpage(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tres.on('error', (error) => {\n\t\t\t\tlogger.search.error(error);\n\t\t\t\tpage(error);\n\t\t\t\treturn;\n\t\t\t});\n\n\t\t\tlet entries = [];\n\n\t\t\tconst internalPageSize = options.paged && options.paged.pageSize > 0 ? options.paged.pageSize * 2 : 500;\n\n\t\t\tres.on('searchEntry', (entry) => {\n\t\t\t\tentries.push(this.extractLdapEntryData(entry));\n\n\t\t\t\tif (entries.length >= internalPageSize) {\n\t\t\t\t\tprocessPage({\n\t\t\t\t\t\tentries,\n\t\t\t\t\t\ttitle: 'Internal Page',\n\t\t\t\t\t\tend: false\n\t\t\t\t\t});\n\t\t\t\t\tentries = [];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tres.on('page', (result, next) => {\n\t\t\t\tif (!next) {\n\t\t\t\t\tthis.client._updateIdle(true);\n\t\t\t\t\tprocessPage({\n\t\t\t\t\t\tentries,\n\t\t\t\t\t\ttitle: 'Final Page',\n\t\t\t\t\t\tend: true\n\t\t\t\t\t});\n\t\t\t\t} else if (entries.length) {\n\t\t\t\t\tlogger.search.info('Page');\n\t\t\t\t\tprocessPage({\n\t\t\t\t\t\tentries,\n\t\t\t\t\t\ttitle: 'Page',\n\t\t\t\t\t\tend: false,\n\t\t\t\t\t\tnext\n\t\t\t\t\t});\n\t\t\t\t\tentries = [];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tres.on('end', () => {\n\t\t\t\tif (entries.length) {\n\t\t\t\t\tprocessPage({\n\t\t\t\t\t\tentries,\n\t\t\t\t\t\ttitle: 'Final Page',\n\t\t\t\t\t\tend: true\n\t\t\t\t\t});\n\t\t\t\t\tentries = [];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tsearchAllAsync(BaseDN, options, callback) {\n\t\tthis.bindIfNecessary();\n\n\t\tthis.client.search(BaseDN, options, (error, res) => {\n\t\t\tif (error) {\n\t\t\t\tlogger.search.error(error);\n\t\t\t\tcallback(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tres.on('error', (error) => {\n\t\t\t\tlogger.search.error(error);\n\t\t\t\tcallback(error);\n\t\t\t\treturn;\n\t\t\t});\n\n\t\t\tconst entries = [];\n\n\t\t\tres.on('searchEntry', (entry) => {\n\t\t\t\tentries.push(this.extractLdapEntryData(entry));\n\t\t\t});\n\n\t\t\tres.on('end', () => {\n\t\t\t\tlogger.search.info('Search result count', entries.length);\n\t\t\t\tcallback(null, entries);\n\t\t\t});\n\t\t});\n\t}\n\n\tauthSync(dn, password) {\n\t\tlogger.auth.info('Authenticating', dn);\n\n\t\ttry {\n\t\t\tthis.bindSync(dn, password);\n\t\t\tif (this.options.find_user_after_login) {\n\t\t\t\tconst searchOptions = {\n\t\t\t\t\tscope: this.options.User_Search_Scope || 'sub'\n\t\t\t\t};\n\t\t\t\tconst result = this.searchAllSync(dn, searchOptions);\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\tlogger.auth.info('Bind successful but user was not found via search', dn, searchOptions);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlogger.auth.info('Authenticated', dn);\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tlogger.auth.info('Not authenticated', dn);\n\t\t\tlogger.auth.debug('error', error);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tdisconnect() {\n\t\tthis.connected = false;\n\t\tthis.domainBinded = false;\n\t\tlogger.connection.info('Disconecting');\n\t\tthis.client.unbind();\n\t}\n}\n","/* eslint new-cap: [2, {\"capIsNewExceptions\": [\"SHA256\"]}] */\n\nimport {slug, getLdapUsername, getLdapUserUniqueID, syncUserData, addLdapUser} from './sync';\nimport LDAP from './ldap';\n\nconst logger = new Logger('LDAPHandler', {});\n\nfunction fallbackDefaultAccountSystem(bind, username, password) {\n\tif (typeof username === 'string') {\n\t\tif (username.indexOf('@') === -1) {\n\t\t\tusername = {username};\n\t\t} else {\n\t\t\tusername = {email: username};\n\t\t}\n\t}\n\n\tlogger.info('Fallback to default account system', username);\n\n\tconst loginRequest = {\n\t\tuser: username,\n\t\tpassword: {\n\t\t\tdigest: SHA256(password),\n\t\t\talgorithm: 'sha-256'\n\t\t}\n\t};\n\n\treturn Accounts._runLoginHandlers(bind, loginRequest);\n}\n\nAccounts.registerLoginHandler('ldap', function(loginRequest) {\n\tif (!loginRequest.ldap || !loginRequest.ldapOptions) {\n\t\treturn undefined;\n\t}\n\n\tlogger.info('Init LDAP login', loginRequest.username);\n\n\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\treturn fallbackDefaultAccountSystem(this, loginRequest.username, loginRequest.ldapPass);\n\t}\n\n\tconst self = this;\n\tconst ldap = new LDAP();\n\tlet ldapUser;\n\n\ttry {\n\t\tldap.connectSync();\n\t\tconst users = ldap.searchUsersSync(loginRequest.username);\n\n\t\tif (users.length !== 1) {\n\t\t\tlogger.info('Search returned', users.length, 'record(s) for', loginRequest.username);\n\t\t\tthrow new Error('User not Found');\n\t\t}\n\n\t\tif (ldap.authSync(users[0].dn, loginRequest.ldapPass) === true) {\n\t\t\tif (ldap.isUserInGroup (loginRequest.username)) {\n\t\t\t\tldapUser = users[0];\n\t\t\t} else {\n\t\t\t\tthrow new Error('User not in a valid group');\n\t\t\t}\n\t\t} else {\n\t\t\tlogger.info('Wrong password for', loginRequest.username);\n\t\t}\n\t} catch (error) {\n\t\tlogger.error(error);\n\t}\n\n\tif (ldapUser === undefined) {\n\t\tif (RocketChat.settings.get('LDAP_Login_Fallback') === true) {\n\t\t\treturn fallbackDefaultAccountSystem(self, loginRequest.username, loginRequest.ldapPass);\n\t\t}\n\n\t\tthrow new Meteor.Error('LDAP-login-error', `LDAP Authentication failed with provided username [${ loginRequest.username }]`);\n\t}\n\n\t// Look to see if user already exists\n\tlet userQuery;\n\n\tconst Unique_Identifier_Field = getLdapUserUniqueID(ldapUser);\n\tlet user;\n\n\tif (Unique_Identifier_Field) {\n\t\tuserQuery = {\n\t\t\t'services.ldap.id': Unique_Identifier_Field.value\n\t\t};\n\n\t\tlogger.info('Querying user');\n\t\tlogger.debug('userQuery', userQuery);\n\n\t\tuser = Meteor.users.findOne(userQuery);\n\t}\n\n\tlet username;\n\n\tif (RocketChat.settings.get('LDAP_Username_Field') !== '') {\n\t\tusername = slug(getLdapUsername(ldapUser));\n\t} else {\n\t\tusername = slug(loginRequest.username);\n\t}\n\n\tif (!user) {\n\t\tuserQuery = {\n\t\t\tusername\n\t\t};\n\n\t\tlogger.debug('userQuery', userQuery);\n\n\t\tuser = Meteor.users.findOne(userQuery);\n\t}\n\n\t// Login user if they exist\n\tif (user) {\n\t\tif (user.ldap !== true && RocketChat.settings.get('LDAP_Merge_Existing_Users') !== true) {\n\t\t\tlogger.info('User exists without \"ldap: true\"');\n\t\t\tthrow new Meteor.Error('LDAP-login-error', `LDAP Authentication succeded, but there's already an existing user with provided username [${ username }] in Mongo.`);\n\t\t}\n\n\t\tlogger.info('Logging user');\n\n\t\tconst stampedToken = Accounts._generateStampedLoginToken();\n\n\t\tMeteor.users.update(user._id, {\n\t\t\t$push: {\n\t\t\t\t'services.resume.loginTokens': Accounts._hashStampedToken(stampedToken)\n\t\t\t}\n\t\t});\n\n\t\tsyncUserData(user, ldapUser);\n\n\t\tif (RocketChat.settings.get('LDAP_Login_Fallback') === true && typeof loginRequest.ldapPass === 'string' && loginRequest.ldapPass.trim() !== '') {\n\t\t\tAccounts.setPassword(user._id, loginRequest.ldapPass, {logout: false});\n\t\t}\n\n\t\treturn {\n\t\t\tuserId: user._id,\n\t\t\ttoken: stampedToken.token\n\t\t};\n\t}\n\n\tlogger.info('User does not exist, creating', username);\n\n\tif (RocketChat.settings.get('LDAP_Username_Field') === '') {\n\t\tusername = undefined;\n\t}\n\n\tif (RocketChat.settings.get('LDAP_Login_Fallback') !== true) {\n\t\tloginRequest.ldapPass = undefined;\n\t}\n\n\t// Create new user\n\tconst result = addLdapUser(ldapUser, username, loginRequest.ldapPass);\n\n\tif (result instanceof Error) {\n\t\tthrow result;\n\t}\n\n\treturn result;\n});\n","RocketChat.settings.addGroup('LDAP', function() {\n\tconst enableQuery = {_id: 'LDAP_Enable', value: true};\n\tconst enableAuthentication = [\n\t\tenableQuery,\n\t\t{_id: 'LDAP_Authentication', value: true}\n\t];\n\tconst enableTLSQuery = [\n\t\tenableQuery,\n\t\t{_id: 'LDAP_Encryption', value: {$in: ['tls', 'ssl']}}\n\t];\n\tconst syncDataQuery = [\n\t\tenableQuery,\n\t\t{_id: 'LDAP_Sync_User_Data', value: true}\n\t];\n\tconst groupFilterQuery = [\n\t\tenableQuery,\n\t\t{_id: 'LDAP_Group_Filter_Enable', value: true}\n\t];\n\tconst backgroundSyncQuery = [\n\t\tenableQuery,\n\t\t{_id: 'LDAP_Background_Sync', value: true}\n\t];\n\n\tthis.add('LDAP_Enable', false, { type: 'boolean', public: true });\n\tthis.add('LDAP_Login_Fallback', true, { type: 'boolean', enableQuery });\n\tthis.add('LDAP_Find_User_After_Login', true, { type: 'boolean', enableQuery });\n\tthis.add('LDAP_Host', '', { type: 'string', enableQuery });\n\tthis.add('LDAP_Port', '389', { type: 'string', enableQuery });\n\tthis.add('LDAP_Reconnect', false, { type: 'boolean', enableQuery });\n\tthis.add('LDAP_Encryption', 'plain', { type: 'select', values: [ { key: 'plain', i18nLabel: 'No_Encryption' }, { key: 'tls', i18nLabel: 'StartTLS' }, { key: 'ssl', i18nLabel: 'SSL/LDAPS' } ], enableQuery });\n\tthis.add('LDAP_CA_Cert', '', { type: 'string', multiline: true, enableQuery: enableTLSQuery });\n\tthis.add('LDAP_Reject_Unauthorized', true, { type: 'boolean', enableQuery: enableTLSQuery });\n\tthis.add('LDAP_BaseDN', '', { type: 'string', enableQuery });\n\tthis.add('LDAP_Internal_Log_Level', 'disabled', {\n\t\ttype: 'select',\n\t\tvalues: [\n\t\t\t{ key: 'disabled', i18nLabel: 'Disabled' },\n\t\t\t{ key: 'error', i18nLabel: 'Error' },\n\t\t\t{ key: 'warn', i18nLabel: 'Warn' },\n\t\t\t{ key: 'info', i18nLabel: 'Info' },\n\t\t\t{ key: 'debug', i18nLabel: 'Debug' },\n\t\t\t{ key: 'trace', i18nLabel: 'Trace' }\n\t\t],\n\t\tenableQuery\n\t});\n\tthis.add('LDAP_Test_Connection', 'ldap_test_connection', { type: 'action', actionText: 'Test_Connection' });\n\n\tthis.section('Authentication', function() {\n\t\tthis.add('LDAP_Authentication', false, { type: 'boolean', enableQuery });\n\t\tthis.add('LDAP_Authentication_UserDN', '', { type: 'string', enableQuery: enableAuthentication });\n\t\tthis.add('LDAP_Authentication_Password', '', { type: 'password', enableQuery: enableAuthentication });\n\t});\n\n\tthis.section('Timeouts', function() {\n\t\tthis.add('LDAP_Timeout', 60000, {type: 'int', enableQuery});\n\t\tthis.add('LDAP_Connect_Timeout', 1000, {type: 'int', enableQuery});\n\t\tthis.add('LDAP_Idle_Timeout', 1000, {type: 'int', enableQuery});\n\t});\n\n\tthis.section('User Search', function() {\n\t\tthis.add('LDAP_User_Search_Filter', '(objectclass=*)', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_User_Search_Scope', 'sub', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_User_Search_Field', 'sAMAccountName', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Search_Page_Size', 250, { type: 'int', enableQuery });\n\t\tthis.add('LDAP_Search_Size_Limit', 1000, { type: 'int', enableQuery });\n\t});\n\n\tthis.section('User Search (Group Validation)', function() {\n\t\tthis.add('LDAP_Group_Filter_Enable', false, { type: 'boolean', enableQuery });\n\t\tthis.add('LDAP_Group_Filter_ObjectClass', 'groupOfUniqueNames', { type: 'string', enableQuery: groupFilterQuery });\n\t\tthis.add('LDAP_Group_Filter_Group_Id_Attribute', 'cn', { type: 'string', enableQuery: groupFilterQuery });\n\t\tthis.add('LDAP_Group_Filter_Group_Member_Attribute', 'uniqueMember', { type: 'string', enableQuery: groupFilterQuery });\n\t\tthis.add('LDAP_Group_Filter_Group_Member_Format', 'uniqueMember', { type: 'string', enableQuery: groupFilterQuery });\n\t\tthis.add('LDAP_Group_Filter_Group_Name', 'ROCKET_CHAT', { type: 'string', enableQuery: groupFilterQuery });\n\t});\n\n\tthis.section('Sync / Import', function() {\n\t\tthis.add('LDAP_Username_Field', 'sAMAccountName', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Unique_Identifier_Field', 'objectGUID,ibm-entryUUID,GUID,dominoUNID,nsuniqueId,uidNumber', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Default_Domain', '', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Merge_Existing_Users', false, { type: 'boolean', enableQuery });\n\n\t\tthis.add('LDAP_Sync_User_Data', false, { type: 'boolean', enableQuery });\n\t\tthis.add('LDAP_Sync_User_Data_FieldMap', '{\"cn\":\"name\", \"mail\":\"email\"}', { type: 'string', enableQuery: syncDataQuery });\n\t\tthis.add('LDAP_Sync_User_Avatar', true, { type: 'boolean', enableQuery });\n\n\t\tthis.add('LDAP_Background_Sync', false, { type: 'boolean', enableQuery });\n\t\tthis.add('LDAP_Background_Sync_Interval', 'Every 24 hours', { type: 'string', enableQuery: backgroundSyncQuery });\n\t\tthis.add('LDAP_Background_Sync_Import_New_Users', true, { type: 'boolean', enableQuery: backgroundSyncQuery });\n\t\tthis.add('LDAP_Background_Sync_Keep_Existant_Users_Updated', true, { type: 'boolean', enableQuery: backgroundSyncQuery });\n\n\t\tthis.add('LDAP_Sync_Now', 'ldap_sync_now', { type: 'action', actionText: 'Execute_Synchronization_Now' });\n\t});\n});\n","/* globals slugify, SyncedCron */\n\nimport _ from 'underscore';\nimport LDAP from './ldap';\n\nconst logger = new Logger('LDAPSync', {});\n\nexport function slug(text) {\n\tif (RocketChat.settings.get('UTF8_Names_Slugify') !== true) {\n\t\treturn text;\n\t}\n\ttext = slugify(text, '.');\n\treturn text.replace(/[^0-9a-z-_.]/g, '');\n}\n\n\nexport function getPropertyValue(obj, key) {\n\ttry {\n\t\treturn _.reduce(key.split('.'), (acc, el) => acc[el], obj);\n\t} catch (err) {\n\t\treturn undefined;\n\t}\n}\n\n\nexport function getLdapUsername(ldapUser) {\n\tconst usernameField = RocketChat.settings.get('LDAP_Username_Field');\n\n\tif (usernameField.indexOf('#{') > -1) {\n\t\treturn usernameField.replace(/#{(.+?)}/g, function(match, field) {\n\t\t\treturn ldapUser[field];\n\t\t});\n\t}\n\n\treturn ldapUser[usernameField];\n}\n\n\nexport function getLdapUserUniqueID(ldapUser) {\n\tlet Unique_Identifier_Field = RocketChat.settings.get('LDAP_Unique_Identifier_Field');\n\n\tif (Unique_Identifier_Field !== '') {\n\t\tUnique_Identifier_Field = Unique_Identifier_Field.replace(/\\s/g, '').split(',');\n\t} else {\n\t\tUnique_Identifier_Field = [];\n\t}\n\n\tlet User_Search_Field = RocketChat.settings.get('LDAP_User_Search_Field');\n\n\tif (User_Search_Field !== '') {\n\t\tUser_Search_Field = User_Search_Field.replace(/\\s/g, '').split(',');\n\t} else {\n\t\tUser_Search_Field = [];\n\t}\n\n\tUnique_Identifier_Field = Unique_Identifier_Field.concat(User_Search_Field);\n\n\tif (Unique_Identifier_Field.length > 0) {\n\t\tUnique_Identifier_Field = Unique_Identifier_Field.find((field) => {\n\t\t\treturn !_.isEmpty(ldapUser._raw[field]);\n\t\t});\n\t\tif (Unique_Identifier_Field) {\n\t\t\tUnique_Identifier_Field = {\n\t\t\t\tattribute: Unique_Identifier_Field,\n\t\t\t\tvalue: ldapUser._raw[Unique_Identifier_Field].toString('hex')\n\t\t\t};\n\t\t}\n\t\treturn Unique_Identifier_Field;\n\t}\n}\n\nexport function getDataToSyncUserData(ldapUser, user) {\n\tconst syncUserData = RocketChat.settings.get('LDAP_Sync_User_Data');\n\tconst syncUserDataFieldMap = RocketChat.settings.get('LDAP_Sync_User_Data_FieldMap').trim();\n\n\tconst userData = {};\n\n\tif (syncUserData && syncUserDataFieldMap) {\n\t\tconst whitelistedUserFields = ['email', 'name', 'customFields'];\n\t\tconst fieldMap = JSON.parse(syncUserDataFieldMap);\n\t\tconst emailList = [];\n\t\t_.map(fieldMap, function(userField, ldapField) {\n\t\t\tswitch (userField) {\n\t\t\t\tcase 'email':\n\t\t\t\t\tif (!ldapUser.hasOwnProperty(ldapField)) {\n\t\t\t\t\t\tlogger.debug(`user does not have attribute: ${ ldapField }`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_.isObject(ldapUser[ldapField])) {\n\t\t\t\t\t\t_.map(ldapUser[ldapField], function(item) {\n\t\t\t\t\t\t\temailList.push({ address: item, verified: true });\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\temailList.push({ address: ldapUser[ldapField], verified: true });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconst [outerKey, innerKeys] = userField.split(/\\.(.+)/);\n\n\t\t\t\t\tif (!_.find(whitelistedUserFields, (el) => el === outerKey)) {\n\t\t\t\t\t\tlogger.debug(`user attribute not whitelisted: ${ userField }`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (outerKey === 'customFields') {\n\t\t\t\t\t\tlet customFieldsMeta;\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcustomFieldsMeta = JSON.parse(RocketChat.settings.get('Accounts_CustomFields'));\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tlogger.debug('Invalid JSON for Custom Fields');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!getPropertyValue(customFieldsMeta, innerKeys)) {\n\t\t\t\t\t\t\tlogger.debug(`user attribute does not exist: ${ userField }`);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst tmpUserField = getPropertyValue(user, userField);\n\t\t\t\t\tconst tmpLdapField = RocketChat.templateVarHandler(ldapField, ldapUser);\n\n\t\t\t\t\tif (tmpLdapField && tmpUserField !== tmpLdapField) {\n\t\t\t\t\t\t// creates the object structure instead of just assigning 'tmpLdapField' to\n\t\t\t\t\t\t// 'userData[userField]' in order to avoid the \"cannot use the part (...)\n\t\t\t\t\t\t// to traverse the element\" (MongoDB) error that can happen. Do not handle\n\t\t\t\t\t\t// arrays.\n\t\t\t\t\t\t// TODO: Find a better solution.\n\t\t\t\t\t\tconst dKeys = userField.split('.');\n\t\t\t\t\t\tconst lastKey = _.last(dKeys);\n\t\t\t\t\t\t_.reduce(dKeys, (obj, currKey) =>\n\t\t\t\t\t\t\t(currKey === lastKey)\n\t\t\t\t\t\t\t\t? obj[currKey] = tmpLdapField\n\t\t\t\t\t\t\t\t: obj[currKey] = obj[currKey] || {}\n\t\t\t\t\t\t\t, userData);\n\t\t\t\t\t\tlogger.debug(`user.${ userField } changed to: ${ tmpLdapField }`);\n\t\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (emailList.length > 0) {\n\t\t\tif (JSON.stringify(user.emails) !== JSON.stringify(emailList)) {\n\t\t\t\tuserData.emails = emailList;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst uniqueId = getLdapUserUniqueID(ldapUser);\n\n\tif (uniqueId && (!user.services || !user.services.ldap || user.services.ldap.id !== uniqueId.value || user.services.ldap.idAttribute !== uniqueId.attribute)) {\n\t\tuserData['services.ldap.id'] = uniqueId.value;\n\t\tuserData['services.ldap.idAttribute'] = uniqueId.attribute;\n\t}\n\n\tif (user.ldap !== true) {\n\t\tuserData.ldap = true;\n\t}\n\n\tif (_.size(userData)) {\n\t\treturn userData;\n\t}\n}\n\n\nexport function syncUserData(user, ldapUser) {\n\tlogger.info('Syncing user data');\n\tlogger.debug('user', {'email': user.email, '_id': user._id});\n\tlogger.debug('ldapUser', ldapUser.object);\n\n\tconst userData = getDataToSyncUserData(ldapUser, user);\n\tif (user && user._id && userData) {\n\t\tlogger.debug('setting', JSON.stringify(userData, null, 2));\n\t\tif (userData.name) {\n\t\t\tRocketChat._setRealName(user._id, userData.name);\n\t\t\tdelete userData.name;\n\t\t}\n\t\tMeteor.users.update(user._id, { $set: userData });\n\t\tuser = Meteor.users.findOne({_id: user._id});\n\t}\n\n\tif (RocketChat.settings.get('LDAP_Username_Field') !== '') {\n\t\tconst username = slug(getLdapUsername(ldapUser));\n\t\tif (user && user._id && username !== user.username) {\n\t\t\tlogger.info('Syncing user username', user.username, '->', username);\n\t\t\tRocketChat._setUsername(user._id, username);\n\t\t}\n\t}\n\n\tif (user && user._id && RocketChat.settings.get('LDAP_Sync_User_Avatar') === true) {\n\t\tconst avatar = ldapUser._raw.thumbnailPhoto || ldapUser._raw.jpegPhoto;\n\t\tif (avatar) {\n\t\t\tlogger.info('Syncing user avatar');\n\n\t\t\tconst rs = RocketChatFile.bufferToStream(avatar);\n\t\t\tconst fileStore = FileUpload.getStore('Avatars');\n\t\t\tfileStore.deleteByName(user.username);\n\n\t\t\tconst file = {\n\t\t\t\tuserId: user._id,\n\t\t\t\ttype: 'image/jpeg'\n\t\t\t};\n\n\t\t\tMeteor.runAsUser(user._id, () => {\n\t\t\t\tfileStore.insert(file, rs, () => {\n\t\t\t\t\tMeteor.setTimeout(function() {\n\t\t\t\t\t\tRocketChat.models.Users.setAvatarOrigin(user._id, 'ldap');\n\t\t\t\t\t\tRocketChat.Notifications.notifyLogged('updateAvatar', {username: user.username});\n\t\t\t\t\t}, 500);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function addLdapUser(ldapUser, username, password) {\n\tconst uniqueId = getLdapUserUniqueID(ldapUser);\n\n\tconst userObject = {};\n\n\tif (username) {\n\t\tuserObject.username = username;\n\t}\n\n\tconst userData = getDataToSyncUserData(ldapUser, {});\n\n\tif (userData && userData.emails && userData.emails[0] && userData.emails[0].address) {\n\t\tif (Array.isArray(userData.emails[0].address)) {\n\t\t\tuserObject.email = userData.emails[0].address[0];\n\t\t} else {\n\t\t\tuserObject.email = userData.emails[0].address;\n\t\t}\n\t} else if (ldapUser.mail && ldapUser.mail.indexOf('@') > -1) {\n\t\tuserObject.email = ldapUser.mail;\n\t} else if (RocketChat.settings.get('LDAP_Default_Domain') !== '') {\n\t\tuserObject.email = `${ username || uniqueId.value }@${ RocketChat.settings.get('LDAP_Default_Domain') }`;\n\t} else {\n\t\tconst error = new Meteor.Error('LDAP-login-error', 'LDAP Authentication succeded, there is no email to create an account. Have you tried setting your Default Domain in LDAP Settings?');\n\t\tlogger.error(error);\n\t\tthrow error;\n\t}\n\n\tlogger.debug('New user data', userObject);\n\n\tif (password) {\n\t\tuserObject.password = password;\n\t}\n\n\ttry {\n\t\tuserObject._id = Accounts.createUser(userObject);\n\t} catch (error) {\n\t\tlogger.error('Error creating user', error);\n\t\treturn error;\n\t}\n\n\tsyncUserData(userObject, ldapUser);\n\n\treturn {\n\t\tuserId: userObject._id\n\t};\n}\n\nexport function importNewUsers(ldap) {\n\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\tlogger.error('Can\\'t run LDAP Import, LDAP is disabled');\n\t\treturn;\n\t}\n\n\tif (!ldap) {\n\t\tldap = new LDAP();\n\t\tldap.connectSync();\n\t}\n\n\tlet count = 0;\n\tldap.searchUsersSync('*', Meteor.bindEnvironment((error, ldapUsers, {next, end} = {}) => {\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tldapUsers.forEach((ldapUser) => {\n\t\t\tcount++;\n\n\t\t\tconst uniqueId = getLdapUserUniqueID(ldapUser);\n\t\t\t// Look to see if user already exists\n\t\t\tconst userQuery = {\n\t\t\t\t'services.ldap.id': uniqueId.value\n\t\t\t};\n\n\t\t\tlogger.debug('userQuery', userQuery);\n\n\t\t\tlet username;\n\t\t\tif (RocketChat.settings.get('LDAP_Username_Field') !== '') {\n\t\t\t\tusername = slug(getLdapUsername(ldapUser));\n\t\t\t}\n\n\t\t\t// Add user if it was not added before\n\t\t\tlet user = Meteor.users.findOne(userQuery);\n\n\t\t\tif (!user && username && RocketChat.settings.get('LDAP_Merge_Existing_Users') === true) {\n\t\t\t\tconst userQuery = {\n\t\t\t\t\tusername\n\t\t\t\t};\n\n\t\t\t\tlogger.debug('userQuery merge', userQuery);\n\n\t\t\t\tuser = Meteor.users.findOne(userQuery);\n\t\t\t\tif (user) {\n\t\t\t\t\tsyncUserData(user, ldapUser);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!user) {\n\t\t\t\taddLdapUser(ldapUser, username);\n\t\t\t}\n\n\t\t\tif (count % 100 === 0) {\n\t\t\t\tlogger.info('Import running. Users imported until now:', count);\n\t\t\t}\n\t\t});\n\n\t\tif (end) {\n\t\t\tlogger.info('Import finished. Users imported:', count);\n\t\t}\n\n\t\tnext(count);\n\t}));\n}\n\nfunction sync() {\n\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\treturn;\n\t}\n\n\tconst ldap = new LDAP();\n\n\ttry {\n\t\tldap.connectSync();\n\n\t\tlet users;\n\t\tif (RocketChat.settings.get('LDAP_Background_Sync_Keep_Existant_Users_Updated') === true) {\n\t\t\tusers = RocketChat.models.Users.findLDAPUsers();\n\t\t}\n\n\t\tif (RocketChat.settings.get('LDAP_Background_Sync_Import_New_Users') === true) {\n\t\t\timportNewUsers(ldap);\n\t\t}\n\n\t\tif (RocketChat.settings.get('LDAP_Background_Sync_Keep_Existant_Users_Updated') === true) {\n\t\t\tusers.forEach(function(user) {\n\t\t\t\tlet ldapUser;\n\n\t\t\t\tif (user.services && user.services.ldap && user.services.ldap.id) {\n\t\t\t\t\tldapUser = ldap.getUserByIdSync(user.services.ldap.id, user.services.ldap.idAttribute);\n\t\t\t\t} else {\n\t\t\t\t\tldapUser = ldap.getUserByUsernameSync(user.username);\n\t\t\t\t}\n\n\t\t\t\tif (ldapUser) {\n\t\t\t\t\tsyncUserData(user, ldapUser);\n\t\t\t\t} else {\n\t\t\t\t\tlogger.info('Can\\'t sync user', user.username);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t} catch (error) {\n\t\tlogger.error(error);\n\t\treturn error;\n\t}\n\treturn true;\n}\n\nconst jobName = 'LDAP_Sync';\n\nconst addCronJob = _.debounce(Meteor.bindEnvironment(function addCronJobDebounced() {\n\tif (RocketChat.settings.get('LDAP_Background_Sync') !== true) {\n\t\tlogger.info('Disabling LDAP Background Sync');\n\t\tif (SyncedCron.nextScheduledAtDate(jobName)) {\n\t\t\tSyncedCron.remove(jobName);\n\t\t}\n\t\treturn;\n\t}\n\n\tif (RocketChat.settings.get('LDAP_Background_Sync_Interval')) {\n\t\tlogger.info('Enabling LDAP Background Sync');\n\t\tSyncedCron.add({\n\t\t\tname: jobName,\n\t\t\tschedule: (parser) => parser.text(RocketChat.settings.get('LDAP_Background_Sync_Interval')),\n\t\t\tjob() {\n\t\t\t\tsync();\n\t\t\t}\n\t\t});\n\t\tSyncedCron.start();\n\t}\n}), 500);\n\nMeteor.startup(() => {\n\tMeteor.defer(() => {\n\t\tRocketChat.settings.get('LDAP_Background_Sync', addCronJob);\n\t\tRocketChat.settings.get('LDAP_Background_Sync_Interval', addCronJob);\n\t});\n});\n","import {importNewUsers} from './sync';\n\nMeteor.methods({\n\tldap_sync_now() {\n\t\tconst user = Meteor.user();\n\t\tif (!user) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'ldap_sync_users' });\n\t\t}\n\n\t\tif (!RocketChat.authz.hasRole(user._id, 'admin')) {\n\t\t\tthrow new Meteor.Error('error-not-authorized', 'Not authorized', { method: 'ldap_sync_users' });\n\t\t}\n\n\t\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\t\tthrow new Meteor.Error('LDAP_disabled');\n\t\t}\n\n\t\tthis.unblock();\n\n\t\timportNewUsers();\n\n\t\treturn {\n\t\t\tmessage: 'Sync_in_progress',\n\t\t\tparams: []\n\t\t};\n\t}\n});\n","import LDAP from './ldap';\n\nMeteor.methods({\n\tldap_test_connection() {\n\t\tconst user = Meteor.user();\n\t\tif (!user) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'ldap_test_connection' });\n\t\t}\n\n\t\tif (!RocketChat.authz.hasRole(user._id, 'admin')) {\n\t\t\tthrow new Meteor.Error('error-not-authorized', 'Not authorized', { method: 'ldap_test_connection' });\n\t\t}\n\n\t\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\t\tthrow new Meteor.Error('LDAP_disabled');\n\t\t}\n\n\t\tlet ldap;\n\t\ttry {\n\t\t\tldap = new LDAP();\n\t\t\tldap.connectSync();\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tthrow new Meteor.Error(error.message);\n\t\t}\n\n\t\ttry {\n\t\t\tldap.bindIfNecessary();\n\t\t} catch (error) {\n\t\t\tthrow new Meteor.Error(error.name || error.message);\n\t\t}\n\n\t\treturn {\n\t\t\tmessage: 'Connection_success',\n\t\t\tparams: []\n\t\t};\n\t}\n});\n"]}