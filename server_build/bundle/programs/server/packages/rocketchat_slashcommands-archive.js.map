{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:slashcommands-archive/server/server.js","meteor://ðŸ’»app/packages/rocketchat:slashcommands-archive/server/messages.js"],"names":["Archive","command","params","item","Match","test","String","channel","trim","room","RocketChat","models","Rooms","findOneById","rid","name","replace","findOneByName","user","Meteor","users","findOne","userId","Notifications","notifyUser","_id","Random","id","ts","Date","msg","TAPi18n","__","postProcess","sprintf","language","t","archived","call","Messages","createRoomArchivedByRoomIdAndUser","slashCommands","add","description","roomId","createWithTypeRoomIdMessageAndUser"],"mappings":"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","file":"/packages/rocketchat_slashcommands-archive.js","sourcesContent":["function Archive(command, params, item) {\n\tif (command !== 'archive' || !Match.test(params, String)) {\n\t\treturn;\n\t}\n\n\tlet channel = params.trim();\n\tlet room;\n\n\tif (channel === '') {\n\t\troom = RocketChat.models.Rooms.findOneById(item.rid);\n\t\tchannel = room.name;\n\t} else {\n\t\tchannel = channel.replace('#', '');\n\t\troom = RocketChat.models.Rooms.findOneByName(channel);\n\t}\n\n\tconst user = Meteor.users.findOne(Meteor.userId());\n\n\tif (!room) {\n\t\treturn RocketChat.Notifications.notifyUser(Meteor.userId(), 'message', {\n\t\t\t_id: Random.id(),\n\t\t\trid: item.rid,\n\t\t\tts: new Date(),\n\t\t\tmsg: TAPi18n.__('Channel_doesnt_exist', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [channel]\n\t\t\t}, user.language)\n\t\t});\n\t}\n\n\t// You can not archive direct messages.\n\tif (room.t === 'd') {\n\t\treturn;\n\t}\n\n\tif (room.archived) {\n\t\tRocketChat.Notifications.notifyUser(Meteor.userId(), 'message', {\n\t\t\t_id: Random.id(),\n\t\t\trid: item.rid,\n\t\t\tts: new Date(),\n\t\t\tmsg: TAPi18n.__('Duplicate_archived_channel_name', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [channel]\n\t\t\t}, user.language)\n\t\t});\n\t\treturn;\n\t}\n\tMeteor.call('archiveRoom', room._id);\n\n\tRocketChat.models.Messages.createRoomArchivedByRoomIdAndUser(room._id, Meteor.user());\n\tRocketChat.Notifications.notifyUser(Meteor.userId(), 'message', {\n\t\t_id: Random.id(),\n\t\trid: item.rid,\n\t\tts: new Date(),\n\t\tmsg: TAPi18n.__('Channel_Archived', {\n\t\t\tpostProcess: 'sprintf',\n\t\t\tsprintf: [channel]\n\t\t}, user.language)\n\t});\n\n\treturn Archive;\n}\n\nRocketChat.slashCommands.add('archive', Archive, {\n\tdescription: 'Archive',\n\tparams: '#channel'\n});\n","RocketChat.models.Messages.createRoomArchivedByRoomIdAndUser = function(roomId, user) {\n\treturn this.createWithTypeRoomIdMessageAndUser('room-archived', roomId, '', user);\n};\n"]}