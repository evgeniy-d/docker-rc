{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:slashcommands-hide/server/hide.js"],"names":["Hide","command","param","item","Match","test","String","room","trim","user","Meteor","rid","strippedRoom","replace","split","type","roomObject","RocketChat","models","Rooms","findOneByName","findOne","t","usernames","$all","username","Notifications","notifyUser","_id","Random","id","ts","Date","msg","TAPi18n","__","postProcess","sprintf","language","Subscriptions","findOneByRoomIdAndUserId","fields","call","error","slashCommands","add","description","params"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;;;;AAIA,SAASA,IAAT,CAAcC,OAAd,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoC;AACnC,MAAIF,YAAY,MAAZ,IAAsB,CAACG,MAAMC,IAAN,CAAWH,KAAX,EAAkBI,MAAlB,CAA3B,EAAsD;AACrD;AACA;;AACD,QAAMC,OAAOL,MAAMM,IAAN,EAAb;AACA,QAAMC,OAAOC,OAAOD,IAAP,EAAb,CALmC,CAMnC;;AACA,MAAI;AAACE;AAAD,MAAQR,IAAZ;;AACA,MAAII,SAAS,EAAb,EAAiB;AAChB,UAAM,CAACK,YAAD,IAAiBL,KAAKM,OAAL,CAAa,KAAb,EAAoB,EAApB,EAAwBC,KAAxB,CAA8B,GAA9B,CAAvB;AACA,UAAM,CAACC,IAAD,IAASR,IAAf;AAEA,UAAMS,aAAaD,SAAS,GAAT,GAAeE,WAAWC,MAAX,CAAkBC,KAAlB,CAAwBC,aAAxB,CAAsCR,YAAtC,CAAf,GAAqEK,WAAWC,MAAX,CAAkBC,KAAlB,CAAwBE,OAAxB,CAAgC;AACvHC,SAAG,GADoH;AAEvHC,iBAAW;AAAEC,cAAM,CAACf,KAAKgB,QAAN,EAAgBb,YAAhB;AAAR;AAF4G,KAAhC,CAAxF;;AAKA,QAAI,CAACI,UAAL,EAAiB;AAChB,aAAOC,WAAWS,aAAX,CAAyBC,UAAzB,CAAoClB,KAAKmB,GAAzC,EAA8C,SAA9C,EAAyD;AAC/DA,aAAKC,OAAOC,EAAP,EAD0D;AAE/DnB,aAAKR,KAAKQ,GAFqD;AAG/DoB,YAAI,IAAIC,IAAJ,EAH2D;AAI/DC,aAAKC,QAAQC,EAAR,CAAW,sBAAX,EAAmC;AACvCC,uBAAa,SAD0B;AAEvCC,mBAAS,CAAC9B,IAAD;AAF8B,SAAnC,EAGFE,KAAK6B,QAHH;AAJ0D,OAAzD,CAAP;AASA;;AAED,QAAI,CAACrB,WAAWC,MAAX,CAAkBqB,aAAlB,CAAgCC,wBAAhC,CAAyDjC,KAAKqB,GAA9D,EAAmEnB,KAAKmB,GAAxE,EAA6E;AAAEa,cAAQ;AAAEb,aAAK;AAAP;AAAV,KAA7E,CAAL,EAA2G;AAC1G,aAAOX,WAAWS,aAAX,CAAyBC,UAAzB,CAAoClB,KAAKmB,GAAzC,EAA8C,SAA9C,EAAyD;AAC/DA,aAAKC,OAAOC,EAAP,EAD0D;AAE/DnB,aAAKR,KAAKQ,GAFqD;AAG/DoB,YAAI,IAAIC,IAAJ,EAH2D;AAI/DC,aAAKC,QAAQC,EAAR,CAAW,+BAAX,EAA4C;AAChDC,uBAAa,SADmC;AAEhDC,mBAAS,CAAC9B,IAAD;AAFuC,SAA5C,EAGFE,KAAK6B,QAHH;AAJ0D,OAAzD,CAAP;AASA;;AACD3B,UAAMK,WAAWY,GAAjB;AACA;;AAEDlB,SAAOgC,IAAP,CAAY,UAAZ,EAAwB/B,GAAxB,EAA6BgC,SAAS;AACrC,QAAIA,KAAJ,EAAW;AACV,aAAO1B,WAAWS,aAAX,CAAyBC,UAAzB,CAAoClB,KAAKmB,GAAzC,EAA8C,SAA9C,EAAyD;AAC/DA,aAAKC,OAAOC,EAAP,EAD0D;AAE/DnB,aAAKR,KAAKQ,GAFqD;AAG/DoB,YAAI,IAAIC,IAAJ,EAH2D;AAI/DC,aAAKC,QAAQC,EAAR,CAAWQ,KAAX,EAAkB,IAAlB,EAAwBlC,KAAK6B,QAA7B;AAJ0D,OAAzD,CAAP;AAMA;AACD,GATD;AAUA;;AAEDrB,WAAW2B,aAAX,CAAyBC,GAAzB,CAA6B,MAA7B,EAAqC7C,IAArC,EAA2C;AAAE8C,eAAa,WAAf;AAA4BC,UAAQ;AAApC,CAA3C,E","file":"/packages/rocketchat_slashcommands-hide.js","sourcesContent":["\n/*\n* Hide is a named function that will replace /hide commands\n* @param {Object} message - The message object\n*/\nfunction Hide(command, param, item) {\n\tif (command !== 'hide' || !Match.test(param, String)) {\n\t\treturn;\n\t}\n\tconst room = param.trim();\n\tconst user = Meteor.user();\n\t// if there is not a param, hide the current room\n\tlet {rid} = item;\n\tif (room !== '') {\n\t\tconst [strippedRoom] = room.replace(/#|@/, '').split(' ');\n\t\tconst [type] = room;\n\n\t\tconst roomObject = type === '#' ? RocketChat.models.Rooms.findOneByName(strippedRoom) : RocketChat.models.Rooms.findOne({\n\t\t\tt: 'd',\n\t\t\tusernames: { $all: [user.username, strippedRoom] }\n\t\t});\n\n\t\tif (!roomObject) {\n\t\t\treturn RocketChat.Notifications.notifyUser(user._id, 'message', {\n\t\t\t\t_id: Random.id(),\n\t\t\t\trid: item.rid,\n\t\t\t\tts: new Date,\n\t\t\t\tmsg: TAPi18n.__('Channel_doesnt_exist', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [room]\n\t\t\t\t}, user.language)\n\t\t\t});\n\t\t}\n\n\t\tif (!RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(room._id, user._id, { fields: { _id: 1 } })) {\n\t\t\treturn RocketChat.Notifications.notifyUser(user._id, 'message', {\n\t\t\t\t_id: Random.id(),\n\t\t\t\trid: item.rid,\n\t\t\t\tts: new Date,\n\t\t\t\tmsg: TAPi18n.__('error-logged-user-not-in-room', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [room]\n\t\t\t\t}, user.language)\n\t\t\t});\n\t\t}\n\t\trid = roomObject._id;\n\t}\n\n\tMeteor.call('hideRoom', rid, error => {\n\t\tif (error) {\n\t\t\treturn RocketChat.Notifications.notifyUser(user._id, 'message', {\n\t\t\t\t_id: Random.id(),\n\t\t\t\trid: item.rid,\n\t\t\t\tts: new Date,\n\t\t\t\tmsg: TAPi18n.__(error, null, user.language)\n\t\t\t});\n\t\t}\n\t});\n}\n\nRocketChat.slashCommands.add('hide', Hide, { description: 'Hide_room', params: '#room' });\n"]}