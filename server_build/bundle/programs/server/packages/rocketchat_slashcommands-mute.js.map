{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:slashcommands-mute/server/mute.js","meteor://ðŸ’»app/packages/rocketchat:slashcommands-mute/server/unmute.js"],"names":["RocketChat","slashCommands","add","Mute","command","params","item","Match","test","String","username","trim","replace","userId","Meteor","user","users","findOne","mutedUser","models","Users","findOneByUsername","Notifications","notifyUser","_id","Random","id","rid","ts","Date","msg","TAPi18n","__","postProcess","sprintf","language","subscription","Subscriptions","findOneByRoomIdAndUserId","fields","call","description","Unmute","unmutedUser"],"mappings":"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","file":"/packages/rocketchat_slashcommands-mute.js","sourcesContent":["\n/*\n* Mute is a named function that will replace /mute commands\n*/\n\nRocketChat.slashCommands.add('mute', function Mute(command, params, item) {\n\tif (command !== 'mute' || !Match.test(params, String)) {\n\t\treturn;\n\t}\n\tconst username = params.trim().replace('@', '');\n\tif (username === '') {\n\t\treturn;\n\t}\n\tconst userId = Meteor.userId();\n\tconst user = Meteor.users.findOne(userId);\n\tconst mutedUser = RocketChat.models.Users.findOneByUsername(username);\n\tif (mutedUser == null) {\n\t\tRocketChat.Notifications.notifyUser(userId, 'message', {\n\t\t\t_id: Random.id(),\n\t\t\trid: item.rid,\n\t\t\tts: new Date,\n\t\t\tmsg: TAPi18n.__('Username_doesnt_exist', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [username]\n\t\t\t}, user.language)\n\t\t});\n\t\treturn;\n\t}\n\n\tconst subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(item.rid, mutedUser._id, { fields: { _id: 1 } });\n\tif (!subscription) {\n\t\tRocketChat.Notifications.notifyUser(userId, 'message', {\n\t\t\t_id: Random.id(),\n\t\t\trid: item.rid,\n\t\t\tts: new Date,\n\t\t\tmsg: TAPi18n.__('Username_is_not_in_this_room', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [username]\n\t\t\t}, user.language)\n\t\t});\n\t\treturn;\n\t}\n\tMeteor.call('muteUserInRoom', {\n\t\trid: item.rid,\n\t\tusername\n\t});\n}, {\n\tdescription: 'Mute_someone_in_room',\n\tparams: '@username'\n});\n","\n/*\n* Unmute is a named function that will replace /unmute commands\n*/\n\nRocketChat.slashCommands.add('unmute', function Unmute(command, params, item) {\n\n\tif (command !== 'unmute' || !Match.test(params, String)) {\n\t\treturn;\n\t}\n\tconst username = params.trim().replace('@', '');\n\tif (username === '') {\n\t\treturn;\n\t}\n\tconst user = Meteor.users.findOne(Meteor.userId());\n\tconst unmutedUser = RocketChat.models.Users.findOneByUsername(username);\n\tif (unmutedUser == null) {\n\t\treturn RocketChat.Notifications.notifyUser(Meteor.userId(), 'message', {\n\t\t\t_id: Random.id(),\n\t\t\trid: item.rid,\n\t\t\tts: new Date,\n\t\t\tmsg: TAPi18n.__('Username_doesnt_exist', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [username]\n\t\t\t}, user.language)\n\t\t});\n\t}\n\n\tconst subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(item.rid, unmutedUser._id, { fields: { _id: 1 } });\n\tif (!subscription) {\n\t\treturn RocketChat.Notifications.notifyUser(Meteor.userId(), 'message', {\n\t\t\t_id: Random.id(),\n\t\t\trid: item.rid,\n\t\t\tts: new Date,\n\t\t\tmsg: TAPi18n.__('Username_is_not_in_this_room', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [username]\n\t\t\t}, user.language)\n\t\t});\n\t}\n\tMeteor.call('unmuteUserInRoom', {\n\t\trid: item.rid,\n\t\tusername\n\t});\n}, {\n\tdescription: 'Unmute_someone_in_room',\n\tparams: '@username'\n});\n"]}