{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:cas/server/cas_rocketchat.js","meteor://ðŸ’»app/packages/rocketchat:cas/server/cas_server.js","meteor://ðŸ’»app/packages/rocketchat:cas/server/models/CredentialTokens.js"],"names":["logger","Logger","Meteor","startup","RocketChat","settings","addGroup","add","type","group","public","values","key","i18nLabel","section","timer","updateServices","clearTimeout","setTimeout","data","enabled","get","base_url","login_url","buttonLabelText","buttonLabelColor","buttonColor","width","height","autoclose","info","ServiceConfiguration","configurations","upsert","service","$set","remove","value","_","module","watch","require","default","v","fiber","url","CAS","RoutePolicy","declare","closePopup","res","writeHead","content","end","casTicket","req","token","callback","error","parsedUrl","parse","ticketId","query","ticket","baseUrl","cas_version","parseFloat","appUrl","absoluteUrl","replace","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","debug","cas","version","validate","bindEnvironment","err","status","username","details","message","user_info","attributes","extend","models","CredentialTokens","create","middleware","next","barePath","substring","indexOf","splitPath","split","credentialToken","WebApp","connectHandlers","use","run","Accounts","registerLoginHandler","options","undefined","credentials","findOneById","Error","LoginCancelledError","numericError","result","userInfo","syncUserDataFieldMap","trim","sync_enabled","ext_attrs","int_attrs","email","name","rooms","each","ext_name","attr_map","JSON","source","int_name","isString","user","users","findOne","_id","_setRealName","update","emails","address","verified","newUser","active","globalRoles","services","external_id","attrs","userId","insertUserDoc","room_name","room","Rooms","findOneByNameAndType","createWithIdTypeAndName","Random","id","Subscriptions","findOneByRoomIdAndUserId","createWithRoomAndUser","ts","Date","open","alert","unread","userMentions","groupMentions","_Base","constructor","tryEnsureIndex","sparse","expireAfterSeconds","validForMilliseconds","expireAt","now","insert","$gt"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEAA,SAAS,IAAIC,MAAJ,CAAW,KAAX,EAAkB,EAAlB,CAAT;AAEAC,OAAOC,OAAP,CAAe,YAAW;AACzBC,aAAWC,QAAX,CAAoBC,QAApB,CAA6B,KAA7B,EAAoC,YAAW;AAC9C,SAAKC,GAAL,CAAS,aAAT,EAAwB,KAAxB,EAA+B;AAAEC,YAAM,SAAR;AAAmBC,aAAO,KAA1B;AAAiCC,cAAQ;AAAzC,KAA/B;AACA,SAAKH,GAAL,CAAS,cAAT,EAAyB,EAAzB,EAA6B;AAAEC,YAAM,QAAR;AAAkBC,aAAO,KAAzB;AAAgCC,cAAQ;AAAxC,KAA7B;AACA,SAAKH,GAAL,CAAS,eAAT,EAA0B,EAA1B,EAA8B;AAAEC,YAAM,QAAR;AAAkBC,aAAO,KAAzB;AAAgCC,cAAQ;AAAxC,KAA9B;AACA,SAAKH,GAAL,CAAS,aAAT,EAAwB,KAAxB,EAA+B;AAAEC,YAAM,QAAR;AAAkBG,cAAQ,CAAC;AAAEC,aAAK,KAAP;AAAcC,mBAAW;AAAzB,OAAD,EAAkC;AAAED,aAAK,KAAP;AAAcC,mBAAW;AAAzB,OAAlC,CAA1B;AAA8FJ,aAAO;AAArG,KAA/B;AAEA,SAAKK,OAAL,CAAa,oBAAb,EAAmC,YAAW;AAC7C;AACA,WAAKP,GAAL,CAAS,4BAAT,EAAuC,IAAvC,EAA6C;AAAEC,cAAM;AAAR,OAA7C,EAF6C,CAG7C;;AACA,WAAKD,GAAL,CAAS,6BAAT,EAAwC,IAAxC,EAA8C;AAAEC,cAAM;AAAR,OAA9C;AACA,KALD;AAOA,SAAKM,OAAL,CAAa,kBAAb,EAAiC,YAAW;AAC3C,WAAKP,GAAL,CAAS,iBAAT,EAA4B,KAA5B,EAAmC;AAAEC,cAAM,QAAR;AAAkBC,eAAO,KAAzB;AAAgCC,gBAAQ;AAAxC,OAAnC;AACA,WAAKH,GAAL,CAAS,kBAAT,EAA6B,KAA7B,EAAoC;AAAEC,cAAM,QAAR;AAAkBC,eAAO,KAAzB;AAAgCC,gBAAQ;AAAxC,OAApC;AACA,WAAKH,GAAL,CAAS,uBAAT,EAAkC,KAAlC,EAAyC;AAAEC,cAAM,QAAR;AAAkBC,eAAO;AAAzB,OAAzC;AACA,WAAKF,GAAL,CAAS,wBAAT,EAAmC,SAAnC,EAA8C;AAAEC,cAAM,OAAR;AAAiBC,eAAO;AAAxB,OAA9C;AACA,WAAKF,GAAL,CAAS,kBAAT,EAA6B,SAA7B,EAAwC;AAAEC,cAAM,OAAR;AAAiBC,eAAO;AAAxB,OAAxC;AACA,WAAKF,GAAL,CAAS,eAAT,EAA0B,IAA1B,EAAgC;AAAEC,cAAM,SAAR;AAAmBC,eAAO;AAA1B,OAAhC;AACA,KAPD;AAQA,GArBD;AAsBA,CAvBD;AAyBA,IAAIM,KAAJ;;AAEA,SAASC,cAAT;AAAwB;AAAY;AACnC,MAAI,OAAOD,KAAP,KAAiB,WAArB,EAAkC;AACjCb,WAAOe,YAAP,CAAoBF,KAApB;AACA;;AAEDA,UAAQb,OAAOgB,UAAP,CAAkB,YAAW;AACpC,UAAMC,OAAO;AACZ;AACAC,eAAkBhB,WAAWC,QAAX,CAAoBgB,GAApB,CAAwB,aAAxB,CAFN;AAGZC,gBAAkBlB,WAAWC,QAAX,CAAoBgB,GAApB,CAAwB,cAAxB,CAHN;AAIZE,iBAAkBnB,WAAWC,QAAX,CAAoBgB,GAApB,CAAwB,eAAxB,CAJN;AAKZ;AACAG,uBAAkBpB,WAAWC,QAAX,CAAoBgB,GAApB,CAAwB,uBAAxB,CANN;AAOZI,wBAAkBrB,WAAWC,QAAX,CAAoBgB,GAApB,CAAwB,wBAAxB,CAPN;AAQZK,mBAAkBtB,WAAWC,QAAX,CAAoBgB,GAApB,CAAwB,kBAAxB,CARN;AASZM,aAAkBvB,WAAWC,QAAX,CAAoBgB,GAApB,CAAwB,iBAAxB,CATN;AAUZO,cAAkBxB,WAAWC,QAAX,CAAoBgB,GAApB,CAAwB,kBAAxB,CAVN;AAWZQ,iBAAkBzB,WAAWC,QAAX,CAAoBgB,GAApB,CAAwB,eAAxB;AAXN,KAAb,CADoC,CAepC;;AACA,QAAIF,KAAKC,OAAT,EAAkB;AACjBpB,aAAO8B,IAAP,CAAY,4BAAZ;AACAC,2BAAqBC,cAArB,CAAoCC,MAApC,CAA2C;AAACC,iBAAS;AAAV,OAA3C,EAA6D;AAAEC,cAAMhB;AAAR,OAA7D;AACA,KAHD,MAGO;AACNnB,aAAO8B,IAAP,CAAY,6BAAZ;AACAC,2BAAqBC,cAArB,CAAoCI,MAApC,CAA2C;AAACF,iBAAS;AAAV,OAA3C;AACA;AACD,GAvBO,EAuBL,IAvBK,CAAR;AAwBA;;AAED9B,WAAWC,QAAX,CAAoBgB,GAApB,CAAwB,SAAxB,EAAmC,CAACT,GAAD,EAAMyB,KAAN,KAAgB;AAClDrB,iBAAeqB,KAAf;AACA,CAFD,E;;;;;;;;;;;AC9DA,IAAIC,CAAJ;;AAAMC,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACC,UAAQC,CAAR,EAAU;AAACL,QAAEK,CAAF;AAAI;;AAAhB,CAAnC,EAAqD,CAArD;AAAwD,IAAIC,KAAJ;AAAUL,OAAOC,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAACC,UAAQC,CAAR,EAAU;AAACC,YAAMD,CAAN;AAAQ;;AAApB,CAA/B,EAAqD,CAArD;AAAwD,IAAIE,GAAJ;AAAQN,OAAOC,KAAP,CAAaC,QAAQ,KAAR,CAAb,EAA4B;AAACC,UAAQC,CAAR,EAAU;AAACE,UAAIF,CAAJ;AAAM;;AAAlB,CAA5B,EAAgD,CAAhD;AAAmD,IAAIG,GAAJ;AAAQP,OAAOC,KAAP,CAAaC,QAAQ,KAAR,CAAb,EAA4B;AAACC,UAAQC,CAAR,EAAU;AAACG,UAAIH,CAAJ;AAAM;;AAAlB,CAA5B,EAAgD,CAAhD;AAQnMI,YAAYC,OAAZ,CAAoB,QAApB,EAA8B,SAA9B;;AAEA,MAAMC,aAAa,UAASC,GAAT,EAAc;AAChCA,MAAIC,SAAJ,CAAc,GAAd,EAAmB;AAAC,oBAAgB;AAAjB,GAAnB;AACA,QAAMC,UAAU,2DAAhB;AACAF,MAAIG,GAAJ,CAAQD,OAAR,EAAiB,OAAjB;AACA,CAJD;;AAMA,MAAME,YAAY,UAASC,GAAT,EAAcC,KAAd,EAAqBC,QAArB,EAA+B;AAEhD;AACA,MAAI,CAACrD,WAAWC,QAAX,CAAoBgB,GAApB,CAAwB,aAAxB,CAAL,EAA6C;AAC5CrB,WAAO0D,KAAP,CAAa,uDAAb;AACAD;AACA,GAN+C,CAQhD;;;AACA,QAAME,YAAYd,IAAIe,KAAJ,CAAUL,IAAIV,GAAd,EAAmB,IAAnB,CAAlB;AACA,QAAMgB,WAAWF,UAAUG,KAAV,CAAgBC,MAAjC;AACA,QAAMC,UAAU5D,WAAWC,QAAX,CAAoBgB,GAApB,CAAwB,cAAxB,CAAhB;AACA,QAAM4C,cAAcC,WAAW9D,WAAWC,QAAX,CAAoBgB,GAApB,CAAwB,aAAxB,CAAX,CAApB;;AACA,QAAM8C,SAASjE,OAAOkE,WAAP,GAAqBC,OAArB,CAA6B,KAA7B,EAAoC,EAApC,IAA0CC,0BAA0BC,oBAAnF;;AACAvE,SAAOwE,KAAP,CAAc,uBAAuBR,OAAS,EAA9C;AAEA,QAAMS,MAAM,IAAI3B,GAAJ,CAAQ;AACnBxB,cAAU0C,OADS;AAEnBU,aAAST,WAFU;AAGnB/B,aAAU,GAAGiC,MAAQ,SAASX,KAAO;AAHlB,GAAR,CAAZ;AAMAiB,MAAIE,QAAJ,CAAad,QAAb,EAAuB3D,OAAO0E,eAAP,CAAuB,UAASC,GAAT,EAAcC,MAAd,EAAsBC,QAAtB,EAAgCC,OAAhC,EAAyC;AACtF,QAAIH,GAAJ,EAAS;AACR7E,aAAO0D,KAAP,CAAc,kCAAkCmB,IAAII,OAAS,EAA7D;AACA,KAFD,MAEO,IAAIH,MAAJ,EAAY;AAClB9E,aAAO8B,IAAP,CAAa,mBAAmBiD,QAAU,EAA1C;AACA,YAAMG,YAAY;AAAEH;AAAF,OAAlB,CAFkB,CAIlB;;AACA,UAAIC,WAAWA,QAAQG,UAAvB,EAAmC;AAClC7C,UAAE8C,MAAF,CAASF,SAAT,EAAoB;AAAEC,sBAAYH,QAAQG;AAAtB,SAApB;AACA;;AACD/E,iBAAWiF,MAAX,CAAkBC,gBAAlB,CAAmCC,MAAnC,CAA0C/B,KAA1C,EAAiD0B,SAAjD;AACA,KATM,MASA;AACNlF,aAAO0D,KAAP,CAAc,8BAA8BG,QAAU,EAAtD;AACA,KAdqF,CAetF;;;AAEAJ;AACA,GAlBsB,CAAvB;AAoBA;AACA,CA3CD;;AA6CA,MAAM+B,aAAa,UAASjC,GAAT,EAAcL,GAAd,EAAmBuC,IAAnB,EAAyB;AAC3C;AACA;AACA,MAAI;AACH,UAAMC,WAAWnC,IAAIV,GAAJ,CAAQ8C,SAAR,CAAkB,CAAlB,EAAqBpC,IAAIV,GAAJ,CAAQ+C,OAAR,CAAgB,GAAhB,CAArB,CAAjB;AACA,UAAMC,YAAYH,SAASI,KAAT,CAAe,GAAf,CAAlB,CAFG,CAIH;AACA;;AACA,QAAID,UAAU,CAAV,MAAiB,MAArB,EAA6B;AAC5BJ;AACA;AACA,KATE,CAWH;;;AACA,UAAMM,kBAAkBF,UAAU,CAAV,CAAxB;;AACA,QAAI,CAACE,eAAL,EAAsB;AACrB9C,iBAAWC,GAAX;AACA;AACA,KAhBE,CAkBH;;;AACAI,cAAUC,GAAV,EAAewC,eAAf,EAAgC,YAAW;AAC1C9C,iBAAWC,GAAX;AACA,KAFD;AAIA,GAvBD,CAuBE,OAAO2B,GAAP,EAAY;AACb7E,WAAO0D,KAAP,CAAc,sBAAsBmB,IAAII,OAAS,EAAjD;AACAhC,eAAWC,GAAX;AACA;AACD,CA9BD,C,CAgCA;;;AACA8C,OAAOC,eAAP,CAAuBC,GAAvB,CAA2B,UAAS3C,GAAT,EAAcL,GAAd,EAAmBuC,IAAnB,EAAyB;AACnD;AACA;AACA7C,QAAM,YAAW;AAChB4C,eAAWjC,GAAX,EAAgBL,GAAhB,EAAqBuC,IAArB;AACA,GAFD,EAEGU,GAFH;AAGA,CAND;AAQA;;;;;;AAKAC,SAASC,oBAAT,CAA8B,UAASC,OAAT,EAAkB;AAE/C,MAAI,CAACA,QAAQ7B,GAAb,EAAkB;AACjB,WAAO8B,SAAP;AACA;;AAED,QAAMC,cAAcpG,WAAWiF,MAAX,CAAkBC,gBAAlB,CAAmCmB,WAAnC,CAA+CH,QAAQ7B,GAAR,CAAYsB,eAA3D,CAApB;;AACA,MAAIS,gBAAgBD,SAApB,EAA+B;AAC9B,UAAM,IAAIrG,OAAOwG,KAAX,CAAiBN,SAASO,mBAAT,CAA6BC,YAA9C,EACL,iCADK,CAAN;AAEA;;AAED,QAAMC,SAASL,YAAYM,QAA3B;AACA,QAAMC,uBAAuB3G,WAAWC,QAAX,CAAoBgB,GAApB,CAAwB,6BAAxB,EAAuD2F,IAAvD,EAA7B;AACA,QAAM/C,cAAcC,WAAW9D,WAAWC,QAAX,CAAoBgB,GAApB,CAAwB,aAAxB,CAAX,CAApB;AACA,QAAM4F,eAAe7G,WAAWC,QAAX,CAAoBgB,GAApB,CAAwB,4BAAxB,CAArB,CAf+C,CAiB/C;;AACA,QAAM6F,YAAY;AACjBnC,cAAU8B,OAAO9B;AADA,GAAlB,CAlB+C,CAsB/C;;AACA,QAAMoC,YAAY;AACjBC,WAAOb,SADU;AAEjBc,UAAMd,SAFW;AAGjBxB,cAAUwB,SAHO;AAIjBe,WAAOf;AAJU,GAAlB,CAvB+C,CA8B/C;;AACA,MAAItC,eAAe,GAAnB,EAAwB;AACvB;AACA3B,MAAEiF,IAAF,CAAOV,OAAO1B,UAAd,EAA0B,UAAS9C,KAAT,EAAgBmF,QAAhB,EAA0B;AACnD,UAAInF,KAAJ,EAAW;AACV6E,kBAAUM,QAAV,IAAsBnF,MAAM,CAAN,CAAtB;AACA;AACD,KAJD;AAKA,GAtC8C,CAwC/C;;;AACA,MAAI0E,oBAAJ,EAA0B;AAEzB;AACA;AACA,UAAMU,WAAWC,KAAK9D,KAAL,CAAWmD,oBAAX,CAAjB;;AAEAzE,MAAEiF,IAAF,CAAOE,QAAP,EAAiB,UAASE,MAAT,EAAiBC,QAAjB,EAA2B;AAC3C;AACA,UAAItF,EAAEuF,QAAF,CAAWF,MAAX,CAAJ,EAAwB;AACvBrF,UAAEiF,IAAF,CAAOL,SAAP,EAAkB,UAAS7E,KAAT,EAAgBmF,QAAhB,EAA0B;AAC3CG,mBAASA,OAAOtD,OAAP,CAAgB,IAAImD,QAAU,GAA9B,EAAkCN,UAAUM,QAAV,CAAlC,CAAT;AACA,SAFD;;AAIAL,kBAAUS,QAAV,IAAsBD,MAAtB;AACA3H,eAAOwE,KAAP,CAAc,+BAA+BoD,QAAU,MAAMD,MAAQ,EAArE;AACA;AACD,KAVD;AAWA,GA1D8C,CA4D/C;;;AACA3H,SAAOwE,KAAP,CAAc,0BAA0BqC,OAAO9B,QAAU,EAAzD;AACA,MAAI+C,OAAO5H,OAAO6H,KAAP,CAAaC,OAAb,CAAqB;AAAE,gCAA4BnB,OAAO9B;AAArC,GAArB,CAAX;;AAEA,MAAI+C,IAAJ,EAAU;AACT9H,WAAOwE,KAAP,CAAc,4BAA4BqC,OAAO9B,QAAU,cAAc+C,KAAKG,GAAK,EAAnF;;AACA,QAAIhB,YAAJ,EAAkB;AACjBjH,aAAOwE,KAAP,CAAa,yBAAb,EADiB,CAEjB;;AACA,UAAI2C,UAAUE,IAAd,EAAoB;AACnBjH,mBAAW8H,YAAX,CAAwBJ,KAAKG,GAA7B,EAAkCd,UAAUE,IAA5C;AACA,OALgB,CAOjB;;;AACA,UAAIF,UAAUC,KAAd,EAAqB;AACpBlH,eAAO6H,KAAP,CAAaI,MAAb,CAAoBL,IAApB,EAA0B;AAAE3F,gBAAM;AAAEiG,oBAAQ,CAAC;AAAEC,uBAASlB,UAAUC,KAArB;AAA4BkB,wBAAU;AAAtC,aAAD;AAAV;AAAR,SAA1B;AACA;AACD;AACD,GAdD,MAcO;AAEN;AACA,UAAMC,UAAU;AACfxD,gBAAU8B,OAAO9B,QADF;AAEfyD,cAAQ,IAFO;AAGfC,mBAAa,CAAC,MAAD,CAHE;AAIfL,cAAQ,EAJO;AAKfM,gBAAU;AACTjE,aAAK;AACJkE,uBAAa9B,OAAO9B,QADhB;AAEJL,mBAAST,WAFL;AAGJ2E,iBAAOzB;AAHH;AADI;AALK,KAAhB,CAHM,CAiBN;;AACA,QAAIA,UAAUE,IAAd,EAAoB;AACnB/E,QAAE8C,MAAF,CAASmD,OAAT,EAAkB;AACjBlB,cAAMF,UAAUE;AADC,OAAlB;AAGA,KAtBK,CAwBN;;;AACA,QAAIF,UAAUC,KAAd,EAAqB;AACpB9E,QAAE8C,MAAF,CAASmD,OAAT,EAAkB;AACjBH,gBAAQ,CAAC;AAAEC,mBAASlB,UAAUC,KAArB;AAA4BkB,oBAAU;AAAtC,SAAD;AADS,OAAlB;AAGA,KA7BK,CA+BN;;;AACAtI,WAAOwE,KAAP,CAAc,SAASqC,OAAO9B,QAAU,mCAAxC;AACA,UAAM8D,SAASzC,SAAS0C,aAAT,CAAuB,EAAvB,EAA2BP,OAA3B,CAAf,CAjCM,CAmCN;;AACAT,WAAO5H,OAAO6H,KAAP,CAAaC,OAAb,CAAqBa,MAArB,CAAP;AACA7I,WAAOwE,KAAP,CAAc,yBAAyBqC,OAAO9B,QAAU,cAAc+C,KAAKG,GAAK,EAAhF,EArCM,CAsCN;;AAEAjI,WAAOwE,KAAP,CAAc,uCAAuC2C,UAAUG,KAAO,EAAtE;;AACA,QAAIH,UAAUG,KAAd,EAAqB;AACpBhF,QAAEiF,IAAF,CAAOJ,UAAUG,KAAV,CAAgBxB,KAAhB,CAAsB,GAAtB,CAAP,EAAmC,UAASiD,SAAT,EAAoB;AACtD,YAAIA,SAAJ,EAAe;AACd,cAAIC,OAAO5I,WAAWiF,MAAX,CAAkB4D,KAAlB,CAAwBC,oBAAxB,CAA6CH,SAA7C,EAAwD,GAAxD,CAAX;;AACA,cAAI,CAACC,IAAL,EAAW;AACVA,mBAAO5I,WAAWiF,MAAX,CAAkB4D,KAAlB,CAAwBE,uBAAxB,CAAgDC,OAAOC,EAAP,EAAhD,EAA6D,GAA7D,EAAkEN,SAAlE,CAAP;AACA;;AAED,cAAI,CAAC3I,WAAWiF,MAAX,CAAkBiE,aAAlB,CAAgCC,wBAAhC,CAAyDP,KAAKf,GAA9D,EAAmEY,MAAnE,CAAL,EAAiF;AAChFzI,uBAAWiF,MAAX,CAAkBiE,aAAlB,CAAgCE,qBAAhC,CAAsDR,IAAtD,EAA4DlB,IAA5D,EAAkE;AACjE2B,kBAAI,IAAIC,IAAJ,EAD6D;AAEjEC,oBAAM,IAF2D;AAGjEC,qBAAO,IAH0D;AAIjEC,sBAAQ,CAJyD;AAKjEC,4BAAc,CALmD;AAMjEC,6BAAe;AANkD,aAAlE;AAQA;AACD;AACD,OAlBD;AAmBA;AAED;;AAED,SAAO;AAAElB,YAAQf,KAAKG;AAAf,GAAP;AACA,CAhJD,E;;;;;;;;;;;AC3GA7H,WAAWiF,MAAX,CAAkBC,gBAAlB,GAAqC,IAAI,cAAclF,WAAWiF,MAAX,CAAkB2E,KAAhC,CAAsC;AAC9EC,gBAAc;AACb,UAAM,mBAAN;AAEA,SAAKC,cAAL,CAAoB;AAAE,kBAAY;AAAd,KAApB,EAAuC;AAAEC,cAAQ,CAAV;AAAaC,0BAAoB;AAAjC,KAAvC;AACA;;AAED7E,SAAO0C,GAAP,EAAYnB,QAAZ,EAAsB;AACrB,UAAMuD,uBAAuB,KAA7B,CADqB,CACgB;;AACrC,UAAM7G,QAAQ;AACbyE,SADa;AAEbnB,cAFa;AAGbwD,gBAAU,IAAIZ,IAAJ,CAASA,KAAKa,GAAL,KAAaF,oBAAtB;AAHG,KAAd;AAMA,SAAKG,MAAL,CAAYhH,KAAZ;AACA,WAAOA,KAAP;AACA;;AAEDiD,cAAYwB,GAAZ,EAAiB;AAChB,UAAMnE,QAAQ;AACbmE,SADa;AAEbqC,gBAAU;AAAEG,aAAK,IAAIf,IAAJ;AAAP;AAFG,KAAd;AAKA,WAAO,KAAK1B,OAAL,CAAalE,KAAb,CAAP;AACA;;AA1B6E,CAA1C,EAArC,C","file":"/packages/rocketchat_cas.js","sourcesContent":["/* globals logger:true */\n\nlogger = new Logger('CAS', {});\n\nMeteor.startup(function() {\n\tRocketChat.settings.addGroup('CAS', function() {\n\t\tthis.add('CAS_enabled', false, { type: 'boolean', group: 'CAS', public: true });\n\t\tthis.add('CAS_base_url', '', { type: 'string', group: 'CAS', public: true });\n\t\tthis.add('CAS_login_url', '', { type: 'string', group: 'CAS', public: true });\n\t\tthis.add('CAS_version', '1.0', { type: 'select', values: [{ key: '1.0', i18nLabel: '1.0'}, { key: '2.0', i18nLabel: '2.0'}], group: 'CAS' });\n\n\t\tthis.section('Attribute_handling', function() {\n\t\t\t// Enable/disable sync\n\t\t\tthis.add('CAS_Sync_User_Data_Enabled', true, { type: 'boolean' });\n\t\t\t// Attribute mapping table\n\t\t\tthis.add('CAS_Sync_User_Data_FieldMap', '{}', { type: 'string' });\n\t\t});\n\n\t\tthis.section('CAS_Login_Layout', function() {\n\t\t\tthis.add('CAS_popup_width', '810', { type: 'string', group: 'CAS', public: true });\n\t\t\tthis.add('CAS_popup_height', '610', { type: 'string', group: 'CAS', public: true });\n\t\t\tthis.add('CAS_button_label_text', 'CAS', { type: 'string', group: 'CAS'});\n\t\t\tthis.add('CAS_button_label_color', '#FFFFFF', { type: 'color', group: 'CAS'});\n\t\t\tthis.add('CAS_button_color', '#13679A', { type: 'color', group: 'CAS'});\n\t\t\tthis.add('CAS_autoclose', true, { type: 'boolean', group: 'CAS'});\n\t\t});\n\t});\n});\n\nlet timer;\n\nfunction updateServices(/*record*/) {\n\tif (typeof timer !== 'undefined') {\n\t\tMeteor.clearTimeout(timer);\n\t}\n\n\ttimer = Meteor.setTimeout(function() {\n\t\tconst data = {\n\t\t\t// These will pe passed to 'node-cas' as options\n\t\t\tenabled:          RocketChat.settings.get('CAS_enabled'),\n\t\t\tbase_url:         RocketChat.settings.get('CAS_base_url'),\n\t\t\tlogin_url:        RocketChat.settings.get('CAS_login_url'),\n\t\t\t// Rocketchat Visuals\n\t\t\tbuttonLabelText:  RocketChat.settings.get('CAS_button_label_text'),\n\t\t\tbuttonLabelColor: RocketChat.settings.get('CAS_button_label_color'),\n\t\t\tbuttonColor:      RocketChat.settings.get('CAS_button_color'),\n\t\t\twidth:            RocketChat.settings.get('CAS_popup_width'),\n\t\t\theight:           RocketChat.settings.get('CAS_popup_height'),\n\t\t\tautoclose:        RocketChat.settings.get('CAS_autoclose')\n\t\t};\n\n\t\t// Either register or deregister the CAS login service based upon its configuration\n\t\tif (data.enabled) {\n\t\t\tlogger.info('Enabling CAS login service');\n\t\t\tServiceConfiguration.configurations.upsert({service: 'cas'}, { $set: data });\n\t\t} else {\n\t\t\tlogger.info('Disabling CAS login service');\n\t\t\tServiceConfiguration.configurations.remove({service: 'cas'});\n\t\t}\n\t}, 2000);\n}\n\nRocketChat.settings.get(/^CAS_.+/, (key, value) => {\n\tupdateServices(value);\n});\n","/* globals RoutePolicy, logger */\n/* jshint newcap: false */\nimport _ from 'underscore';\n\nimport fiber from 'fibers';\nimport url from 'url';\nimport CAS from 'cas';\n\nRoutePolicy.declare('/_cas/', 'network');\n\nconst closePopup = function(res) {\n\tres.writeHead(200, {'Content-Type': 'text/html'});\n\tconst content = '<html><head><script>window.close()</script></head></html>';\n\tres.end(content, 'utf-8');\n};\n\nconst casTicket = function(req, token, callback) {\n\n\t// get configuration\n\tif (!RocketChat.settings.get('CAS_enabled')) {\n\t\tlogger.error('Got ticket validation request, but CAS is not enabled');\n\t\tcallback();\n\t}\n\n\t// get ticket and validate.\n\tconst parsedUrl = url.parse(req.url, true);\n\tconst ticketId = parsedUrl.query.ticket;\n\tconst baseUrl = RocketChat.settings.get('CAS_base_url');\n\tconst cas_version = parseFloat(RocketChat.settings.get('CAS_version'));\n\tconst appUrl = Meteor.absoluteUrl().replace(/\\/$/, '') + __meteor_runtime_config__.ROOT_URL_PATH_PREFIX;\n\tlogger.debug(`Using CAS_base_url: ${ baseUrl }`);\n\n\tconst cas = new CAS({\n\t\tbase_url: baseUrl,\n\t\tversion: cas_version,\n\t\tservice: `${ appUrl }/_cas/${ token }`\n\t});\n\n\tcas.validate(ticketId, Meteor.bindEnvironment(function(err, status, username, details) {\n\t\tif (err) {\n\t\t\tlogger.error(`error when trying to validate: ${ err.message }`);\n\t\t} else if (status) {\n\t\t\tlogger.info(`Validated user: ${ username }`);\n\t\t\tconst user_info = { username };\n\n\t\t\t// CAS 2.0 attributes handling\n\t\t\tif (details && details.attributes) {\n\t\t\t\t_.extend(user_info, { attributes: details.attributes });\n\t\t\t}\n\t\t\tRocketChat.models.CredentialTokens.create(token, user_info);\n\t\t} else {\n\t\t\tlogger.error(`Unable to validate ticket: ${ ticketId }`);\n\t\t}\n\t\t//logger.debug(\"Receveied response: \" + JSON.stringify(details, null , 4));\n\n\t\tcallback();\n\t}));\n\n\treturn;\n};\n\nconst middleware = function(req, res, next) {\n\t// Make sure to catch any exceptions because otherwise we'd crash\n\t// the runner\n\ttry {\n\t\tconst barePath = req.url.substring(0, req.url.indexOf('?'));\n\t\tconst splitPath = barePath.split('/');\n\n\t\t// Any non-cas request will continue down the default\n\t\t// middlewares.\n\t\tif (splitPath[1] !== '_cas') {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\n\t\t// get auth token\n\t\tconst credentialToken = splitPath[2];\n\t\tif (!credentialToken) {\n\t\t\tclosePopup(res);\n\t\t\treturn;\n\t\t}\n\n\t\t// validate ticket\n\t\tcasTicket(req, credentialToken, function() {\n\t\t\tclosePopup(res);\n\t\t});\n\n\t} catch (err) {\n\t\tlogger.error(`Unexpected error : ${ err.message }`);\n\t\tclosePopup(res);\n\t}\n};\n\n// Listen to incoming OAuth http requests\nWebApp.connectHandlers.use(function(req, res, next) {\n\t// Need to create a fiber since we're using synchronous http calls and nothing\n\t// else is wrapping this in a fiber automatically\n\tfiber(function() {\n\t\tmiddleware(req, res, next);\n\t}).run();\n});\n\n/*\n * Register a server-side login handle.\n * It is call after Accounts.callLoginMethod() is call from client.\n *\n */\nAccounts.registerLoginHandler(function(options) {\n\n\tif (!options.cas) {\n\t\treturn undefined;\n\t}\n\n\tconst credentials = RocketChat.models.CredentialTokens.findOneById(options.cas.credentialToken);\n\tif (credentials === undefined) {\n\t\tthrow new Meteor.Error(Accounts.LoginCancelledError.numericError,\n\t\t\t'no matching login attempt found');\n\t}\n\n\tconst result = credentials.userInfo;\n\tconst syncUserDataFieldMap = RocketChat.settings.get('CAS_Sync_User_Data_FieldMap').trim();\n\tconst cas_version = parseFloat(RocketChat.settings.get('CAS_version'));\n\tconst sync_enabled = RocketChat.settings.get('CAS_Sync_User_Data_Enabled');\n\n\t// We have these\n\tconst ext_attrs = {\n\t\tusername: result.username\n\t};\n\n\t// We need these\n\tconst int_attrs = {\n\t\temail: undefined,\n\t\tname: undefined,\n\t\tusername: undefined,\n\t\trooms: undefined\n\t};\n\n\t// Import response attributes\n\tif (cas_version >= 2.0) {\n\t\t// Clean & import external attributes\n\t\t_.each(result.attributes, function(value, ext_name) {\n\t\t\tif (value) {\n\t\t\t\text_attrs[ext_name] = value[0];\n\t\t\t}\n\t\t});\n\t}\n\n\t// Source internal attributes\n\tif (syncUserDataFieldMap) {\n\n\t\t// Our mapping table: key(int_attr) -> value(ext_attr)\n\t\t// Spoken: Source this internal attribute from these external attributes\n\t\tconst attr_map = JSON.parse(syncUserDataFieldMap);\n\n\t\t_.each(attr_map, function(source, int_name) {\n\t\t\t// Source is our String to interpolate\n\t\t\tif (_.isString(source)) {\n\t\t\t\t_.each(ext_attrs, function(value, ext_name) {\n\t\t\t\t\tsource = source.replace(`%${ ext_name }%`, ext_attrs[ext_name]);\n\t\t\t\t});\n\n\t\t\t\tint_attrs[int_name] = source;\n\t\t\t\tlogger.debug(`Sourced internal attribute: ${ int_name } = ${ source }`);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Search existing user by its external service id\n\tlogger.debug(`Looking up user by id: ${ result.username }`);\n\tlet user = Meteor.users.findOne({ 'services.cas.external_id': result.username });\n\n\tif (user) {\n\t\tlogger.debug(`Using existing user for '${ result.username }' with id: ${ user._id }`);\n\t\tif (sync_enabled) {\n\t\t\tlogger.debug('Syncing user attributes');\n\t\t\t// Update name\n\t\t\tif (int_attrs.name) {\n\t\t\t\tRocketChat._setRealName(user._id, int_attrs.name);\n\t\t\t}\n\n\t\t\t// Update email\n\t\t\tif (int_attrs.email) {\n\t\t\t\tMeteor.users.update(user, { $set: { emails: [{ address: int_attrs.email, verified: true }] }});\n\t\t\t}\n\t\t}\n\t} else {\n\n\t\t// Define new user\n\t\tconst newUser = {\n\t\t\tusername: result.username,\n\t\t\tactive: true,\n\t\t\tglobalRoles: ['user'],\n\t\t\temails: [],\n\t\t\tservices: {\n\t\t\t\tcas: {\n\t\t\t\t\texternal_id: result.username,\n\t\t\t\t\tversion: cas_version,\n\t\t\t\t\tattrs: int_attrs\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Add User.name\n\t\tif (int_attrs.name) {\n\t\t\t_.extend(newUser, {\n\t\t\t\tname: int_attrs.name\n\t\t\t});\n\t\t}\n\n\t\t// Add email\n\t\tif (int_attrs.email) {\n\t\t\t_.extend(newUser, {\n\t\t\t\temails: [{ address: int_attrs.email, verified: true }]\n\t\t\t});\n\t\t}\n\n\t\t// Create the user\n\t\tlogger.debug(`User \"${ result.username }\" does not exist yet, creating it`);\n\t\tconst userId = Accounts.insertUserDoc({}, newUser);\n\n\t\t// Fetch and use it\n\t\tuser = Meteor.users.findOne(userId);\n\t\tlogger.debug(`Created new user for '${ result.username }' with id: ${ user._id }`);\n\t\t//logger.debug(JSON.stringify(user, undefined, 4));\n\n\t\tlogger.debug(`Joining user to attribute channels: ${ int_attrs.rooms }`);\n\t\tif (int_attrs.rooms) {\n\t\t\t_.each(int_attrs.rooms.split(','), function(room_name) {\n\t\t\t\tif (room_name) {\n\t\t\t\t\tlet room = RocketChat.models.Rooms.findOneByNameAndType(room_name, 'c');\n\t\t\t\t\tif (!room) {\n\t\t\t\t\t\troom = RocketChat.models.Rooms.createWithIdTypeAndName(Random.id(), 'c', room_name);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(room._id, userId)) {\n\t\t\t\t\t\tRocketChat.models.Subscriptions.createWithRoomAndUser(room, user, {\n\t\t\t\t\t\t\tts: new Date(),\n\t\t\t\t\t\t\topen: true,\n\t\t\t\t\t\t\talert: true,\n\t\t\t\t\t\t\tunread: 1,\n\t\t\t\t\t\t\tuserMentions: 1,\n\t\t\t\t\t\t\tgroupMentions: 0\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t}\n\n\treturn { userId: user._id };\n});\n","RocketChat.models.CredentialTokens = new class extends RocketChat.models._Base {\n\tconstructor() {\n\t\tsuper('credential_tokens');\n\n\t\tthis.tryEnsureIndex({ 'expireAt': 1 }, { sparse: 1, expireAfterSeconds: 0 });\n\t}\n\n\tcreate(_id, userInfo) {\n\t\tconst validForMilliseconds = 60000;\t\t// Valid for 60 seconds\n\t\tconst token = {\n\t\t\t_id,\n\t\t\tuserInfo,\n\t\t\texpireAt: new Date(Date.now() + validForMilliseconds)\n\t\t};\n\n\t\tthis.insert(token);\n\t\treturn token;\n\t}\n\n\tfindOneById(_id) {\n\t\tconst query = {\n\t\t\t_id,\n\t\t\texpireAt: { $gt: new Date() }\n\t\t};\n\n\t\treturn this.findOne(query);\n\t}\n};\n"]}