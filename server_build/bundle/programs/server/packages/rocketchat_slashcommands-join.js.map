{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:slashcommands-join/server/server.js"],"names":["RocketChat","slashCommands","add","Join","command","params","item","Match","test","String","channel","trim","replace","user","Meteor","users","findOne","userId","room","models","Rooms","findOneByNameAndType","Notifications","notifyUser","_id","Random","id","rid","ts","Date","msg","TAPi18n","__","postProcess","sprintf","language","subscription","Subscriptions","findOneByRoomIdAndUserId","fields","Error","method","call","description"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AAMAA,WAAWC,aAAX,CAAyBC,GAAzB,CAA6B,MAA7B,EAAqC,SAASC,IAAT,CAAcC,OAAd,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqC;AAEzE,MAAIF,YAAY,MAAZ,IAAsB,CAACG,MAAMC,IAAN,CAAWH,MAAX,EAAmBI,MAAnB,CAA3B,EAAuD;AACtD;AACA;;AACD,MAAIC,UAAUL,OAAOM,IAAP,EAAd;;AACA,MAAID,YAAY,EAAhB,EAAoB;AACnB;AACA;;AACDA,YAAUA,QAAQE,OAAR,CAAgB,GAAhB,EAAqB,EAArB,CAAV;AACA,QAAMC,OAAOC,OAAOC,KAAP,CAAaC,OAAb,CAAqBF,OAAOG,MAAP,EAArB,CAAb;AACA,QAAMC,OAAOlB,WAAWmB,MAAX,CAAkBC,KAAlB,CAAwBC,oBAAxB,CAA6CX,OAA7C,EAAsD,GAAtD,CAAb;;AACA,MAAI,CAACQ,IAAL,EAAW;AACVlB,eAAWsB,aAAX,CAAyBC,UAAzB,CAAoCT,OAAOG,MAAP,EAApC,EAAqD,SAArD,EAAgE;AAC/DO,WAAKC,OAAOC,EAAP,EAD0D;AAE/DC,WAAKrB,KAAKqB,GAFqD;AAG/DC,UAAI,IAAIC,IAAJ,EAH2D;AAI/DC,WAAKC,QAAQC,EAAR,CAAW,sBAAX,EAAmC;AACvCC,qBAAa,SAD0B;AAEvCC,iBAAS,CAACxB,OAAD;AAF8B,OAAnC,EAGFG,KAAKsB,QAHH;AAJ0D,KAAhE;AASA;;AAED,QAAMC,eAAepC,WAAWmB,MAAX,CAAkBkB,aAAlB,CAAgCC,wBAAhC,CAAyDpB,KAAKM,GAA9D,EAAmEX,KAAKW,GAAxE,EAA6E;AAAEe,YAAQ;AAAEf,WAAK;AAAP;AAAV,GAA7E,CAArB;;AACA,MAAIY,YAAJ,EAAkB;AACjB,UAAM,IAAItB,OAAO0B,KAAX,CAAiB,4BAAjB,EAA+C,gCAA/C,EAAiF;AACtFC,cAAQ;AAD8E,KAAjF,CAAN;AAGA;;AACD3B,SAAO4B,IAAP,CAAY,UAAZ,EAAwBxB,KAAKM,GAA7B;AACA,CA/BD,EA+BG;AACFmB,eAAa,wBADX;AAEFtC,UAAQ;AAFN,CA/BH,E","file":"/packages/rocketchat_slashcommands-join.js","sourcesContent":["\n/*\n* Join is a named function that will replace /join commands\n* @param {Object} message - The message object\n*/\n\n\nRocketChat.slashCommands.add('join', function Join(command, params, item) {\n\n\tif (command !== 'join' || !Match.test(params, String)) {\n\t\treturn;\n\t}\n\tlet channel = params.trim();\n\tif (channel === '') {\n\t\treturn;\n\t}\n\tchannel = channel.replace('#', '');\n\tconst user = Meteor.users.findOne(Meteor.userId());\n\tconst room = RocketChat.models.Rooms.findOneByNameAndType(channel, 'c');\n\tif (!room) {\n\t\tRocketChat.Notifications.notifyUser(Meteor.userId(), 'message', {\n\t\t\t_id: Random.id(),\n\t\t\trid: item.rid,\n\t\t\tts: new Date,\n\t\t\tmsg: TAPi18n.__('Channel_doesnt_exist', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [channel]\n\t\t\t}, user.language)\n\t\t});\n\t}\n\n\tconst subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(room._id, user._id, { fields: { _id: 1 } });\n\tif (subscription) {\n\t\tthrow new Meteor.Error('error-user-already-in-room', 'You are already in the channel', {\n\t\t\tmethod: 'slashCommands'\n\t\t});\n\t}\n\tMeteor.call('joinRoom', room._id);\n}, {\n\tdescription: 'Join_the_given_channel',\n\tparams: '#channel'\n});\n"]}