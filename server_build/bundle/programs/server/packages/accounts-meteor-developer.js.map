{"version":3,"sources":["meteor://ðŸ’»app/packages/accounts-meteor-developer/notice.js","meteor://ðŸ’»app/packages/accounts-meteor-developer/meteor-developer.js"],"names":["Package","hasOwnProperty","console","warn","Accounts","oauth","registerService","Meteor","isClient","loginWithMeteorDeveloperAccount","options","callback","credentialRequestCompleteCallback","credentialRequestCompleteHandler","MeteorDeveloperAccounts","requestCredential","registerClientLoginFunction","applyLoginFunction","arguments","addAutopublishFields","forLoggedInUser","forOtherUsers"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,QAAQ,aAAR,KACG,CAACA,QAAQ,uBAAR,CADJ,IAEG,CAACA,QAAQC,cAAR,CAAuB,4BAAvB,CAFR,EAE8D;AAC5DC,UAAQC,IAAR,CACE,oEACA,oEADA,GAEA,4CAFA,GAGA,IAHA,GAIA,2CAJA,GAKA,IANF;AAQD,C;;;;;;;;;;;ACXDC,SAASC,KAAT,CAAeC,eAAf,CAA+B,kBAA/B;;AAEA,IAAIC,OAAOC,QAAX,EAAqB;AACnB,QAAMC,kCAAkC,UAAUC,OAAV,EAAmBC,QAAnB,EAA6B;AACnE;AACA,QAAI,CAAEA,QAAF,IAAc,OAAOD,OAAP,KAAmB,UAArC,EAAiD;AAC/CC,iBAAWD,OAAX;AACAA,gBAAU,IAAV;AACD;;AAED,QAAIE,oCACER,SAASC,KAAT,CAAeQ,gCAAf,CAAgDF,QAAhD,CADN;AAEAG,4BAAwBC,iBAAxB,CAA0CL,OAA1C,EAAmDE,iCAAnD;AACD,GAVD;;AAWAR,WAASY,2BAAT,CAAqC,kBAArC,EAAyDP,+BAAzD;;AACAF,SAAOE,+BAAP,GAAyC,YAAY;AACnD,WAAOL,SAASa,kBAAT,CAA4B,kBAA5B,EAAgDC,SAAhD,CAAP;AACD,GAFD;AAGD,CAhBD,MAgBO;AACLd,WAASe,oBAAT,CAA8B;AAC5B;AACA;AACAC,qBAAiB,CAAC,2BAAD,CAHW;AAI5BC,mBAAe,CACb,oCADa,EAEb,mCAFa,EAGb,8BAHa;AAJa,GAA9B;AAUD,C","file":"/packages/accounts-meteor-developer.js","sourcesContent":["if (Package['accounts-ui']\n    && !Package['service-configuration']\n    && !Package.hasOwnProperty('meteor-developer-config-ui')) {\n  console.warn(\n    \"Note: You're using accounts-ui and accounts-meteor-developer,\\n\" +\n    \"but didn't install the configuration UI for the Meteor Developer\\n\" +\n    \"Accounts OAuth. You can install it with:\\n\" +\n    \"\\n\" +\n    \"    meteor add meteor-developer-config-ui\" +\n    \"\\n\"\n  );\n}\n","Accounts.oauth.registerService(\"meteor-developer\");\n\nif (Meteor.isClient) {\n  const loginWithMeteorDeveloperAccount = function (options, callback) {\n    // support a callback without options\n    if (! callback && typeof options === \"function\") {\n      callback = options;\n      options = null;\n    }\n\n    var credentialRequestCompleteCallback =\n          Accounts.oauth.credentialRequestCompleteHandler(callback);\n    MeteorDeveloperAccounts.requestCredential(options, credentialRequestCompleteCallback);\n  };\n  Accounts.registerClientLoginFunction('meteor-developer', loginWithMeteorDeveloperAccount);\n  Meteor.loginWithMeteorDeveloperAccount = function () {\n    return Accounts.applyLoginFunction('meteor-developer', arguments);\n  };\n} else {\n  Accounts.addAutopublishFields({\n    // publish all fields including access token, which can legitimately be used\n    // from the client (if transmitted over ssl or on localhost).\n    forLoggedInUser: ['services.meteor-developer'],\n    forOtherUsers: [\n      'services.meteor-developer.username',\n      'services.meteor-developer.profile',\n      'services.meteor-developer.id'\n    ]\n  });\n}\n"]}