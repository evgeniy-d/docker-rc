{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:katex/settings.js","meteor://ðŸ’»app/packages/rocketchat:katex/katex.js"],"names":["Meteor","startup","enableQuery","_id","value","RocketChat","settings","add","type","group","section","i18n","i18nDescription","_","module","watch","require","default","v","s","katex","Boundary","constructor","length","end","start","extract","str","substr","Katex","delimiters_map","opener","closer","displayMode","enabled","parenthesis_syntax_enabled","dollar_syntax_enabled","find_opening_delimiter","matches","map","results","forEach","op","push","options","pos","indexOf","positions","Math","min","apply","match_index","m","match","get_latex_boundaries","opening_delimiter_match","inner","outer","closer_index","find_latex","trim","extract_latex","before","after","latex","unescapeHTML","render_latex","rendered","renderToString","error","e","display_mode","escapeHTML","message","render","render_func","result","parts","render_message","katex_enabled","msg","isString","html","tokens","token","Random","id","text","get","cb","bind","callbacks","priority","HIGH","isClient","Blaze","registerHelper"],"mappings":"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","file":"/packages/rocketchat_katex.js","sourcesContent":["Meteor.startup(function() {\n\tconst enableQuery = {\n\t\t_id: 'Katex_Enabled',\n\t\tvalue: true\n\t};\n\tRocketChat.settings.add('Katex_Enabled', true, {\n\t\ttype: 'boolean',\n\t\tgroup: 'Message',\n\t\tsection: 'Katex',\n\t\t'public': true,\n\t\ti18n: 'Katex_Enabled_Description'\n\t});\n\tRocketChat.settings.add('Katex_Parenthesis_Syntax', true, {\n\t\ttype: 'boolean',\n\t\tgroup: 'Message',\n\t\tsection: 'Katex',\n\t\t'public': true,\n\t\tenableQuery,\n\t\ti18nDescription: 'Katex_Parenthesis_Syntax_Description'\n\t});\n\treturn RocketChat.settings.add('Katex_Dollar_Syntax', false, {\n\t\ttype: 'boolean',\n\t\tgroup: 'Message',\n\t\tsection: 'Katex',\n\t\t'public': true,\n\t\tenableQuery,\n\t\ti18nDescription: 'Katex_Dollar_Syntax_Description'\n\t});\n});\n\n// ---\n// generated by coffee-script 1.9.2\n","/*\n * KaTeX is a fast, easy-to-use JavaScript library for TeX math rendering on the web.\n * https://github.com/Khan/KaTeX\n */\nimport _ from 'underscore';\nimport s from 'underscore.string';\n\nimport katex from 'katex';\n\nclass Boundary {\n\tconstructor() {}\n\n\tlength() {\n\t\treturn this.end - this.start;\n\t}\n\n\textract(str) {\n\t\treturn str.substr(this.start, this.length());\n\t}\n\n}\n\nclass Katex {\n\tconstructor() {\n\t\tthis.delimiters_map = [\n\t\t\t{\n\t\t\t\topener: '\\\\[',\n\t\t\t\tcloser: '\\\\]',\n\t\t\t\tdisplayMode: true,\n\t\t\t\tenabled: () => {\n\t\t\t\t\treturn this.parenthesis_syntax_enabled();\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\topener: '\\\\(',\n\t\t\t\tcloser: '\\\\)',\n\t\t\t\tdisplayMode: false,\n\t\t\t\tenabled: () => {\n\t\t\t\t\treturn this.parenthesis_syntax_enabled();\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\topener: '$$',\n\t\t\t\tcloser: '$$',\n\t\t\t\tdisplayMode: true,\n\t\t\t\tenabled: () => {\n\t\t\t\t\treturn this.dollar_syntax_enabled();\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\topener: '$',\n\t\t\t\tcloser: '$',\n\t\t\t\tdisplayMode: false,\n\t\t\t\tenabled: () => {\n\t\t\t\t\treturn this.dollar_syntax_enabled();\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t}\n\t// Searches for the first opening delimiter in the string from a given position\n\n\tfind_opening_delimiter(str, start) { // Search the string for each opening delimiter\n\t\tconst matches = (() => {\n\t\t\tconst map = this.delimiters_map;\n\t\t\tconst results = [];\n\n\t\t\tmap.forEach((op) => {\n\t\t\t\tif (op.enabled()) {\n\t\t\t\t\tresults.push({\n\t\t\t\t\t\toptions: op,\n\t\t\t\t\t\tpos: str.indexOf(op.opener, start)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn results;\n\t\t})();\n\n\t\tconst positions = (() => {\n\t\t\tconst results = [];\n\t\t\tmatches.forEach((pos) => {\n\t\t\t\tif (pos.pos >= 0) {\n\t\t\t\t\tresults.push(pos.pos);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn results;\n\t\t})();\n\n\t\t// No opening delimiters were found\n\t\tif (positions.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t//Take the first delimiter found\n\t\tconst pos = Math.min.apply(Math, positions);\n\n\t\tconst match_index = (()=> {\n\t\t\tconst results = [];\n\t\t\tmatches.forEach((m) => {\n\t\t\t\tresults.push(m.pos);\n\t\t\t});\n\t\t\treturn results;\n\t\t})().indexOf(pos);\n\n\t\tconst match = matches[match_index];\n\t\treturn match;\n\t}\n\n\t// Returns the outer and inner boundaries of the latex block starting\n\t// at the given opening delimiter\n\tget_latex_boundaries(str, opening_delimiter_match) {\n\t\tconst inner = new Boundary;\n\t\tconst outer = new Boundary;\n\n\t\t// The closing delimiter matching to the opening one\n\t\tconst closer = opening_delimiter_match.options.closer;\n\t\touter.start = opening_delimiter_match.pos;\n\t\tinner.start = opening_delimiter_match.pos + closer.length;\n\n\t\t// Search for a closer delimiter after the opening one\n\t\tconst closer_index = str.substr(inner.start).indexOf(closer);\n\t\tif (closer_index < 0) {\n\t\t\treturn null;\n\t\t}\n\t\tinner.end = inner.start + closer_index;\n\t\touter.end = inner.end + closer.length;\n\t\treturn {\n\t\t\touter,\n\t\t\tinner\n\t\t};\n\t}\n\n\t// Searches for the first latex block in the given string\n\tfind_latex(str) {\n\t\tlet start = 0;\n\t\tlet opening_delimiter_match;\n\n\t\twhile ((opening_delimiter_match = this.find_opening_delimiter(str, start++)) != null) {\n\t\t\tconst match = this.get_latex_boundaries(str, opening_delimiter_match);\n\t\t\tif (match && match.inner.extract(str).trim().length) {\n\t\t\t\tmatch.options = opening_delimiter_match.options;\n\t\t\t\treturn match;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t// Breaks a message to what comes before, after and to the content of a\n\t// matched latex block\n\textract_latex(str, match) {\n\t\tconst before = str.substr(0, match.outer.start);\n\t\tconst after = str.substr(match.outer.end);\n\t\tlet latex = match.inner.extract(str);\n\t\tlatex = s.unescapeHTML(latex);\n\t\treturn {\n\t\t\tbefore,\n\t\t\tlatex,\n\t\t\tafter\n\t\t};\n\t}\n\n\t// Takes a latex math string and the desired display mode and renders it\n\t// to HTML using the KaTeX library\n\trender_latex(latex, displayMode) {\n\t\tlet rendered;\n\t\ttry {\n\t\t\trendered = katex.renderToString(latex, {\n\t\t\t\tdisplayMode\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconst e = error;\n\t\t\tconst display_mode = displayMode ? 'block' : 'inline';\n\t\t\trendered = `<div class=\"katex-error katex-${ display_mode }-error\">`;\n\t\t\trendered += `${ s.escapeHTML(e.message) }`;\n\t\t\trendered += '</div>';\n\t\t}\n\t\treturn rendered;\n\t}\n\n\t// Takes a string and renders all latex blocks inside it\n\trender(str, render_func) {\n\t\tlet result = '';\n\t\twhile (this.find_latex(str) != null) {\n\t\t\t// Find the first latex block in the string\n\t\t\tconst match = this.find_latex(str);\n\t\t\tconst parts = this.extract_latex(str, match);\n\n\t\t\t// Add to the reuslt what comes before the latex block as well as\n\t\t\t// the rendered latex content\n\t\t\tconst rendered = render_func(parts.latex, match.options.displayMode);\n\t\t\tresult += parts.before + rendered;\n\t\t\t// Set what comes after the latex block to be examined next\n\t\t\tstr = parts.after;\n\t\t}\n\t\treturn result += str;\n\t}\n\n\t// Takes a rocketchat message and renders latex in its content\n\trender_message(message) {\n\t\t//Render only if enabled in admin panel\n\t\tlet render_func;\n\t\tif (this.katex_enabled()) {\n\t\t\tlet msg = message;\n\t\t\tif (!_.isString(message)) {\n\t\t\t\tif (s.trim(message.html)) {\n\t\t\t\t\tmsg = message.html;\n\t\t\t\t} else {\n\t\t\t\t\treturn message;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_.isString(message)) {\n\t\t\t\trender_func = (latex, displayMode) => {\n\t\t\t\t\treturn this.render_latex(latex, displayMode);\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tif (message.tokens == null) {\n\t\t\t\t\tmessage.tokens = [];\n\t\t\t\t}\n\t\t\t\trender_func = (latex, displayMode) => {\n\t\t\t\t\tconst token = `=!=${ Random.id() }=!=`;\n\t\t\t\t\tmessage.tokens.push({\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t\ttext: this.render_latex(latex, displayMode)\n\t\t\t\t\t});\n\t\t\t\t\treturn token;\n\t\t\t\t};\n\t\t\t}\n\t\t\tmsg = this.render(msg, render_func);\n\t\t\tif (!_.isString(message)) {\n\t\t\t\tmessage.html = msg;\n\t\t\t} else {\n\t\t\t\tmessage = msg;\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t}\n\n\tkatex_enabled() {\n\t\treturn RocketChat.settings.get('Katex_Enabled');\n\t}\n\n\tdollar_syntax_enabled() {\n\t\treturn RocketChat.settings.get('Katex_Dollar_Syntax');\n\t}\n\n\tparenthesis_syntax_enabled() {\n\t\treturn RocketChat.settings.get('Katex_Parenthesis_Syntax');\n\t}\n\n}\n\nRocketChat.katex = new Katex;\n\nconst cb = RocketChat.katex.render_message.bind(RocketChat.katex);\n\nRocketChat.callbacks.add('renderMessage', cb, RocketChat.callbacks.priority.HIGH - 1, 'katex');\n\nif (Meteor.isClient) {\n\tBlaze.registerHelper('RocketChatKatex', function(text) {\n\t\treturn RocketChat.katex.render_message(text);\n\t});\n}\n"]}