{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:custom-oauth/server/custom_oauth_server.js"],"names":["module","export","CustomOAuth","_","watch","require","default","v","logger","Logger","Services","BeforeUpdateOrCreateUserFromExternalService","constructor","name","options","debug","Match","test","String","Meteor","Error","configure","userAgent","release","Accounts","oauth","registerService","addHookToProcessUser","Object","serverURL","tokenPath","identityPath","tokenSentVia","identityTokenSentVia","usernameField","trim","mergeUsers","addAutopublishFields","getAccessToken","query","config","ServiceConfiguration","configurations","findOne","service","ConfigError","response","undefined","allOptions","headers","Accept","params","code","redirect_uri","OAuth","_redirectUri","grant_type","state","clientId","openSecret","secret","HTTP","post","err","error","message","extend","data","JSON","parse","content","access_token","getIdentity","accessToken","get","stringify","self","identity","_id","id","result","ID","user_id","CharacterID","user","userid","userid_sec","email","user_email","phid","sub","ocs","displayname","emails","Array","isArray","length","address","serviceData","_OAuthCustom","profile","username","nickname","CharacterName","userName","preferred_username","retrieveCredential","credentialToken","credentialSecret","getUsername","split","reduce","prev","curr","push","serviceName","RocketChat","models","Users","findOneByUsername","services","serviceIdKey","update","$set","validateNewUser","updateOrCreateUserFromExternalService","hook","apply","arguments"],"mappings":"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","file":"/packages/rocketchat_custom-oauth.js","sourcesContent":["/*globals OAuth*/\nimport _ from 'underscore';\n\nconst logger = new Logger('CustomOAuth');\n\nconst Services = {};\nconst BeforeUpdateOrCreateUserFromExternalService = [];\n\nexport class CustomOAuth {\n\tconstructor(name, options) {\n\t\tlogger.debug('Init CustomOAuth', name, options);\n\n\t\tthis.name = name;\n\t\tif (!Match.test(this.name, String)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Name is required and must be String');\n\t\t}\n\n\t\tif (Services[this.name]) {\n\t\t\tServices[this.name].configure(options);\n\t\t\treturn;\n\t\t}\n\n\t\tServices[this.name] = this;\n\n\t\tthis.configure(options);\n\n\t\tthis.userAgent = 'Meteor';\n\t\tif (Meteor.release) {\n\t\t\tthis.userAgent += `/${ Meteor.release }`;\n\t\t}\n\n\t\tAccounts.oauth.registerService(this.name);\n\t\tthis.registerService();\n\t\tthis.addHookToProcessUser();\n\t}\n\n\tconfigure(options) {\n\t\tif (!Match.test(options, Object)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Options is required and must be Object');\n\t\t}\n\n\t\tif (!Match.test(options.serverURL, String)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Options.serverURL is required and must be String');\n\t\t}\n\n\t\tif (!Match.test(options.tokenPath, String)) {\n\t\t\toptions.tokenPath = '/oauth/token';\n\t\t}\n\n\t\tif (!Match.test(options.identityPath, String)) {\n\t\t\toptions.identityPath = '/me';\n\t\t}\n\n\t\tthis.serverURL = options.serverURL;\n\t\tthis.tokenPath = options.tokenPath;\n\t\tthis.identityPath = options.identityPath;\n\t\tthis.tokenSentVia = options.tokenSentVia;\n\t\tthis.identityTokenSentVia = options.identityTokenSentVia;\n\t\tthis.usernameField = (options.usernameField || '').trim();\n\t\tthis.mergeUsers = options.mergeUsers;\n\n\t\tif (this.identityTokenSentVia == null || this.identityTokenSentVia === 'default') {\n\t\t\tthis.identityTokenSentVia = this.tokenSentVia;\n\t\t}\n\n\t\tif (!/^https?:\\/\\/.+/.test(this.tokenPath)) {\n\t\t\tthis.tokenPath = this.serverURL + this.tokenPath;\n\t\t}\n\n\t\tif (!/^https?:\\/\\/.+/.test(this.identityPath)) {\n\t\t\tthis.identityPath = this.serverURL + this.identityPath;\n\t\t}\n\n\t\tif (Match.test(options.addAutopublishFields, Object)) {\n\t\t\tAccounts.addAutopublishFields(options.addAutopublishFields);\n\t\t}\n\t}\n\n\tgetAccessToken(query) {\n\t\tconst config = ServiceConfiguration.configurations.findOne({service: this.name});\n\t\tif (!config) {\n\t\t\tthrow new ServiceConfiguration.ConfigError();\n\t\t}\n\n\t\tlet response = undefined;\n\n\t\tconst allOptions = {\n\t\t\theaders: {\n\t\t\t\t'User-Agent': this.userAgent, // http://doc.gitlab.com/ce/api/users.html#Current-user\n\t\t\t\tAccept: 'application/json'\n\t\t\t},\n\t\t\tparams: {\n\t\t\t\tcode: query.code,\n\t\t\t\tredirect_uri: OAuth._redirectUri(this.name, config),\n\t\t\t\tgrant_type: 'authorization_code',\n\t\t\t\tstate: query.state\n\t\t\t}\n\t\t};\n\n\t\t// Only send clientID / secret once on header or payload.\n\t\tif (this.tokenSentVia === 'header') {\n\t\t\tallOptions['auth'] = `${ config.clientId }:${ OAuth.openSecret(config.secret) }`;\n\t\t} else {\n\t\t\tallOptions['params']['client_secret'] = OAuth.openSecret(config.secret);\n\t\t\tallOptions['params']['client_id'] = config.clientId;\n\t\t}\n\n\t\ttry {\n\t\t\tresponse = HTTP.post(this.tokenPath, allOptions);\n\t\t} catch (err) {\n\t\t\tconst error = new Error(`Failed to complete OAuth handshake with ${ this.name } at ${ this.tokenPath }. ${ err.message }`);\n\t\t\tthrow _.extend(error, {response: err.response});\n\t\t}\n\n\t\tlet data;\n\t\tif (response.data) {\n\t\t\tdata = response.data;\n\t\t} else {\n\t\t\tdata = JSON.parse(response.content);\n\t\t}\n\n\t\tif (data.error) { //if the http response was a json object with an error attribute\n\t\t\tthrow new Error(`Failed to complete OAuth handshake with ${ this.name } at ${ this.tokenPath }. ${ data.error }`);\n\t\t} else {\n\t\t\treturn data.access_token;\n\t\t}\n\t}\n\n\tgetIdentity(accessToken) {\n\t\tconst params = {};\n\t\tconst headers = {\n\t\t\t'User-Agent': this.userAgent // http://doc.gitlab.com/ce/api/users.html#Current-user\n\t\t};\n\n\t\tif (this.identityTokenSentVia === 'header') {\n\t\t\theaders['Authorization'] = `Bearer ${ accessToken }`;\n\t\t} else {\n\t\t\tparams['access_token'] = accessToken;\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = HTTP.get(this.identityPath, {\n\t\t\t\theaders,\n\t\t\t\tparams\n\t\t\t});\n\n\t\t\tlet data;\n\n\t\t\tif (response.data) {\n\t\t\t\tdata = response.data;\n\t\t\t} else {\n\t\t\t\tdata = JSON.parse(response.content);\n\t\t\t}\n\n\t\t\tlogger.debug('Identity response', JSON.stringify(data, null, 2));\n\n\t\t\treturn data;\n\t\t} catch (err) {\n\t\t\tconst error = new Error(`Failed to fetch identity from ${ this.name } at ${ this.identityPath }. ${ err.message }`);\n\t\t\tthrow _.extend(error, {response: err.response});\n\t\t}\n\t}\n\n\tregisterService() {\n\t\tconst self = this;\n\t\tOAuth.registerService(this.name, 2, null, (query) => {\n\t\t\tconst accessToken = self.getAccessToken(query);\n\t\t\t// console.log 'at:', accessToken\n\n\t\t\tlet identity = self.getIdentity(accessToken);\n\n\t\t\tif (identity) {\n\t\t\t\t// Set 'id' to '_id' for any sources that provide it\n\t\t\t\tif (identity._id && !identity.id) {\n\t\t\t\t\tidentity.id = identity._id;\n\t\t\t\t}\n\n\t\t\t\t// Fix for Reddit\n\t\t\t\tif (identity.result) {\n\t\t\t\t\tidentity = identity.result;\n\t\t\t\t}\n\n\t\t\t\t// Fix WordPress-like identities having 'ID' instead of 'id'\n\t\t\t\tif (identity.ID && !identity.id) {\n\t\t\t\t\tidentity.id = identity.ID;\n\t\t\t\t}\n\n\t\t\t\t// Fix Auth0-like identities having 'user_id' instead of 'id'\n\t\t\t\tif (identity.user_id && !identity.id) {\n\t\t\t\t\tidentity.id = identity.user_id;\n\t\t\t\t}\n\n\t\t\t\tif (identity.CharacterID && !identity.id) {\n\t\t\t\t\tidentity.id = identity.CharacterID;\n\t\t\t\t}\n\n\t\t\t\t// Fix Dataporten having 'user.userid' instead of 'id'\n\t\t\t\tif (identity.user && identity.user.userid && !identity.id) {\n\t\t\t\t\tif (identity.user.userid_sec && identity.user.userid_sec[0]) {\n\t\t\t\t\t\tidentity.id = identity.user.userid_sec[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tidentity.id = identity.user.userid;\n\t\t\t\t\t}\n\t\t\t\t\tidentity.email = identity.user.email;\n\t\t\t\t}\n\t\t\t\t// Fix for Xenforo [BD]API plugin for 'user.user_id; instead of 'id'\n\t\t\t\tif (identity.user && identity.user.user_id && !identity.id) {\n\t\t\t\t\tidentity.id = identity.user.user_id;\n\t\t\t\t\tidentity.email = identity.user.user_email;\n\t\t\t\t}\n\t\t\t\t// Fix general 'phid' instead of 'id' from phabricator\n\t\t\t\tif (identity.phid && !identity.id) {\n\t\t\t\t\tidentity.id = identity.phid;\n\t\t\t\t}\n\n\t\t\t\t// Fix Keycloak-like identities having 'sub' instead of 'id'\n\t\t\t\tif (identity.sub && !identity.id) {\n\t\t\t\t\tidentity.id = identity.sub;\n\t\t\t\t}\n\n\t\t\t\t// Fix general 'userid' instead of 'id' from provider\n\t\t\t\tif (identity.userid && !identity.id) {\n\t\t\t\t\tidentity.id = identity.userid;\n\t\t\t\t}\n\n\t\t\t\t// Fix Nextcloud provider\n\t\t\t\tif (!identity.id && identity.ocs && identity.ocs.data && identity.ocs.data.id) {\n\t\t\t\t\tidentity.id = identity.ocs.data.id;\n\t\t\t\t\tidentity.name = identity.ocs.data.displayname;\n\t\t\t\t\tidentity.email = identity.ocs.data.email;\n\t\t\t\t}\n\n\t\t\t\t// Fix when authenticating from a meteor app with 'emails' field\n\t\t\t\tif (!identity.email && (identity.emails && Array.isArray(identity.emails) && identity.emails.length >= 1)) {\n\t\t\t\t\tidentity.email = identity.emails[0].address ? identity.emails[0].address : undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// console.log 'id:', JSON.stringify identity, null, '  '\n\n\t\t\tconst serviceData = {\n\t\t\t\t_OAuthCustom: true,\n\t\t\t\taccessToken\n\t\t\t};\n\n\t\t\t_.extend(serviceData, identity);\n\n\t\t\tconst data = {\n\t\t\t\tserviceData,\n\t\t\t\toptions: {\n\t\t\t\t\tprofile: {\n\t\t\t\t\t\tname: identity.name || identity.username || identity.nickname || identity.CharacterName || identity.userName || identity.preferred_username || (identity.user && identity.user.name)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// console.log data\n\n\t\t\treturn data;\n\t\t});\n\t}\n\n\tretrieveCredential(credentialToken, credentialSecret) {\n\t\treturn OAuth.retrieveCredential(credentialToken, credentialSecret);\n\t}\n\n\tgetUsername(data) {\n\t\tlet username = '';\n\n\t\tusername = this.usernameField.split('.').reduce(function(prev, curr) {\n\t\t\treturn prev ? prev[curr] : undefined;\n\t\t}, data);\n\t\tif (!username) {\n\t\t\tthrow new Meteor.Error('field_not_found', `Username field \"${ this.usernameField }\" not found in data`, data);\n\t\t}\n\t\treturn username;\n\t}\n\n\taddHookToProcessUser() {\n\t\tBeforeUpdateOrCreateUserFromExternalService.push((serviceName, serviceData/*, options*/) => {\n\t\t\tif (serviceName !== this.name) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.usernameField) {\n\t\t\t\tconst username = this.getUsername(serviceData);\n\n\t\t\t\tconst user = RocketChat.models.Users.findOneByUsername(username);\n\t\t\t\tif (!user) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// User already created or merged\n\t\t\t\tif (user.services && user.services[serviceName] && user.services[serviceName].id === serviceData.id) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.mergeUsers !== true) {\n\t\t\t\t\tthrow new Meteor.Error('CustomOAuth', `User with username ${ user.username } already exists`);\n\t\t\t\t}\n\n\t\t\t\tconst serviceIdKey = `services.${ serviceName }.id`;\n\t\t\t\tconst update = {\n\t\t\t\t\t$set: {\n\t\t\t\t\t\t[serviceIdKey]: serviceData.id\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tRocketChat.models.Users.update({_id: user._id}, update);\n\t\t\t}\n\t\t});\n\n\t\tAccounts.validateNewUser((user) => {\n\t\t\tif (!user.services || !user.services[this.name] || !user.services[this.name].id) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (this.usernameField) {\n\t\t\t\tuser.username = this.getUsername(user.services[this.name]);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t}\n}\n\n\nconst updateOrCreateUserFromExternalService = Accounts.updateOrCreateUserFromExternalService;\nAccounts.updateOrCreateUserFromExternalService = function(/*serviceName, serviceData, options*/) {\n\tfor (const hook of BeforeUpdateOrCreateUserFromExternalService) {\n\t\thook.apply(this, arguments);\n\t}\n\n\treturn updateOrCreateUserFromExternalService.apply(this, arguments);\n};\n"]}