{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:slashcommands-invite/server/server.js"],"names":["Invite","command","params","item","Match","test","String","usernames","replace","split","filter","a","length","users","Meteor","find","username","$in","userId","currentUser","findOne","count","RocketChat","Notifications","notifyUser","_id","Random","id","rid","ts","Date","msg","TAPi18n","__","postProcess","sprintf","join","language","fetch","user","subscription","models","Subscriptions","findOneByRoomIdAndUserId","fields","forEach","call","error","slashCommands","add","description"],"mappings":"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","file":"/packages/rocketchat_slashcommands-invite.js","sourcesContent":["\n/*\n* Invite is a named function that will replace /invite commands\n* @param {Object} message - The message object\n*/\n\n\nfunction Invite(command, params, item) {\n\n\tif (command !== 'invite' || !Match.test(params, String)) {\n\t\treturn;\n\t}\n\tconst usernames = params.replace(/@/g, '').split(/[\\s,]/).filter((a) => a !== '');\n\tif (usernames.length === 0) {\n\t\treturn;\n\t}\n\tlet users = Meteor.users.find({\n\t\tusername: {\n\t\t\t$in: usernames\n\t\t}\n\t});\n\tconst userId = Meteor.userId();\n\tconst currentUser = Meteor.users.findOne(userId);\n\tif (users.count() === 0) {\n\t\tRocketChat.Notifications.notifyUser(userId, 'message', {\n\t\t\t_id: Random.id(),\n\t\t\trid: item.rid,\n\t\t\tts: new Date,\n\t\t\tmsg: TAPi18n.__('User_doesnt_exist', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [usernames.join(' @')]\n\t\t\t}, currentUser.language)\n\t\t});\n\t\treturn;\n\t}\n\tusers = users.fetch().filter(function(user) {\n\t\tconst subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(item.rid, user._id, { fields: { _id: 1 } });\n\t\tif (subscription == null) {\n\t\t\treturn true;\n\t\t}\n\t\tRocketChat.Notifications.notifyUser(userId, 'message', {\n\t\t\t_id: Random.id(),\n\t\t\trid: item.rid,\n\t\t\tts: new Date,\n\t\t\tmsg: TAPi18n.__('Username_is_already_in_here', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [user.username]\n\t\t\t}, currentUser.language)\n\t\t});\n\t\treturn false;\n\t});\n\n\tusers.forEach(function(user) {\n\n\t\ttry {\n\t\t\treturn Meteor.call('addUserToRoom', {\n\t\t\t\trid: item.rid,\n\t\t\t\tusername: user.username\n\t\t\t});\n\t\t} catch ({error}) {\n\t\t\tif (error === 'cant-invite-for-direct-room') {\n\t\t\t\tRocketChat.Notifications.notifyUser(userId, 'message', {\n\t\t\t\t\t_id: Random.id(),\n\t\t\t\t\trid: item.rid,\n\t\t\t\t\tts: new Date,\n\t\t\t\t\tmsg: TAPi18n.__('Cannot_invite_users_to_direct_rooms', null, currentUser.language)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tRocketChat.Notifications.notifyUser(userId, 'message', {\n\t\t\t\t\t_id: Random.id(),\n\t\t\t\t\trid: item.rid,\n\t\t\t\t\tts: new Date,\n\t\t\t\t\tmsg: TAPi18n.__(error, null, currentUser.language)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n}\n\nRocketChat.slashCommands.add('invite', Invite, {\n\tdescription: 'Invite_user_to_join_channel',\n\tparams: '@username'\n});\n"]}