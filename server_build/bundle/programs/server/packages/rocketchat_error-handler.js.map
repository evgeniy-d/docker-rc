{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:error-handler/server/lib/RocketChat.ErrorHandler.js","meteor://ðŸ’»app/packages/rocketchat:error-handler/server/startup/settings.js"],"names":["ErrorHandler","constructor","reporting","rid","lastError","Meteor","startup","registerHandlers","RocketChat","settings","get","key","value","roomName","trim","getRoomId","process","on","bindEnvironment","error","trackError","message","stack","self","originalMeteorDebug","_debug","call","apply","arguments","replace","room","models","Rooms","findOneByName","fields","_id","t","user","Users","findOneById","sendMessage","msg","addGroup","add","type"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,YAAN,CAAmB;AAClBC,gBAAc;AACb,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,GAAL,GAAW,IAAX;AACA,SAAKC,SAAL,GAAiB,IAAjB;AAEAC,WAAOC,OAAP,CAAe,MAAM;AACpB,WAAKC,gBAAL;AAEAC,iBAAWC,QAAX,CAAoBC,GAApB,CAAwB,2BAAxB,EAAqD,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACpE,aAAKT,GAAL,GAAW,IAAX;AACA,cAAMU,WAAWD,MAAME,IAAN,EAAjB;;AACA,YAAID,QAAJ,EAAc;AACb,eAAKV,GAAL,GAAW,KAAKY,SAAL,CAAeF,QAAf,CAAX;AACA;;AAED,YAAI,KAAKV,GAAT,EAAc;AACb,eAAKD,SAAL,GAAiB,IAAjB;AACA,SAFD,MAEO;AACN,eAAKA,SAAL,GAAiB,KAAjB;AACA;AACD,OAZD;AAaA,KAhBD;AAiBA;;AAEDK,qBAAmB;AAClBS,YAAQC,EAAR,CAAW,mBAAX,EAAgCZ,OAAOa,eAAP,CAAwBC,KAAD,IAAW;AACjE,UAAI,CAAC,KAAKjB,SAAV,EAAqB;AACpB;AACA;;AACD,WAAKkB,UAAL,CAAgBD,MAAME,OAAtB,EAA+BF,MAAMG,KAArC;AACA,KAL+B,CAAhC;AAOA,UAAMC,OAAO,IAAb;AACA,UAAMC,sBAAsBnB,OAAOoB,MAAnC;;AACApB,WAAOoB,MAAP,GAAgB,UAASJ,OAAT,EAAkBC,KAAlB,EAAyB;AACxC,UAAI,CAACC,KAAKrB,SAAV,EAAqB;AACpB,eAAOsB,oBAAoBE,IAApB,CAAyB,IAAzB,EAA+BL,OAA/B,EAAwCC,KAAxC,CAAP;AACA;;AACDC,WAAKH,UAAL,CAAgBC,OAAhB,EAAyBC,KAAzB;AACA,aAAOE,oBAAoBG,KAApB,CAA0B,IAA1B,EAAgCC,SAAhC,CAAP;AACA,KAND;AAOA;;AAEDb,YAAUF,QAAV,EAAoB;AACnBA,eAAWA,SAASgB,OAAT,CAAiB,GAAjB,CAAX;AACA,UAAMC,OAAOtB,WAAWuB,MAAX,CAAkBC,KAAlB,CAAwBC,aAAxB,CAAsCpB,QAAtC,EAAgD;AAAEqB,cAAQ;AAAEC,aAAK,CAAP;AAAUC,WAAG;AAAb;AAAV,KAAhD,CAAb;;AACA,QAAI,CAACN,IAAD,IAAUA,KAAKM,CAAL,KAAW,GAAX,IAAkBN,KAAKM,CAAL,KAAW,GAA3C,EAAiD;AAChD;AACA;;AACD,WAAON,KAAKK,GAAZ;AACA;;AAEDf,aAAWC,OAAX,EAAoBC,KAApB,EAA2B;AAC1B,QAAI,CAAC,KAAKpB,SAAN,IAAmB,CAAC,KAAKC,GAAzB,IAAgC,KAAKC,SAAL,KAAmBiB,OAAvD,EAAgE;AAC/D;AACA;;AACD,SAAKjB,SAAL,GAAiBiB,OAAjB;AACA,UAAMgB,OAAO7B,WAAWuB,MAAX,CAAkBO,KAAlB,CAAwBC,WAAxB,CAAoC,YAApC,CAAb;;AAEA,QAAIjB,KAAJ,EAAW;AACVD,gBAAW,GAAGA,OAAS,aAAaC,KAAO,UAA3C;AACA;;AAEDd,eAAWgC,WAAX,CAAuBH,IAAvB,EAA6B;AAAEI,WAAKpB;AAAP,KAA7B,EAA+C;AAAEc,WAAK,KAAKhC;AAAZ,KAA/C;AACA;;AAjEiB;;AAoEnBK,WAAWR,YAAX,GAA0B,IAAIA,YAAJ,EAA1B,C;;;;;;;;;;;ACpEAQ,WAAWC,QAAX,CAAoBiC,QAApB,CAA6B,MAA7B,EAAqC,YAAW;AAC/C,OAAKC,GAAL,CAAS,2BAAT,EAAsC,EAAtC,EAA0C;AAAEC,UAAM;AAAR,GAA1C;AACA,CAFD,E","file":"/packages/rocketchat_error-handler.js","sourcesContent":["class ErrorHandler {\n\tconstructor() {\n\t\tthis.reporting = false;\n\t\tthis.rid = null;\n\t\tthis.lastError = null;\n\n\t\tMeteor.startup(() => {\n\t\t\tthis.registerHandlers();\n\n\t\t\tRocketChat.settings.get('Log_Exceptions_to_Channel', (key, value) => {\n\t\t\t\tthis.rid = null;\n\t\t\t\tconst roomName = value.trim();\n\t\t\t\tif (roomName) {\n\t\t\t\t\tthis.rid = this.getRoomId(roomName);\n\t\t\t\t}\n\n\t\t\t\tif (this.rid) {\n\t\t\t\t\tthis.reporting = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.reporting = false;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tregisterHandlers() {\n\t\tprocess.on('uncaughtException', Meteor.bindEnvironment((error) => {\n\t\t\tif (!this.reporting) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.trackError(error.message, error.stack);\n\t\t}));\n\n\t\tconst self = this;\n\t\tconst originalMeteorDebug = Meteor._debug;\n\t\tMeteor._debug = function(message, stack) {\n\t\t\tif (!self.reporting) {\n\t\t\t\treturn originalMeteorDebug.call(this, message, stack);\n\t\t\t}\n\t\t\tself.trackError(message, stack);\n\t\t\treturn originalMeteorDebug.apply(this, arguments);\n\t\t};\n\t}\n\n\tgetRoomId(roomName) {\n\t\troomName = roomName.replace('#');\n\t\tconst room = RocketChat.models.Rooms.findOneByName(roomName, { fields: { _id: 1, t: 1 } });\n\t\tif (!room || (room.t !== 'c' && room.t !== 'p')) {\n\t\t\treturn;\n\t\t}\n\t\treturn room._id;\n\t}\n\n\ttrackError(message, stack) {\n\t\tif (!this.reporting || !this.rid || this.lastError === message) {\n\t\t\treturn;\n\t\t}\n\t\tthis.lastError = message;\n\t\tconst user = RocketChat.models.Users.findOneById('rocket.cat');\n\n\t\tif (stack) {\n\t\t\tmessage = `${ message }\\n\\`\\`\\`\\n${ stack }\\n\\`\\`\\``;\n\t\t}\n\n\t\tRocketChat.sendMessage(user, { msg: message }, { _id: this.rid });\n\t}\n}\n\nRocketChat.ErrorHandler = new ErrorHandler;\n","RocketChat.settings.addGroup('Logs', function() {\n\tthis.add('Log_Exceptions_to_Channel', '', { type: 'string' });\n});\n"]}