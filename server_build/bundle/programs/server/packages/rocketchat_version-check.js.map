{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:version-check/server/server.js","meteor://ðŸ’»app/packages/rocketchat:version-check/server/addSettings.js","meteor://ðŸ’»app/packages/rocketchat:version-check/server/logger.js","meteor://ðŸ’»app/packages/rocketchat:version-check/server/functions/checkVersionUpdate.js","meteor://ðŸ’»app/packages/rocketchat:version-check/server/functions/getNewUpdates.js","meteor://ðŸ’»app/packages/rocketchat:version-check/server/methods/banner_dismiss.js"],"names":["checkVersionUpdate","module","watch","require","default","v","jobName","SyncedCron","nextScheduledAtDate","remove","add","name","schedule","parser","text","job","start","Meteor","startup","RocketChat","settings","addGroup","section","type","readonly","exportDefault","Logger","semver","getNewUpdates","logger","info","versions","update","exists","lastestVersion","security","lastCheckedVersion","get","forEach","version","lte","Info","updateById","models","Roles","findUsersInRole","adminUser","msg","TAPi18n","__","language","infoUrl","rid","_id","sort","join","runAsUser","call","Users","addBannerById","id","priority","title","textArguments","link","os","HTTP","uniqueID","Settings","findOne","_oplogHandle","MongoInternals","defaultRemoteCollectionDriver","mongo","oplogEnabled","onOplogEntry","data","uniqueId","value","installedAt","createdAt","osType","osPlatform","platform","osArch","arch","osRelease","release","nodeVersion","process","deployMethod","env","DEPLOY_METHOD","deployPlatform","DEPLOY_PLATFORM","result","params","error","alerts","methods","userId","Error","method","removeBannerById"],"mappings":"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","file":"/packages/rocketchat_version-check.js","sourcesContent":["/* globals SyncedCron */\n\nimport checkVersionUpdate from './functions/checkVersionUpdate';\nimport './methods/banner_dismiss';\nimport './addSettings';\n\nconst jobName = 'version_check';\n\nif (SyncedCron.nextScheduledAtDate(jobName)) {\n\tSyncedCron.remove(jobName);\n}\n\nSyncedCron.add({\n\tname: jobName,\n\tschedule: parser => parser.text('at 2:00 am'),\n\tjob() {\n\t\tcheckVersionUpdate();\n\t}\n});\n\nSyncedCron.start();\n\nMeteor.startup(() => {\n\tcheckVersionUpdate();\n});\n\n// Send email to admins\n// Save latest alert\n// ENV var to disable the check for update for our cloud\n","RocketChat.settings.addGroup('General', function() {\n\tthis.section('Update', function() {\n\t\tthis.add('Update_LatestAvailableVersion', '0.0.0', {\n\t\t\ttype: 'string',\n\t\t\treadonly: true\n\t\t});\n\t});\n});\n","export default new Logger('VersionCheck');\n","import semver from 'semver';\nimport getNewUpdates from './getNewUpdates';\nimport logger from '../logger';\n\nexport default () => {\n\tlogger.info('Checking for version updates');\n\n\tconst { versions } = getNewUpdates();\n\n\tconst update = {\n\t\texists: false,\n\t\tlastestVersion: null,\n\t\tsecurity: false\n\t};\n\n\tconst lastCheckedVersion = RocketChat.settings.get('Update_LatestAvailableVersion');\n\tversions.forEach(version => {\n\t\tif (semver.lte(version.version, lastCheckedVersion)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (semver.lte(version.version, RocketChat.Info.version)) {\n\t\t\treturn;\n\t\t}\n\n\t\tupdate.exists = true;\n\t\tupdate.lastestVersion = version;\n\n\t\tif (version.security === true) {\n\t\t\tupdate.security = true;\n\t\t}\n\t});\n\n\tif (update.exists) {\n\t\tRocketChat.settings.updateById('Update_LatestAvailableVersion', update.lastestVersion.version);\n\t\tRocketChat.models.Roles.findUsersInRole('admin').forEach(adminUser => {\n\t\t\tconst msg = {\n\t\t\t\tmsg: `*${ TAPi18n.__('Update_your_RocketChat', adminUser.language) }*\\n${ TAPi18n.__('New_version_available_(s)', update.lastestVersion.version, adminUser.language) }\\n${ update.lastestVersion.infoUrl }`,\n\t\t\t\trid: [adminUser._id, 'rocket.cat'].sort().join('')\n\t\t\t};\n\n\t\t\tMeteor.runAsUser('rocket.cat', () => Meteor.call('sendMessage', msg));\n\n\t\t\tRocketChat.models.Users.addBannerById(adminUser._id, {\n\t\t\t\tid: 'versionUpdate',\n\t\t\t\tpriority: 10,\n\t\t\t\ttitle: 'Update_your_RocketChat',\n\t\t\t\ttext: 'New_version_available_(s)',\n\t\t\t\ttextArguments: [update.lastestVersion.version],\n\t\t\t\tlink: update.lastestVersion.infoUrl\n\t\t\t});\n\t\t});\n\t}\n};\n","/* global MongoInternals */\nimport os from 'os';\nimport { HTTP } from 'meteor/http';\n// import checkUpdate from '../checkUpdate';\n\nexport default () => {\n\ttry {\n\t\tconst uniqueID = RocketChat.models.Settings.findOne('uniqueID');\n\t\tconst _oplogHandle = MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle;\n\t\tconst oplogEnabled = _oplogHandle && _oplogHandle.onOplogEntry && RocketChat.settings.get('Force_Disable_OpLog_For_Cache') !== true;\n\n\t\tconst data = {\n\t\t\tuniqueId: uniqueID.value,\n\t\t\tinstalledAt: uniqueID.createdAt,\n\t\t\tversion: RocketChat.Info.version,\n\t\t\toplogEnabled,\n\t\t\tosType: os.type(),\n\t\t\tosPlatform: os.platform(),\n\t\t\tosArch: os.arch(),\n\t\t\tosRelease: os.release(),\n\t\t\tnodeVersion: process.version,\n\t\t\tdeployMethod: process.env.DEPLOY_METHOD || 'tar',\n\t\t\tdeployPlatform: process.env.DEPLOY_PLATFORM || 'selfinstall'\n\t\t};\n\n\t\tconst result = HTTP.get('https://releases.rocket.chat/updates/check', {\n\t\t\tparams: data\n\t\t});\n\n\t\treturn result.data;\n\t} catch (error) {\n\t\t// There's no need to log this error\n\t\t// as it's pointless and the user\n\t\t// can't do anything about it anyways\n\n\t\treturn {\n\t\t\tversions: [],\n\t\t\talerts: []\n\t\t};\n\t}\n};\n","Meteor.methods({\n\t'banner/dismiss'({ id }) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'banner/dismiss' });\n\t\t}\n\n\t\tRocketChat.models.Users.removeBannerById(this.userId, {\n\t\t\tid\n\t\t});\n\t}\n});\n"]}