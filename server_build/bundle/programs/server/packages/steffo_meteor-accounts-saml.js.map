{"version":3,"sources":["meteor://ðŸ’»app/packages/steffo:meteor-accounts-saml/saml_server.js","meteor://ðŸ’»app/packages/steffo:meteor-accounts-saml/saml_utils.js","meteor://ðŸ’»app/packages/steffo:meteor-accounts-saml/saml_rocketchat.js"],"names":["_","module","watch","require","default","v","fiber","connect","Accounts","saml","settings","debug","generateUsername","providers","RoutePolicy","declare","getSamlProviderConfig","provider","Meteor","Error","method","samlProvider","element","filter","methods","samlLogout","userId","providerConfig","console","log","JSON","stringify","user","users","findOne","_id","nameID","services","sessionIndex","idpSession","_saml","SAML","request","generateLogoutRequest","update","$set","id","_syncRequestToUrl","wrapAsync","requestToUrl","result","registerLoginHandler","loginRequest","credentialToken","undefined","loginResult","retrieveCredential","type","error","LoginCancelledError","numericError","profile","email","RegExp","escape","emailRegex","newUser","name","cn","username","active","globalRoles","emails","address","verified","RocketChat","generateUsernameSuggestion","insertUserDoc","stampedToken","_generateStampedLoginToken","$push","samlLogin","RelayState","idp","issuer","token","hasCredential","models","CredentialTokens","findOneById","data","userInfo","storeCredential","create","closePopup","res","err","writeHead","content","end","samlUrlToObject","url","splitUrl","split","splitPath","actionName","serviceName","middleware","req","next","samlObject","service","find","samlSetting","callbackUrl","absoluteUrl","write","generateServiceProviderMetadata","validateLogoutResponse","query","SAMLResponse","logOutUser","inResponseTo","loggedOutUser","fetch","length","$unset","run","redirect","getAuthorizeUrl","body","validateResponse","inResponseToId","value","InResponseTo","saml_idp_credentialToken","Random","WebApp","connectHandlers","use","bodyParser","zlib","xml2js","xmlCrypto","crypto","xmldom","querystring","xmlbuilder","options","initialize","prototype","protocol","path","identifierFormat","authnContext","generateUniqueID","chars","uniqueID","i","substr","Math","floor","random","generateInstant","Date","toISOString","signRequest","xml","signer","createSign","sign","privateKey","generateAuthorizeRequest","instant","headers","host","entryPoint","idpSLORedirectURL","operation","callback","self","deflateRaw","buffer","base64","toString","target","indexOf","relayState","samlRequest","SAMLRequest","privateCert","SigAlg","Signature","getLogoutUrl","certToPEM","cert","match","join","validateSignature","doc","DOMParser","parseFromString","signature","xpath","sig","SignedXml","keyInfoProvider","getKeyInfo","getKey","loadSignature","checkSignature","getElement","parentElement","elementName","samlResponse","compressedSAMLResponse","Buffer","inflateRaw","decoded","parser","Parser","explicitRoot","parseString","response","$","status","statusCode","Value","xmlns","assertion","subject","Format","nameIDFormat","authnStatement","SessionIndex","attributeStatement","attributes","forEach","attribute","key","Name","mail","profileKeys","Object","keys","replace","logoutResponse","decryptionCert","metadata","pretty","indent","newline","export","updateServices","configureSamlService","getSamlConfigs","debounce","logger","Logger","updated","addGroup","addSamlService","add","group","section","i18nLabel","multiline","values","buttonLabelText","get","buttonLabelColor","buttonColor","clientConfig","logoutBehaviour","secret","publicCert","fn","delay","timer","clearTimeout","setTimeout","samlConfigs","map","ServiceConfiguration","configurations","upsert","toLowerCase","remove","e","startup","call"],"mappings":"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","file":"/packages/steffo_meteor-accounts-saml.js","sourcesContent":["/* globals RoutePolicy, SAML */\n/* jshint newcap: false */\nimport _ from 'underscore';\n\nif (!Accounts.saml) {\n\tAccounts.saml = {\n\t\tsettings: {\n\t\t\tdebug: true,\n\t\t\tgenerateUsername: false,\n\t\t\tproviders: []\n\t\t}\n\t};\n}\n\nimport fiber from 'fibers';\nimport connect from 'connect';\nRoutePolicy.declare('/_saml/', 'network');\n\n/**\n * Fetch SAML provider configs for given 'provider'.\n */\nfunction getSamlProviderConfig(provider) {\n\tif (! provider) {\n\t\tthrow new Meteor.Error('no-saml-provider',\n\t\t\t'SAML internal error',\n\t\t\t{ method: 'getSamlProviderConfig' });\n\t}\n\tconst samlProvider = function(element) {\n\t\treturn (element.provider === provider);\n\t};\n\treturn Accounts.saml.settings.providers.filter(samlProvider)[0];\n}\n\nMeteor.methods({\n\tsamlLogout(provider) {\n\t\t// Make sure the user is logged in before initiate SAML SLO\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'samlLogout' });\n\t\t}\n\t\tconst providerConfig = getSamlProviderConfig(provider);\n\n\t\tif (Accounts.saml.settings.debug) {\n\t\t\tconsole.log(`Logout request from ${ JSON.stringify(providerConfig) }`);\n\t\t}\n\t\t// This query should respect upcoming array of SAML logins\n\t\tconst user = Meteor.users.findOne({\n\t\t\t_id: Meteor.userId(),\n\t\t\t'services.saml.provider': provider\n\t\t}, {\n\t\t\t'services.saml': 1\n\t\t});\n\t\tlet nameID = user.services.saml.nameID;\n\t\tconst sessionIndex = user.services.saml.idpSession;\n\t\tnameID = sessionIndex;\n\t\tif (Accounts.saml.settings.debug) {\n\t\t\tconsole.log(`NameID for user ${ Meteor.userId() } found: ${ JSON.stringify(nameID) }`);\n\t\t}\n\n\t\tconst _saml = new SAML(providerConfig);\n\n\t\tconst request = _saml.generateLogoutRequest({\n\t\t\tnameID,\n\t\t\tsessionIndex\n\t\t});\n\n\t\t// request.request: actual XML SAML Request\n\t\t// request.id: comminucation id which will be mentioned in the ResponseTo field of SAMLResponse\n\n\t\tMeteor.users.update({\n\t\t\t_id: Meteor.userId()\n\t\t}, {\n\t\t\t$set: {\n\t\t\t\t'services.saml.inResponseTo': request.id\n\t\t\t}\n\t\t});\n\n\t\tconst _syncRequestToUrl = Meteor.wrapAsync(_saml.requestToUrl, _saml);\n\t\tconst result = _syncRequestToUrl(request.request, 'logout');\n\t\tif (Accounts.saml.settings.debug) {\n\t\t\tconsole.log(`SAML Logout Request ${ result }`);\n\t\t}\n\n\n\t\treturn result;\n\t}\n});\n\nAccounts.registerLoginHandler(function(loginRequest) {\n\tif (!loginRequest.saml || !loginRequest.credentialToken) {\n\t\treturn undefined;\n\t}\n\n\tconst loginResult = Accounts.saml.retrieveCredential(loginRequest.credentialToken);\n\tif (Accounts.saml.settings.debug) {\n\t\tconsole.log(`RESULT :${ JSON.stringify(loginResult) }`);\n\t}\n\n\tif (loginResult === undefined) {\n\t\treturn {\n\t\t\ttype: 'saml',\n\t\t\terror: new Meteor.Error(Accounts.LoginCancelledError.numericError, 'No matching login attempt found')\n\t\t};\n\t}\n\n\tif (loginResult && loginResult.profile && loginResult.profile.email) {\n\t\tconst email = RegExp.escape(loginResult.profile.email);\n\t\tconst emailRegex = new RegExp(`^${ email }$`, 'i');\n\t\tlet user = Meteor.users.findOne({\n\t\t\t'emails.address': emailRegex\n\t\t});\n\n\t\tif (!user) {\n\t\t\tconst newUser = {\n\t\t\t\tname: loginResult.profile.cn || loginResult.profile.username,\n\t\t\t\tactive: true,\n\t\t\t\tglobalRoles: ['user'],\n\t\t\t\temails: [{\n\t\t\t\t\taddress: loginResult.profile.email,\n\t\t\t\t\tverified: true\n\t\t\t\t}]\n\t\t\t};\n\n\t\t\tif (Accounts.saml.settings.generateUsername === true) {\n\t\t\t\tconst username = RocketChat.generateUsernameSuggestion(newUser);\n\t\t\t\tif (username) {\n\t\t\t\t\tnewUser.username = username;\n\t\t\t\t}\n\t\t\t} else if (loginResult.profile.username) {\n\t\t\t\tnewUser.username = loginResult.profile.username;\n\t\t\t}\n\n\t\t\tconst userId = Accounts.insertUserDoc({}, newUser);\n\t\t\tuser = Meteor.users.findOne(userId);\n\t\t}\n\n\t\t//creating the token and adding to the user\n\t\tconst stampedToken = Accounts._generateStampedLoginToken();\n\t\tMeteor.users.update(user, {\n\t\t\t$push: {\n\t\t\t\t'services.resume.loginTokens': stampedToken\n\t\t\t}\n\t\t});\n\n\t\tconst samlLogin = {\n\t\t\tprovider: Accounts.saml.RelayState,\n\t\t\tidp: loginResult.profile.issuer,\n\t\t\tidpSession: loginResult.profile.sessionIndex,\n\t\t\tnameID: loginResult.profile.nameID\n\t\t};\n\n\t\tMeteor.users.update({\n\t\t\t_id: user._id\n\t\t}, {\n\t\t\t$set: {\n\t\t\t\t// TBD this should be pushed, otherwise we're only able to SSO into a single IDP at a time\n\t\t\t\t'services.saml': samlLogin\n\t\t\t}\n\t\t});\n\n\t\t//sending token along with the userId\n\t\tconst result = {\n\t\t\tuserId: user._id,\n\t\t\ttoken: stampedToken.token\n\t\t};\n\n\t\treturn result;\n\n\t} else {\n\t\tthrow new Error('SAML Profile did not contain an email address');\n\t}\n});\n\nAccounts.saml.hasCredential = function(credentialToken) {\n\treturn RocketChat.models.CredentialTokens.findOneById(credentialToken) != null;\n};\n\nAccounts.saml.retrieveCredential = function(credentialToken) {\n\t// The credentialToken in all these functions corresponds to SAMLs inResponseTo field and is mandatory to check.\n\tconst data = RocketChat.models.CredentialTokens.findOneById(credentialToken);\n\tif (data) {\n\t\treturn data.userInfo;\n\t}\n};\n\nAccounts.saml.storeCredential = function(credentialToken, loginResult) {\n\tRocketChat.models.CredentialTokens.create(credentialToken, loginResult);\n};\n\nconst closePopup = function(res, err) {\n\tres.writeHead(200, {\n\t\t'Content-Type': 'text/html'\n\t});\n\tlet content = '<html><head><script>window.close()</script></head><body><H1>Verified</H1></body></html>';\n\tif (err) {\n\t\tcontent = `<html><body><h2>Sorry, an annoying error occured</h2><div>${ err }</div><a onclick=\"window.close();\">Close Window</a></body></html>`;\n\t}\n\tres.end(content, 'utf-8');\n};\n\nconst samlUrlToObject = function(url) {\n\t// req.url will be '/_saml/<action>/<service name>/<credentialToken>'\n\tif (!url) {\n\t\treturn null;\n\t}\n\n\tconst splitUrl = url.split('?');\n\tconst splitPath = splitUrl[0].split('/');\n\n\t// Any non-saml request will continue down the default\n\t// middlewares.\n\tif (splitPath[1] !== '_saml') {\n\t\treturn null;\n\t}\n\n\tconst result = {\n\t\tactionName: splitPath[2],\n\t\tserviceName: splitPath[3],\n\t\tcredentialToken: splitPath[4]\n\t};\n\tif (Accounts.saml.settings.debug) {\n\t\tconsole.log(result);\n\t}\n\treturn result;\n};\n\nconst middleware = function(req, res, next) {\n\t// Make sure to catch any exceptions because otherwise we'd crash\n\t// the runner\n\ttry {\n\t\tconst samlObject = samlUrlToObject(req.url);\n\t\tif (!samlObject || !samlObject.serviceName) {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!samlObject.actionName) {\n\t\t\tthrow new Error('Missing SAML action');\n\t\t}\n\n\t\tconsole.log(Accounts.saml.settings.providers);\n\t\tconsole.log(samlObject.serviceName);\n\t\tconst service = _.find(Accounts.saml.settings.providers, function(samlSetting) {\n\t\t\treturn samlSetting.provider === samlObject.serviceName;\n\t\t});\n\n\t\t// Skip everything if there's no service set by the saml middleware\n\t\tif (!service) {\n\t\t\tthrow new Error(`Unexpected SAML service ${ samlObject.serviceName }`);\n\t\t}\n\t\tlet _saml;\n\t\tswitch (samlObject.actionName) {\n\t\t\tcase 'metadata':\n\t\t\t\t_saml = new SAML(service);\n\t\t\t\tservice.callbackUrl = Meteor.absoluteUrl(`_saml/validate/${ service.provider }`);\n\t\t\t\tres.writeHead(200);\n\t\t\t\tres.write(_saml.generateServiceProviderMetadata(service.callbackUrl));\n\t\t\t\tres.end();\n\t\t\t\t//closePopup(res);\n\t\t\t\tbreak;\n\t\t\tcase 'logout':\n\t\t\t\t// This is where we receive SAML LogoutResponse\n\t\t\t\t_saml = new SAML(service);\n\t\t\t\t_saml.validateLogoutResponse(req.query.SAMLResponse, function(err, result) {\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\tconst logOutUser = function(inResponseTo) {\n\t\t\t\t\t\t\tif (Accounts.saml.settings.debug) {\n\t\t\t\t\t\t\t\tconsole.log(`Logging Out user via inResponseTo ${ inResponseTo }`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst loggedOutUser = Meteor.users.find({\n\t\t\t\t\t\t\t\t'services.saml.inResponseTo': inResponseTo\n\t\t\t\t\t\t\t}).fetch();\n\t\t\t\t\t\t\tif (loggedOutUser.length === 1) {\n\t\t\t\t\t\t\t\tif (Accounts.saml.settings.debug) {\n\t\t\t\t\t\t\t\t\tconsole.log(`Found user ${ loggedOutUser[0]._id }`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tMeteor.users.update({\n\t\t\t\t\t\t\t\t\t_id: loggedOutUser[0]._id\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\t\t\t'services.resume.loginTokens': []\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tMeteor.users.update({\n\t\t\t\t\t\t\t\t\t_id: loggedOutUser[0]._id\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t$unset: {\n\t\t\t\t\t\t\t\t\t\t'services.saml': ''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Meteor.Error('Found multiple users matching SAML inResponseTo fields');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tfiber(function() {\n\t\t\t\t\t\t\tlogOutUser(result);\n\t\t\t\t\t\t}).run();\n\n\n\t\t\t\t\t\tres.writeHead(302, {\n\t\t\t\t\t\t\t'Location': req.query.RelayState\n\t\t\t\t\t\t});\n\t\t\t\t\t\tres.end();\n\t\t\t\t\t}\n\t\t\t\t\t//  else {\n\t\t\t\t\t// \t// TBD thinking of sth meaning full.\n\t\t\t\t\t// }\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'sloRedirect':\n\t\t\t\tres.writeHead(302, {\n\t\t\t\t\t// credentialToken here is the SAML LogOut Request that we'll send back to IDP\n\t\t\t\t\t'Location': req.query.redirect\n\t\t\t\t});\n\t\t\t\tres.end();\n\t\t\t\tbreak;\n\t\t\tcase 'authorize':\n\t\t\t\tservice.callbackUrl = Meteor.absoluteUrl(`_saml/validate/${ service.provider }`);\n\t\t\t\tservice.id = samlObject.credentialToken;\n\t\t\t\t_saml = new SAML(service);\n\t\t\t\t_saml.getAuthorizeUrl(req, function(err, url) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tthrow new Error('Unable to generate authorize url');\n\t\t\t\t\t}\n\t\t\t\t\tres.writeHead(302, {\n\t\t\t\t\t\t'Location': url\n\t\t\t\t\t});\n\t\t\t\t\tres.end();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'validate':\n\t\t\t\t_saml = new SAML(service);\n\t\t\t\tAccounts.saml.RelayState = req.body.RelayState;\n\t\t\t\t_saml.validateResponse(req.body.SAMLResponse, req.body.RelayState, function(err, profile/*, loggedOut*/) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tthrow new Error(`Unable to validate response url: ${ err }`);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst credentialToken = (profile.inResponseToId && profile.inResponseToId.value) || profile.inResponseToId || profile.InResponseTo || samlObject.credentialToken;\n\t\t\t\t\tconst loginResult = {\n\t\t\t\t\t\tprofile\n\t\t\t\t\t};\n\t\t\t\t\tif (!credentialToken) {\n\t\t\t\t\t\t// No credentialToken in IdP-initiated SSO\n\t\t\t\t\t\tconst saml_idp_credentialToken = Random.id();\n\t\t\t\t\t\tAccounts.saml.storeCredential(saml_idp_credentialToken, loginResult);\n\n\t\t\t\t\t\tconst url = `${ Meteor.absoluteUrl('home') }?saml_idp_credentialToken=${ saml_idp_credentialToken }`;\n\t\t\t\t\t\tres.writeHead(302, {\n\t\t\t\t\t\t\t'Location': url\n\t\t\t\t\t\t});\n\t\t\t\t\t\tres.end();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tAccounts.saml.storeCredential(credentialToken, loginResult);\n\t\t\t\t\t\tclosePopup(res);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unexpected SAML action ${ samlObject.actionName }`);\n\n\t\t}\n\t} catch (err) {\n\t\tclosePopup(res, err);\n\t}\n};\n\n// Listen to incoming SAML http requests\nWebApp.connectHandlers.use(connect.bodyParser()).use(function(req, res, next) {\n\t// Need to create a fiber since we're using synchronous http calls and nothing\n\t// else is wrapping this in a fiber automatically\n\tfiber(function() {\n\t\tmiddleware(req, res, next);\n\t}).run();\n});\n","/* globals SAML:true */\n\nimport zlib from 'zlib';\nimport xml2js from 'xml2js';\nimport xmlCrypto from 'xml-crypto';\nimport crypto from 'crypto';\nimport xmldom from 'xmldom';\nimport querystring from 'querystring';\nimport xmlbuilder from 'xmlbuilder';\n\n// var prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n\nSAML = function(options) {\n\tthis.options = this.initialize(options);\n};\n\n// var stripPrefix = function(str) {\n// \treturn str.replace(prefixMatch, '');\n// };\n\nSAML.prototype.initialize = function(options) {\n\tif (!options) {\n\t\toptions = {};\n\t}\n\n\tif (!options.protocol) {\n\t\toptions.protocol = 'https://';\n\t}\n\n\tif (!options.path) {\n\t\toptions.path = '/saml/consume';\n\t}\n\n\tif (!options.issuer) {\n\t\toptions.issuer = 'onelogin_saml';\n\t}\n\n\tif (options.identifierFormat === undefined) {\n\t\toptions.identifierFormat = 'urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress';\n\t}\n\n\tif (options.authnContext === undefined) {\n\t\toptions.authnContext = 'urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport';\n\t}\n\n\treturn options;\n};\n\nSAML.prototype.generateUniqueID = function() {\n\tconst chars = 'abcdef0123456789';\n\tlet uniqueID = 'id-';\n\tfor (let i = 0; i < 20; i++) {\n\t\tuniqueID += chars.substr(Math.floor((Math.random() * 15)), 1);\n\t}\n\treturn uniqueID;\n};\n\nSAML.prototype.generateInstant = function() {\n\treturn new Date().toISOString();\n};\n\nSAML.prototype.signRequest = function(xml) {\n\tconst signer = crypto.createSign('RSA-SHA1');\n\tsigner.update(xml);\n\treturn signer.sign(this.options.privateKey, 'base64');\n};\n\nSAML.prototype.generateAuthorizeRequest = function(req) {\n\tlet id = `_${ this.generateUniqueID() }`;\n\tconst instant = this.generateInstant();\n\n\t// Post-auth destination\n\tlet callbackUrl;\n\tif (this.options.callbackUrl) {\n\t\tcallbackUrl = this.options.callbackUrl;\n\t} else {\n\t\tcallbackUrl = this.options.protocol + req.headers.host + this.options.path;\n\t}\n\n\tif (this.options.id) {\n\t\tid = this.options.id;\n\t}\n\n\tlet request =\n\t\t`<samlp:AuthnRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" ID=\"${ id }\" Version=\"2.0\" IssueInstant=\"${ instant\n\t\t}\" ProtocolBinding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" AssertionConsumerServiceURL=\"${ callbackUrl }\" Destination=\"${\n\t\t\tthis.options.entryPoint }\">` +\n\t\t`<saml:Issuer xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\">${ this.options.issuer }</saml:Issuer>\\n`;\n\n\tif (this.options.identifierFormat) {\n\t\trequest += `<samlp:NameIDPolicy xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" Format=\"${ this.options.identifierFormat\n\t\t}\" AllowCreate=\"true\"></samlp:NameIDPolicy>\\n`;\n\t}\n\n\trequest +=\n\t\t'<samlp:RequestedAuthnContext xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" Comparison=\"exact\">' +\n\t\t'<saml:AuthnContextClassRef xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\">urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport</saml:AuthnContextClassRef></samlp:RequestedAuthnContext>\\n' +\n\t\t'</samlp:AuthnRequest>';\n\n\treturn request;\n};\n\nSAML.prototype.generateLogoutRequest = function(options) {\n\t// options should be of the form\n\t// nameId: <nameId as submitted during SAML SSO>\n\t// sessionIndex: sessionIndex\n\t// --- NO SAMLsettings: <Meteor.setting.saml  entry for the provider you want to SLO from\n\n\tconst id = `_${ this.generateUniqueID() }`;\n\tconst instant = this.generateInstant();\n\n\tlet request = `${ '<samlp:LogoutRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" ' +\n\t\t'xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" ID=\"' }${ id }\" Version=\"2.0\" IssueInstant=\"${ instant\n\t}\" Destination=\"${ this.options.idpSLORedirectURL }\">` +\n\t\t`<saml:Issuer xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\">${ this.options.issuer }</saml:Issuer>` +\n\t\t`<saml:NameID Format=\"${ this.options.identifierFormat }\">${ options.nameID }</saml:NameID>` +\n\t\t'</samlp:LogoutRequest>';\n\n\trequest = `${ '<samlp:LogoutRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\"  ' +\n\t\t'ID=\"' }${ id }\" ` +\n\t\t'Version=\"2.0\" ' +\n\t\t`IssueInstant=\"${ instant }\" ` +\n\t\t`Destination=\"${ this.options.idpSLORedirectURL }\" ` +\n\t\t'>' +\n\t\t`<saml:Issuer xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\">${ this.options.issuer }</saml:Issuer>` +\n\t\t'<saml:NameID xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" ' +\n\t\t'NameQualifier=\"http://id.init8.net:8080/openam\" ' +\n\t\t`SPNameQualifier=\"${ this.options.issuer }\" ` +\n\t\t`Format=\"${ this.options.identifierFormat }\">${\n\t\t\toptions.nameID }</saml:NameID>` +\n\t\t`<samlp:SessionIndex xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\">${ options.sessionIndex }</samlp:SessionIndex>` +\n\t\t'</samlp:LogoutRequest>';\n\tif (Meteor.settings.debug) {\n\t\tconsole.log('------- SAML Logout request -----------');\n\t\tconsole.log(request);\n\t}\n\treturn {\n\t\trequest,\n\t\tid\n\t};\n};\n\nSAML.prototype.requestToUrl = function(request, operation, callback) {\n\tconst self = this;\n\tzlib.deflateRaw(request, function(err, buffer) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tconst base64 = buffer.toString('base64');\n\t\tlet target = self.options.entryPoint;\n\n\t\tif (operation === 'logout') {\n\t\t\tif (self.options.idpSLORedirectURL) {\n\t\t\t\ttarget = self.options.idpSLORedirectURL;\n\t\t\t}\n\t\t}\n\n\t\tif (target.indexOf('?') > 0) {\n\t\t\ttarget += '&';\n\t\t} else {\n\t\t\ttarget += '?';\n\t\t}\n\n\t\t// TBD. We should really include a proper RelayState here\n\t\tlet relayState;\n\t\tif (operation === 'logout') {\n\t\t\t// in case of logout we want to be redirected back to the Meteor app.\n\t\t\trelayState = Meteor.absoluteUrl();\n\t\t} else {\n\t\t\trelayState = self.options.provider;\n\t\t}\n\n\t\tconst samlRequest = {\n\t\t\tSAMLRequest: base64,\n\t\t\tRelayState: relayState\n\t\t};\n\n\t\tif (self.options.privateCert) {\n\t\t\tsamlRequest.SigAlg = 'http://www.w3.org/2000/09/xmldsig#rsa-sha1';\n\t\t\tsamlRequest.Signature = self.signRequest(querystring.stringify(samlRequest));\n\t\t}\n\n\t\ttarget += querystring.stringify(samlRequest);\n\n\t\tif (Meteor.settings.debug) {\n\t\t\tconsole.log(`requestToUrl: ${ target }`);\n\t\t}\n\t\tif (operation === 'logout') {\n\t\t\t// in case of logout we want to be redirected back to the Meteor app.\n\t\t\treturn callback(null, target);\n\n\t\t} else {\n\t\t\tcallback(null, target);\n\t\t}\n\t});\n};\n\nSAML.prototype.getAuthorizeUrl = function(req, callback) {\n\tconst request = this.generateAuthorizeRequest(req);\n\n\tthis.requestToUrl(request, 'authorize', callback);\n};\n\nSAML.prototype.getLogoutUrl = function(req, callback) {\n\tconst request = this.generateLogoutRequest(req);\n\n\tthis.requestToUrl(request, 'logout', callback);\n};\n\nSAML.prototype.certToPEM = function(cert) {\n\tcert = cert.match(/.{1,64}/g).join('\\n');\n\tcert = `-----BEGIN CERTIFICATE-----\\n${ cert }`;\n\tcert = `${ cert }\\n-----END CERTIFICATE-----\\n`;\n\treturn cert;\n};\n\n// functionfindChilds(node, localName, namespace) {\n// \tvar res = [];\n// \tfor (var i = 0; i < node.childNodes.length; i++) {\n// \t\tvar child = node.childNodes[i];\n// \t\tif (child.localName === localName && (child.namespaceURI === namespace || !namespace)) {\n// \t\t\tres.push(child);\n// \t\t}\n// \t}\n// \treturn res;\n// }\n\nSAML.prototype.validateSignature = function(xml, cert) {\n\tconst self = this;\n\n\tconst doc = new xmldom.DOMParser().parseFromString(xml);\n\tconst signature = xmlCrypto.xpath(doc, '//*[local-name(.)=\\'Signature\\' and namespace-uri(.)=\\'http://www.w3.org/2000/09/xmldsig#\\']')[0];\n\n\tconst sig = new xmlCrypto.SignedXml();\n\n\tsig.keyInfoProvider = {\n\t\tgetKeyInfo(/*key*/) {\n\t\t\treturn '<X509Data></X509Data>';\n\t\t},\n\t\tgetKey(/*keyInfo*/) {\n\t\t\treturn self.certToPEM(cert);\n\t\t}\n\t};\n\n\tsig.loadSignature(signature);\n\n\treturn sig.checkSignature(xml);\n};\n\nSAML.prototype.getElement = function(parentElement, elementName) {\n\tif (parentElement[`saml:${ elementName }`]) {\n\t\treturn parentElement[`saml:${ elementName }`];\n\t} else if (parentElement[`samlp:${ elementName }`]) {\n\t\treturn parentElement[`samlp:${ elementName }`];\n\t} else if (parentElement[`saml2p:${ elementName }`]) {\n\t\treturn parentElement[`saml2p:${ elementName }`];\n\t} else if (parentElement[`saml2:${ elementName }`]) {\n\t\treturn parentElement[`saml2:${ elementName }`];\n\t} else if (parentElement[`ns0:${ elementName }`]) {\n\t\treturn parentElement[`ns0:${ elementName }`];\n\t} else if (parentElement[`ns1:${ elementName }`]) {\n\t\treturn parentElement[`ns1:${ elementName }`];\n\t}\n\treturn parentElement[elementName];\n};\n\nSAML.prototype.validateLogoutResponse = function(samlResponse, callback) {\n\tconst self = this;\n\n\tconst compressedSAMLResponse = new Buffer(samlResponse, 'base64');\n\tzlib.inflateRaw(compressedSAMLResponse, function(err, decoded) {\n\n\t\tif (err) {\n\t\t\tif (Meteor.settings.debug) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t} else {\n\t\t\tconst parser = new xml2js.Parser({\n\t\t\t\texplicitRoot: true\n\t\t\t});\n\t\t\tparser.parseString(decoded, function(err, doc) {\n\t\t\t\tconst response = self.getElement(doc, 'LogoutResponse');\n\n\t\t\t\tif (response) {\n\t\t\t\t\t// TBD. Check if this msg corresponds to one we sent\n\t\t\t\t\tconst inResponseTo = response.$.InResponseTo;\n\t\t\t\t\tif (Meteor.settings.debug) {\n\t\t\t\t\t\tconsole.log(`In Response to: ${ inResponseTo }`);\n\t\t\t\t\t}\n\t\t\t\t\tconst status = self.getElement(response, 'Status');\n\t\t\t\t\tconst statusCode = self.getElement(status[0], 'StatusCode')[0].$.Value;\n\t\t\t\t\tif (Meteor.settings.debug) {\n\t\t\t\t\t\tconsole.log(`StatusCode: ${ JSON.stringify(statusCode) }`);\n\t\t\t\t\t}\n\t\t\t\t\tif (statusCode === 'urn:oasis:names:tc:SAML:2.0:status:Success') {\n\t\t\t\t\t\t// In case of a successful logout at IDP we return inResponseTo value.\n\t\t\t\t\t\t// This is the only way how we can identify the Meteor user (as we don't use Session Cookies)\n\t\t\t\t\t\tcallback(null, inResponseTo);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback('Error. Logout not confirmed by IDP', null);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcallback('No Response Found', null);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t});\n};\n\nSAML.prototype.validateResponse = function(samlResponse, relayState, callback) {\n\tconst self = this;\n\tconst xml = new Buffer(samlResponse, 'base64').toString('utf8');\n\t// We currently use RelayState to save SAML provider\n\tif (Meteor.settings.debug) {\n\t\tconsole.log(`Validating response with relay state: ${ xml }`);\n\t}\n\tconst parser = new xml2js.Parser({\n\t\texplicitRoot: true,\n\t\txmlns:true\n\t});\n\n\tparser.parseString(xml, function(err, doc) {\n\t\t// Verify signature\n\t\tif (Meteor.settings.debug) {\n\t\t\tconsole.log('Verify signature');\n\t\t}\n\t\tif (self.options.cert && !self.validateSignature(xml, self.options.cert)) {\n\t\t\tif (Meteor.settings.debug) {\n\t\t\t\tconsole.log('Signature WRONG');\n\t\t\t}\n\t\t\treturn callback(new Error('Invalid signature'), null, false);\n\t\t}\n\t\tif (Meteor.settings.debug) {\n\t\t\tconsole.log('Signature OK');\n\t\t}\n\t\tconst response = self.getElement(doc, 'Response');\n\t\tif (Meteor.settings.debug) {\n\t\t\tconsole.log('Got response');\n\t\t}\n\t\tif (response) {\n\t\t\tconst assertion = self.getElement(response, 'Assertion');\n\t\t\tif (!assertion) {\n\t\t\t\treturn callback(new Error('Missing SAML assertion'), null, false);\n\t\t\t}\n\n\t\t\tconst profile = {};\n\n\t\t\tif (response.$ && response.$.InResponseTo) {\n\t\t\t\tprofile.inResponseToId = response.$.InResponseTo;\n\t\t\t}\n\n\t\t\tconst issuer = self.getElement(assertion[0], 'Issuer');\n\t\t\tif (issuer) {\n\t\t\t\tprofile.issuer = issuer[0]._;\n\t\t\t}\n\n\t\t\tconst subject = self.getElement(assertion[0], 'Subject');\n\n\t\t\tif (subject) {\n\t\t\t\tconst nameID = self.getElement(subject[0], 'NameID');\n\t\t\t\tif (nameID) {\n\t\t\t\t\tprofile.nameID = nameID[0]._;\n\n\t\t\t\t\tif (nameID[0].$.Format) {\n\t\t\t\t\t\tprofile.nameIDFormat = nameID[0].$.Format;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst authnStatement = self.getElement(assertion[0], 'AuthnStatement');\n\n\t\t\tif (authnStatement) {\n\t\t\t\tif (authnStatement[0].$.SessionIndex) {\n\n\t\t\t\t\tprofile.sessionIndex = authnStatement[0].$.SessionIndex;\n\t\t\t\t\tif (Meteor.settings.debug) {\n\t\t\t\t\t\tconsole.log(`Session Index: ${ profile.sessionIndex }`);\n\t\t\t\t\t}\n\t\t\t\t} else if (Meteor.settings.debug) {\n\t\t\t\t\tconsole.log('No Session Index Found');\n\t\t\t\t}\n\n\n\t\t\t} else if (Meteor.settings.debug) {\n\t\t\t\tconsole.log('No AuthN Statement found');\n\t\t\t}\n\n\t\t\tconst attributeStatement = self.getElement(assertion[0], 'AttributeStatement');\n\t\t\tif (attributeStatement) {\n\t\t\t\tconst attributes = self.getElement(attributeStatement[0], 'Attribute');\n\n\t\t\t\tif (attributes) {\n\t\t\t\t\tattributes.forEach(function(attribute) {\n\t\t\t\t\t\tconst value = self.getElement(attribute, 'AttributeValue');\n\t\t\t\t\t\tconst key = attribute.$.Name.value;\n\t\t\t\t\t\tif (typeof value[0] === 'string') {\n\t\t\t\t\t\t\tprofile[key] = value[0];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprofile[key] = value[0]._;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (!profile.mail && profile['urn:oid:0.9.2342.19200300.100.1.3']) {\n\t\t\t\t\t// See http://www.incommonfederation.org/attributesummary.html for definition of attribute OIDs\n\t\t\t\t\tprofile.mail = profile['urn:oid:0.9.2342.19200300.100.1.3'];\n\t\t\t\t}\n\n\t\t\t\tif (!profile.email && profile.mail) {\n\t\t\t\t\tprofile.email = profile.mail;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!profile.email && profile.nameID && (profile.nameIDFormat && profile.nameIDFormat.value != null ? profile.nameIDFormat.value : profile.nameIDFormat).indexOf('emailAddress') >= 0) {\n\t\t\t\tprofile.email = profile.nameID;\n\t\t\t}\n\t\t\tif (Meteor.settings.debug) {\n\t\t\t\tconsole.log(`NameID: ${ JSON.stringify(profile) }`);\n\t\t\t}\n\n\t\t\tconst profileKeys = Object.keys(profile);\n\t\t\tfor (let i = 0; i < profileKeys.length; i++) {\n\t\t\t\tconst key = profileKeys[i];\n\n\t\t\t\tif (key.match(/\\./)) {\n\t\t\t\t\tprofile[key.replace(/\\./g, '-')] = profile[key];\n\t\t\t\t\tdelete profile[key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcallback(null, profile, false);\n\t\t} else {\n\t\t\tconst logoutResponse = self.getElement(doc, 'LogoutResponse');\n\n\t\t\tif (logoutResponse) {\n\t\t\t\tcallback(null, null, true);\n\t\t\t} else {\n\t\t\t\treturn callback(new Error('Unknown SAML response message'), null, false);\n\t\t\t}\n\n\t\t}\n\t});\n};\n\nlet decryptionCert;\nSAML.prototype.generateServiceProviderMetadata = function(callbackUrl) {\n\n\tif (!decryptionCert) {\n\t\tdecryptionCert = this.options.privateCert;\n\t}\n\n\tif (!this.options.callbackUrl && !callbackUrl) {\n\t\tthrow new Error(\n\t\t\t'Unable to generate service provider metadata when callbackUrl option is not set');\n\t}\n\n\tconst metadata = {\n\t\t'EntityDescriptor': {\n\t\t\t'@xmlns': 'urn:oasis:names:tc:SAML:2.0:metadata',\n\t\t\t'@xmlns:ds': 'http://www.w3.org/2000/09/xmldsig#',\n\t\t\t'@entityID': this.options.issuer,\n\t\t\t'SPSSODescriptor': {\n\t\t\t\t'@protocolSupportEnumeration': 'urn:oasis:names:tc:SAML:2.0:protocol',\n\t\t\t\t'SingleLogoutService': {\n\t\t\t\t\t'@Binding': 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect',\n\t\t\t\t\t'@Location': `${ Meteor.absoluteUrl() }_saml/logout/${ this.options.provider }/`,\n\t\t\t\t\t'@ResponseLocation': `${ Meteor.absoluteUrl() }_saml/logout/${ this.options.provider }/`\n\t\t\t\t},\n\t\t\t\t'NameIDFormat': this.options.identifierFormat,\n\t\t\t\t'AssertionConsumerService': {\n\t\t\t\t\t'@index': '1',\n\t\t\t\t\t'@isDefault': 'true',\n\t\t\t\t\t'@Binding': 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST',\n\t\t\t\t\t'@Location': callbackUrl\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tif (this.options.privateKey) {\n\t\tif (!decryptionCert) {\n\t\t\tthrow new Error(\n\t\t\t\t'Missing decryptionCert while generating metadata for decrypting service provider');\n\t\t}\n\n\t\tdecryptionCert = decryptionCert.replace(/-+BEGIN CERTIFICATE-+\\r?\\n?/, '');\n\t\tdecryptionCert = decryptionCert.replace(/-+END CERTIFICATE-+\\r?\\n?/, '');\n\t\tdecryptionCert = decryptionCert.replace(/\\r\\n/g, '\\n');\n\n\t\tmetadata['EntityDescriptor']['SPSSODescriptor']['KeyDescriptor'] = {\n\t\t\t'ds:KeyInfo': {\n\t\t\t\t'ds:X509Data': {\n\t\t\t\t\t'ds:X509Certificate': {\n\t\t\t\t\t\t'#text': decryptionCert\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'#list': [\n\t\t\t\t// this should be the set that the xmlenc library supports\n\t\t\t\t{\n\t\t\t\t\t'EncryptionMethod': {\n\t\t\t\t\t\t'@Algorithm': 'http://www.w3.org/2001/04/xmlenc#aes256-cbc'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'EncryptionMethod': {\n\t\t\t\t\t\t'@Algorithm': 'http://www.w3.org/2001/04/xmlenc#aes128-cbc'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'EncryptionMethod': {\n\t\t\t\t\t\t'@Algorithm': 'http://www.w3.org/2001/04/xmlenc#tripledes-cbc'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n\treturn xmlbuilder.create(metadata).end({\n\t\tpretty: true,\n\t\tindent: '  ',\n\t\tnewline: '\\n'\n\t});\n};\n","const logger = new Logger('steffo:meteor-accounts-saml', {\n\tmethods: {\n\t\tupdated: {\n\t\t\ttype: 'info'\n\t\t}\n\t}\n});\n\nRocketChat.settings.addGroup('SAML');\n\nMeteor.methods({\n\taddSamlService(name) {\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }`, false, {\n\t\t\ttype: 'boolean',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Enable'\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_provider`, 'provider-name', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'SAML_Custom_Provider'\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_entry_point`, 'https://example.com/simplesaml/saml2/idp/SSOService.php', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'SAML_Custom_Entry_point'\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_idp_slo_redirect_url`, 'https://example.com/simplesaml/saml2/idp/SingleLogoutService.php', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'SAML_Custom_IDP_SLO_Redirect_URL'\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_issuer`, 'https://your-rocket-chat/_saml/metadata/provider-name', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'SAML_Custom_Issuer'\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_cert`, '', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'SAML_Custom_Cert',\n\t\t\tmultiline: true\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_public_cert`, '', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\tmultiline: true,\n\t\t\ti18nLabel: 'SAML_Custom_Public_Cert'\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_private_key`, '', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\tmultiline: true,\n\t\t\ti18nLabel: 'SAML_Custom_Private_Key'\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_button_label_text`, '', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Label_Text'\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_button_label_color`, '#FFFFFF', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Label_Color'\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_button_color`, '#13679A', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Color'\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_generate_username`, false, {\n\t\t\ttype: 'boolean',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'SAML_Custom_Generate_Username'\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_logout_behaviour`, 'SAML', {\n\t\t\ttype: 'select',\n\t\t\tvalues: [\n\t\t\t\t{key: 'SAML', i18nLabel: 'SAML_Custom_Logout_Behaviour_Terminate_SAML_Session'},\n\t\t\t\t{key: 'Local', i18nLabel: 'SAML_Custom_Logout_Behaviour_End_Only_RocketChat'}\n\t\t\t],\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'SAML_Custom_Logout_Behaviour'\n\t\t});\n\t}\n});\n\nconst getSamlConfigs = function(service) {\n\treturn {\n\t\tbuttonLabelText: RocketChat.settings.get(`${ service.key }_button_label_text`),\n\t\tbuttonLabelColor: RocketChat.settings.get(`${ service.key }_button_label_color`),\n\t\tbuttonColor: RocketChat.settings.get(`${ service.key }_button_color`),\n\t\tclientConfig: {\n\t\t\tprovider: RocketChat.settings.get(`${ service.key }_provider`)\n\t\t},\n\t\tentryPoint: RocketChat.settings.get(`${ service.key }_entry_point`),\n\t\tidpSLORedirectURL: RocketChat.settings.get(`${ service.key }_idp_slo_redirect_url`),\n\t\tgenerateUsername: RocketChat.settings.get(`${ service.key }_generate_username`),\n\t\tissuer: RocketChat.settings.get(`${ service.key }_issuer`),\n\t\tlogoutBehaviour: RocketChat.settings.get(`${ service.key }_logout_behaviour`),\n\t\tsecret: {\n\t\t\tprivateKey: RocketChat.settings.get(`${ service.key }_private_key`),\n\t\t\tpublicCert: RocketChat.settings.get(`${ service.key }_public_cert`),\n\t\t\tcert: RocketChat.settings.get(`${ service.key }_cert`)\n\t\t}\n\t};\n};\n\nconst debounce = (fn, delay) => {\n\tlet timer = null;\n\treturn () => {\n\t\tif (timer != null) {\n\t\t\tMeteor.clearTimeout(timer);\n\t\t}\n\t\treturn timer = Meteor.setTimeout(fn, delay);\n\t};\n};\nconst serviceName = 'saml';\n\nconst configureSamlService = function(samlConfigs) {\n\tlet privateCert = false;\n\tlet privateKey = false;\n\tif (samlConfigs.secret.privateKey && samlConfigs.secret.publicCert) {\n\t\tprivateKey = samlConfigs.secret.privateKey;\n\t\tprivateCert = samlConfigs.secret.publicCert;\n\t} else if (samlConfigs.secret.privateKey || samlConfigs.secret.publicCert) {\n\t\tlogger.error('You must specify both cert and key files.');\n\t}\n\t// TODO: the function configureSamlService is called many times and Accounts.saml.settings.generateUsername keeps just the last value\n\tAccounts.saml.settings.generateUsername = samlConfigs.generateUsername;\n\treturn {\n\t\tprovider: samlConfigs.clientConfig.provider,\n\t\tentryPoint: samlConfigs.entryPoint,\n\t\tidpSLORedirectURL: samlConfigs.idpSLORedirectURL,\n\t\tissuer: samlConfigs.issuer,\n\t\tcert: samlConfigs.secret.cert,\n\t\tprivateCert,\n\t\tprivateKey\n\t};\n};\n\nconst updateServices = debounce(() => {\n\tconst services = RocketChat.settings.get(/^(SAML_Custom_)[a-z]+$/i);\n\tAccounts.saml.settings.providers = services.map((service) => {\n\t\tif (service.value === true) {\n\t\t\tconst samlConfigs = getSamlConfigs(service);\n\t\t\tlogger.updated(service.key);\n\t\t\tServiceConfiguration.configurations.upsert({\n\t\t\t\tservice: serviceName.toLowerCase()\n\t\t\t}, {\n\t\t\t\t$set: samlConfigs\n\t\t\t});\n\t\t\treturn configureSamlService(samlConfigs);\n\t\t} else {\n\t\t\tServiceConfiguration.configurations.remove({\n\t\t\t\tservice: serviceName.toLowerCase()\n\t\t\t});\n\t\t}\n\t}).filter(e => e);\n}, 2000);\n\n\nRocketChat.settings.get(/^SAML_.+/, updateServices);\n\nMeteor.startup(() => {\n\treturn Meteor.call('addSamlService', 'Default');\n});\n\nexport {\n\tupdateServices,\n\tconfigureSamlService,\n\tgetSamlConfigs,\n\tdebounce,\n\tlogger\n};\n"]}