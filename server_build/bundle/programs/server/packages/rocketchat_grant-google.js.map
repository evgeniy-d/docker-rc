{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:grant-google/server/index.js"],"names":["module","export","getUser","Providers","GrantError","watch","require","v","HTTP","userAgent","getIdentity","accessToken","get","headers","params","access_token","data","err","message","whitelisted","identity","username","given_name","toLowerCase","family_name","id","email","name","avatar","picture","register","scope"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,WAAQ,MAAIA;AAAb,CAAd;AAAqC,IAAIC,SAAJ,EAAcC,UAAd;AAAyBJ,OAAOK,KAAP,CAAaC,QAAQ,yBAAR,CAAb,EAAgD;AAACH,YAAUI,CAAV,EAAY;AAACJ,gBAAUI,CAAV;AAAY,GAA1B;;AAA2BH,aAAWG,CAAX,EAAa;AAACH,iBAAWG,CAAX;AAAa;;AAAtD,CAAhD,EAAwG,CAAxG;AAA2G,IAAIC,IAAJ;AAASR,OAAOK,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACE,OAAKD,CAAL,EAAO;AAACC,WAAKD,CAAL;AAAO;;AAAhB,CAApC,EAAsD,CAAtD;AAGlL,MAAME,YAAY,QAAlB;;AAEA,SAASC,WAAT,CAAqBC,WAArB,EAAkC;AACjC,MAAI;AACH,WAAOH,KAAKI,GAAL,CACN,+CADM,EAC2C;AAChDC,eAAS;AAAE,sBAAcJ;AAAhB,OADuC;AAEhDK,cAAQ;AACPC,sBAAcJ;AADP;AAFwC,KAD3C,EAMHK,IANJ;AAOA,GARD,CAQE,OAAOC,GAAP,EAAY;AACb,UAAM,IAAIb,UAAJ,CAAgB,yCAAyCa,IAAIC,OAAS,EAAtE,CAAN;AACA;AACD;;AAEM,SAAShB,OAAT,CAAiBS,WAAjB,EAA8B;AACpC,QAAMQ,cAAc,CACnB,IADmB,EACb,OADa,EACJ,gBADI,EACc,MADd,EAEnB,YAFmB,EAEL,aAFK,EAEU,SAFV,CAApB;AAIA,QAAMC,WAAWV,YAAYC,WAAZ,EAAyBQ,WAAzB,CAAjB;AACA,QAAME,WAAY,GAAGD,SAASE,UAAT,CAAoBC,WAApB,EAAmC,IAAIH,SAASI,WAAT,CAAqBD,WAArB,EAAoC,EAAhG;AAEA,SAAO;AACNE,QAAIL,SAASK,EADP;AAENC,WAAON,SAASM,KAFV;AAGNL,YAHM;AAINM,UAAMP,SAASO,IAJT;AAKNC,YAAQR,SAASS;AALX,GAAP;AAOA;;AAED;AACA1B,UAAU2B,QAAV,CAAmB,QAAnB,EAA6B;AAAEC,SAAO,CAAC,QAAD,EAAW,OAAX;AAAT,CAA7B,EAA6D7B,OAA7D,E","file":"/packages/rocketchat_grant-google.js","sourcesContent":["import { Providers, GrantError } from 'meteor/rocketchat:grant';\nimport { HTTP } from 'meteor/http';\n\nconst userAgent = 'Meteor';\n\nfunction getIdentity(accessToken) {\n\ttry {\n\t\treturn HTTP.get(\n\t\t\t'https://www.googleapis.com/oauth2/v1/userinfo', {\n\t\t\t\theaders: { 'User-Agent': userAgent },\n\t\t\t\tparams: {\n\t\t\t\t\taccess_token: accessToken\n\t\t\t\t}\n\t\t\t}).data;\n\t} catch (err) {\n\t\tthrow new GrantError(`Failed to fetch identity from Google. ${ err.message }`);\n\t}\n}\n\nexport function getUser(accessToken) {\n\tconst whitelisted = [\n\t\t'id', 'email', 'verified_email', 'name',\n\t\t'given_name', 'family_name', 'picture'\n\t];\n\tconst identity = getIdentity(accessToken, whitelisted);\n\tconst username = `${ identity.given_name.toLowerCase() }.${ identity.family_name.toLowerCase() }`;\n\n\treturn {\n\t\tid: identity.id,\n\t\temail: identity.email,\n\t\tusername,\n\t\tname: identity.name,\n\t\tavatar: identity.picture\n\t};\n}\n\n// Register Google OAuth\nProviders.register('google', { scope: ['openid', 'email'] }, getUser);\n"]}