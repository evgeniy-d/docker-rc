{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:gitlab/common.js","meteor://ðŸ’»app/packages/rocketchat:gitlab/startup.js"],"names":["config","serverURL","identityPath","scope","addAutopublishFields","forLoggedInUser","forOtherUsers","Gitlab","CustomOAuth","Meteor","isServer","startup","RocketChat","settings","get","key","value","trim","replace","configure","Tracker","autorun","addGroup","section","enableQuery","_id","add","type","public","readonly","force"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,MAAMA,SAAS;AACdC,aAAW,oBADG;AAEdC,gBAAc,cAFA;AAGdC,SAAO,WAHO;AAIdC,wBAAsB;AACrBC,qBAAiB,CAAC,iBAAD,CADI;AAErBC,mBAAe,CAAC,0BAAD;AAFM;AAJR,CAAf;AAUA,MAAMC,SAAS,IAAIC,WAAJ,CAAgB,QAAhB,EAA0BR,MAA1B,CAAf;;AAEA,IAAIS,OAAOC,QAAX,EAAqB;AACpBD,SAAOE,OAAP,CAAe,YAAW;AACzBC,eAAWC,QAAX,CAAoBC,GAApB,CAAwB,gBAAxB,EAA0C,UAASC,GAAT,EAAcC,KAAd,EAAqB;AAC9DhB,aAAOC,SAAP,GAAmBe,MAAMC,IAAN,GAAaC,OAAb,CAAqB,MAArB,EAA6B,EAA7B,CAAnB;AACAX,aAAOY,SAAP,CAAiBnB,MAAjB;AACA,KAHD;AAIA,GALD;AAMA,CAPD,MAOO;AACNS,SAAOE,OAAP,CAAe,YAAW;AACzBS,YAAQC,OAAR,CAAgB,YAAW;AAC1B,UAAIT,WAAWC,QAAX,CAAoBC,GAApB,CAAwB,gBAAxB,CAAJ,EAA+C;AAC9Cd,eAAOC,SAAP,GAAmBW,WAAWC,QAAX,CAAoBC,GAApB,CAAwB,gBAAxB,EAA0CG,IAA1C,GAAiDC,OAAjD,CAAyD,MAAzD,EAAiE,EAAjE,CAAnB;AACAX,eAAOY,SAAP,CAAiBnB,MAAjB;AACA;AACD,KALD;AAMA,GAPD;AAQA,C;;;;;;;;;;;AC7BDY,WAAWC,QAAX,CAAoBS,QAApB,CAA6B,OAA7B,EAAsC,YAAW;AAChD,OAAKC,OAAL,CAAa,QAAb,EAAuB,YAAW;AACjC,UAAMC,cAAc;AACnBC,WAAK,uBADc;AAEnBT,aAAO;AAFY,KAApB;AAKA,SAAKU,GAAL,CAAS,uBAAT,EAAkC,KAAlC,EAAyC;AAAEC,YAAM,SAAR;AAAmBC,cAAQ;AAA3B,KAAzC;AACA,SAAKF,GAAL,CAAS,gBAAT,EAA2B,EAA3B,EAA+B;AAAEC,YAAM,QAAR;AAAkBH,iBAAlB;AAA+BI,cAAQ;AAAvC,KAA/B;AACA,SAAKF,GAAL,CAAS,0BAAT,EAAqC,EAArC,EAAyC;AAAEC,YAAM,QAAR;AAAkBH;AAAlB,KAAzC;AACA,SAAKE,GAAL,CAAS,8BAAT,EAAyC,EAAzC,EAA6C;AAAEC,YAAM,QAAR;AAAkBH;AAAlB,KAA7C;AACA,SAAKE,GAAL,CAAS,oCAAT,EAA+C,eAA/C,EAAgE;AAAEC,YAAM,aAAR;AAAuBE,gBAAU,IAAjC;AAAuCC,aAAO,IAA9C;AAAoDN;AAApD,KAAhE;AACA,GAXD;AAYA,CAbD,E","file":"/packages/rocketchat_gitlab.js","sourcesContent":["/* global CustomOAuth */\nconst config = {\n\tserverURL: 'https://gitlab.com',\n\tidentityPath: '/api/v3/user',\n\tscope: 'read_user',\n\taddAutopublishFields: {\n\t\tforLoggedInUser: ['services.gitlab'],\n\t\tforOtherUsers: ['services.gitlab.username']\n\t}\n};\n\nconst Gitlab = new CustomOAuth('gitlab', config);\n\nif (Meteor.isServer) {\n\tMeteor.startup(function() {\n\t\tRocketChat.settings.get('API_Gitlab_URL', function(key, value) {\n\t\t\tconfig.serverURL = value.trim().replace(/\\/*$/, '');\n\t\t\tGitlab.configure(config);\n\t\t});\n\t});\n} else {\n\tMeteor.startup(function() {\n\t\tTracker.autorun(function() {\n\t\t\tif (RocketChat.settings.get('API_Gitlab_URL')) {\n\t\t\t\tconfig.serverURL = RocketChat.settings.get('API_Gitlab_URL').trim().replace(/\\/*$/, '');\n\t\t\t\tGitlab.configure(config);\n\t\t\t}\n\t\t});\n\t});\n}\n","RocketChat.settings.addGroup('OAuth', function() {\n\tthis.section('GitLab', function() {\n\t\tconst enableQuery = {\n\t\t\t_id: 'Accounts_OAuth_Gitlab',\n\t\t\tvalue: true\n\t\t};\n\n\t\tthis.add('Accounts_OAuth_Gitlab', false, { type: 'boolean', public: true });\n\t\tthis.add('API_Gitlab_URL', '', { type: 'string', enableQuery, public: true });\n\t\tthis.add('Accounts_OAuth_Gitlab_id', '', { type: 'string', enableQuery });\n\t\tthis.add('Accounts_OAuth_Gitlab_secret', '', { type: 'string', enableQuery });\n\t\tthis.add('Accounts_OAuth_Gitlab_callback_url', '_oauth/gitlab', { type: 'relativeUrl', readonly: true, force: true, enableQuery });\n\t});\n});\n"]}